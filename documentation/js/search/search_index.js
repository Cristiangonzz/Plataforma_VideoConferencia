var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AudioConferenciaController.html",[0,1.847,1,2.964]],["body/controllers/AudioConferenciaController.html",[0,1.671,1,3.781,2,1.671,3,0.112,4,0.099,5,0.099,6,4.544,7,2.912,8,2.681,9,4.544,10,0.137,11,0.619,12,3.781,13,2.681,14,5.016,15,1.486,16,0.013,17,2.681,18,3.781,19,3.692,20,0.306,21,3.692,22,0.404,23,0.37,24,0.163,25,0.37,26,2.177,27,0.619,28,1.042,29,0.444,30,2.681,31,2.681,32,0.781,33,4.107,34,0.707,35,3.828,36,3.222,37,2.211,38,3.304,39,3.222,40,2.681,41,2.343,42,2.912,43,3.222,44,3.924,45,3.222,46,3.119,47,3.692,48,2.096,49,2.681,50,3.692,51,2.497,52,2.497,53,3.781,54,2.681,55,2.497,56,3.692,57,3.692,58,0.112,59,0.046,60,0.756,61,2.096,62,1.216,63,3.692,64,2.681,65,3.692,66,2.912,67,3.692,68,3.222,69,3.692,70,3.222,71,3.222,72,3.692,73,2.681,74,3.692,75,3.692,76,1.286,77,2.343,78,1.432,79,3.692,80,1.177,81,3.692,82,1.741,83,3.692,84,3.222,85,0.008,86,0.008]],["title/injectables/AudioConferenciaCreadaPublisher.html",[38,2.59,87,0.681]],["body/injectables/AudioConferenciaCreadaPublisher.html",[3,0.134,4,0.119,5,0.119,10,0.165,11,0.701,16,0.013,20,0.489,22,0.645,23,0.591,24,0.261,25,0.591,27,0.527,28,1.145,29,0.391,32,0.937,34,0.847,38,3.743,40,4.816,41,4.209,58,0.134,59,0.055,60,1.207,61,1.782,62,1.034,80,1.001,82,2.089,85,0.009,86,0.009,87,0.984,88,1.49,89,5.232,90,3.493,91,3.533,92,2.514,93,4.015,94,4.428,95,3.349,96,2.652,97,0.922,98,4.428,99,2.089,100,2.514,101,2.004,102,2.652,103,4.428,104,3.864,105,4.428,106,3.864,107,4.428,108,3.864,109,3.864,110,3.864]],["title/classes/AudioConferenciaDomainEntity.html",[46,2.445,59,0.051]],["body/classes/AudioConferenciaDomainEntity.html",[3,0.138,4,0.123,5,0.123,10,0.169,16,0.013,20,0.593,22,0.498,23,0.456,24,0.316,25,0.745,29,0.268,44,4.027,46,3.597,58,0.138,59,0.057,60,0.932,85,0.009,86,0.009,97,0.994,111,1.253,112,6.486,113,3.59,114,2.418,115,5.162,116,1.826,117,3.817,118,5.303,119,4.362,120,5.242,121,3.305,122,3.305,123,3.972,124,3.41,125,3.972,126,4.551,127,3.305,128,3.972,129,3.972,130,3.972,131,4.551,132,4.551,133,4.551,134,4.551,135,4.551,136,4.551]],["title/injectables/AudioConferenciaMongoService.html",[87,0.681,137,2.445]],["body/injectables/AudioConferenciaMongoService.html",[3,0.121,4,0.107,5,0.107,10,0.148,11,0.653,12,3.987,13,3.987,16,0.013,20,0.455,22,0.601,23,0.551,24,0.243,25,0.551,26,2.267,27,0.474,28,1.299,29,0.419,32,0.843,34,0.762,37,2.386,58,0.121,59,0.05,60,0.815,62,0.931,80,1.605,85,0.008,86,0.008,87,0.916,88,1.341,97,0.874,114,1.603,137,3.288,138,5.482,139,3.142,140,3.983,141,4.397,142,3.476,143,4.032,144,3.476,145,3.713,146,3.983,147,3.142,148,2.386,149,3.476,150,2.893,151,1.603,152,3.983,153,2.151,154,3.983,155,1.603,156,3.983,157,3.476,158,3.983,159,3.476,160,3.983]],["title/injectables/AudioConferenciaRepository.html",[87,0.681,141,2.445]],["body/injectables/AudioConferenciaRepository.html",[3,0.098,4,0.087,5,0.087,9,4.141,10,0.121,11,0.564,16,0.013,20,0.394,22,0.519,23,0.476,24,0.21,25,0.476,26,2.228,27,0.386,28,1.224,29,0.405,32,0.686,34,0.621,58,0.098,59,0.041,60,0.971,61,1.306,62,0.758,78,2.394,80,1.551,82,2.911,85,0.007,86,0.007,87,0.791,88,1.092,97,0.66,114,1.306,141,2.842,143,3.729,147,2.559,148,1.943,153,1.752,155,1.306,161,4.896,162,2.559,163,2.238,164,3.244,165,4.483,166,3.244,167,4.745,168,4.141,169,3.244,170,2.356,171,1.468,172,1.671,173,3.209,174,2.831,175,2.831,176,3.743,177,3.244,178,3.244,179,3.244,180,3.244,181,3.244,182,3.446,183,2.646,184,2.356,185,2.356,186,3.244,187,1.468,188,2.194,189,1.943,190,3.011,191,2.842,192,3.446,193,2.147,194,1.671,195,3.244]],["title/classes/AudioConferenciaSchema.html",[59,0.051,143,2.318]],["body/classes/AudioConferenciaSchema.html",[3,0.11,4,0.098,5,0.098,10,0.272,15,2.406,16,0.013,20,0.496,24,0.324,29,0.353,44,3.58,46,4.27,48,2.061,58,0.181,59,0.045,76,1.265,85,0.008,86,0.008,97,1.019,111,0.999,116,1.564,117,3.393,118,4.715,124,3.692,143,2.921,171,1.643,172,2.65,176,2.864,187,3.495,193,1.643,196,2.637,197,2.455,198,2.65,199,4.34,200,3.737,201,3.737,202,3.079,203,3.63,204,3.63,205,3.168,206,3.63,207,4.722,208,2.637,209,2.637,210,3.479,211,3.63,212,2.637,213,3.63,214,2.174,215,2.455,216,2.455,217,2.174,218,3.479,219,2.455,220,2.455,221,2.455,222,2.455,223,2.455,224,2.455,225,2.943,226,2.304,227,2.455,228,2.455,229,2.174,230,2.455,231,2.455,232,2.455,233,2.455,234,2.304,235,2.174,236,2.455,237,2.304,238,2.061,239,2.455,240,2.304,241,2.637,242,3.168]],["title/classes/AudioConferenciaService.html",[35,2.59,59,0.051]],["body/classes/AudioConferenciaService.html",[3,0.164,4,0.146,5,0.146,10,0.201,11,0.798,12,4.876,13,3.934,16,0.012,20,0.449,22,0.593,23,0.543,24,0.24,25,0.543,26,1.955,27,0.644,28,0.935,29,0.32,35,4.261,58,0.164,59,0.068,85,0.01,86,0.01,111,1.491,137,4.569,143,3.812,198,3.459,202,2.79,243,4.727,244,3.663,245,5.416,246,5.416,247,3.663]],["title/classes/BuscarEmpresaUseCase.html",[59,0.051,248,2.964]],["body/classes/BuscarEmpresaUseCase.html",[3,0.146,4,0.13,5,0.13,10,0.18,11,0.743,16,0.013,20,0.518,22,0.684,23,0.627,24,0.276,25,0.627,26,1.745,27,0.575,28,1.196,29,0.409,34,0.926,58,0.146,59,0.06,60,0.99,62,1.13,80,1.093,85,0.009,86,0.009,97,0.963,111,1.331,151,1.947,248,4.539,249,6.043,250,4.221,251,3.078,252,4.221,253,4.156,254,4.836,255,3.548,256,3.548,257,4.836,258,4.836,259,2.491,260,4.836,261,4.836]],["title/classes/BuscarMail.html",[59,0.051,262,2.76]],["body/classes/BuscarMail.html",[3,0.17,4,0.151,5,0.151,10,0.208,15,2.255,16,0.012,20,0.465,24,0.248,29,0.33,58,0.17,59,0.086,85,0.01,86,0.01,97,0.953,111,1.542,116,2.084,262,4.635,263,5.982,264,4.888,265,3.22,266,4.701,267,5.601,268,3.025]],["title/classes/BuscarPersonaUseCase.html",[59,0.051,269,2.76]],["body/classes/BuscarPersonaUseCase.html",[3,0.126,4,0.112,5,0.112,10,0.154,11,0.671,16,0.013,20,0.468,22,0.618,23,0.566,24,0.25,25,0.566,26,1.497,27,0.493,28,1.108,29,0.379,34,0.794,58,0.126,59,0.052,60,0.849,62,0.969,77,2.632,78,2.189,80,1.45,82,1.956,85,0.008,86,0.008,97,0.958,111,1.142,151,1.669,183,1.956,188,2.805,189,2.484,191,2.484,193,1.877,225,2.042,251,2.779,256,3.205,269,3.817,270,5.599,271,3.643,272,2.24,273,2.805,274,3.391,275,4.147,276,3.817,277,3.272,278,2.805,279,1.877,280,3.012,281,4.147,282,4.147,283,4.147,284,4.147,285,4.147,286,4.147,287,4.147,288,4.147,289,4.147,290,2.042,291,4.147,292,4.147]],["title/classes/CrearAudioConferenciaDTO.html",[14,2.964,59,0.051]],["body/classes/CrearAudioConferenciaDTO.html",[3,0.168,4,0.15,5,0.15,10,0.206,14,4.952,15,2.236,16,0.012,20,0.461,24,0.246,29,0.328,44,4.084,58,0.168,59,0.085,85,0.01,86,0.01,97,0.948,111,1.529,116,2.073,117,4.19,266,4.683,268,3,293,5.379,294,4.381,295,5.554]],["title/classes/CrearAudioConferenciaUseCase.html",[49,2.964,59,0.051]],["body/classes/CrearAudioConferenciaUseCase.html",[3,0.102,4,0.091,5,0.091,10,0.126,11,0.581,16,0.013,20,0.405,22,0.535,23,0.49,24,0.216,25,0.49,26,1.219,27,0.402,28,1.086,29,0.423,34,0.646,35,3.101,37,2.023,44,3.439,46,2.927,48,1.918,49,3.549,51,3.882,58,0.102,59,0.061,60,0.691,62,0.789,76,2,78,2.44,80,1.422,85,0.007,86,0.007,111,0.93,115,4.254,127,2.453,137,3.768,143,2.774,145,2.284,148,2.023,151,1.36,183,2.305,187,2.211,247,2.284,251,2.406,256,2.774,268,1.824,272,1.824,277,2.665,296,5.01,297,3.378,298,2.948,299,1.918,300,2.665,301,3.549,302,2.948,303,3.378,304,3.378,305,3.378,306,3.378,307,3.378,308,4.886,309,4.886,310,4.264,311,4.886,312,4.886,313,3.378,314,2.453,315,2.453,316,2.453,317,2.453,318,2.284,319,2.453,320,2.453,321,3.378,322,3.378,323,3.378,324,2.453,325,2.453]],["title/classes/CrearVideoConferenciaDTO.html",[59,0.051,326,2.964]],["body/classes/CrearVideoConferenciaDTO.html",[3,0.168,4,0.15,5,0.15,10,0.206,15,2.236,16,0.012,20,0.461,24,0.246,29,0.328,58,0.168,59,0.085,85,0.01,86,0.01,97,0.948,111,1.529,116,2.073,117,4.19,266,4.683,268,3,293,5.379,294,4.381,326,4.952,327,4.952,328,5.554]],["title/classes/CrearVideoConferenciaUseCase.html",[59,0.051,329,2.964]],["body/classes/CrearVideoConferenciaUseCase.html",[3,0.094,4,0.084,5,0.084,10,0.116,11,0.547,16,0.013,20,0.382,22,0.504,23,0.462,24,0.204,25,0.462,26,1.123,27,0.37,28,1.045,29,0.413,34,0.596,37,1.864,48,1.767,51,3.704,58,0.094,59,0.058,60,0.637,62,0.727,76,1.908,78,2.347,80,1.368,85,0.007,86,0.007,111,0.857,127,2.261,148,1.864,151,1.253,183,2.171,187,2.083,214,4.301,247,2.105,251,2.267,256,2.613,268,1.681,272,1.681,277,2.456,298,2.717,299,1.767,300,2.456,301,3.343,302,2.717,310,4.017,314,2.261,315,2.261,316,2.261,317,2.261,318,2.105,319,2.261,320,2.261,324,2.261,325,2.261,327,3.978,329,3.343,330,4.78,331,3.113,332,3.625,333,2.921,334,4.092,335,3.113,336,2.105,337,2.717,338,2.757,339,2.456,340,3.113,341,2.613,342,3.113,343,4.603,344,4.603,345,4.603,346,4.603,347,4.603,348,4.603,349,4.603,350,4.603,351,3.113,352,3.113,353,3.113,354,3.113]],["title/modules/CuentaModule.html",[355,1.925,356,2.964]],["body/modules/CuentaModule.html",[1,4.401,2,2.37,3,0.113,4,0.1,5,0.1,16,0.013,29,0.468,32,0.788,35,3.324,37,3.137,58,0.113,59,0.047,85,0.008,86,0.008,141,4.305,150,3.804,187,1.685,333,3.324,355,2.471,356,5.755,357,2.011,358,2.829,359,3.249,360,3.249,361,3.249,362,4.86,363,4.86,364,4.305,365,3.137,366,2.23,367,2.23,368,3.723,369,3.324,370,4.401,371,4.401,372,3.324,373,3.723,374,3.723,375,3.249,376,3.137,377,2.23,378,4.132,379,3.249,380,3.723,381,3.723,382,3.723,383,3.723,384,3.723,385,3.723,386,5.238,387,3.723,388,3.249,389,3.249,390,3.249,391,3.249,392,3.249,393,3.249]],["title/classes/EditarPersonaoUseCase.html",[59,0.051,394,2.964]],["body/classes/EditarPersonaoUseCase.html",[3,0.131,4,0.116,5,0.116,10,0.16,11,0.689,16,0.013,20,0.481,22,0.634,23,0.581,24,0.256,25,0.581,26,2.362,27,0.513,28,1.13,29,0.431,34,0.825,58,0.131,59,0.054,60,0.882,62,1.007,76,1.502,78,1.672,80,0.975,85,0.009,86,0.009,97,0.91,111,1.187,151,1.735,251,2.853,271,3.715,272,2.328,273,2.915,274,3.446,276,3.918,278,2.915,279,1.951,280,3.131,394,4.208,395,5.711,396,3.762,397,5.794,398,3.779,399,3.762,400,1.951,401,2.984,402,2.915,403,3.762,404,2.736,405,3.762,406,3.762,407,3.401,408,3.762,409,3.401,410,3.762,411,4.311]],["title/classes/EliminarPersonaoUseCase.html",[59,0.051,412,2.964]],["body/classes/EliminarPersonaoUseCase.html",[3,0.147,4,0.131,5,0.131,10,0.18,11,0.745,16,0.013,20,0.52,22,0.685,23,0.628,24,0.277,25,0.628,26,1.752,27,0.577,28,1.198,29,0.37,34,0.929,58,0.147,59,0.061,60,0.994,62,1.134,80,1.097,85,0.009,86,0.009,97,0.965,111,1.336,151,1.954,251,3.085,256,3.557,271,3.938,272,2.622,273,3.283,274,3.609,276,4.236,278,3.283,412,4.55,413,6.053,414,4.854,415,4.236,416,4.854]],["title/injectables/EmpresaBuscadaPublisher.html",[87,0.681,417,2.59]],["body/injectables/EmpresaBuscadaPublisher.html",[3,0.138,4,0.123,5,0.123,10,0.17,11,0.716,16,0.013,20,0.499,22,0.659,23,0.604,24,0.266,25,0.604,27,0.543,28,1.163,29,0.422,32,0.966,34,0.874,58,0.138,59,0.057,60,1.232,61,1.838,62,1.067,80,1.032,85,0.009,86,0.009,87,1.004,88,1.537,91,3.606,92,2.593,93,4.065,95,3.418,96,2.735,99,2.84,100,2.593,101,2.067,417,3.82,418,5.312,419,3.603,420,3.985,421,4.034,422,3.985,423,3.088,424,3.317,425,2.898,426,3.985,427,2.898,428,4.567,429,3.088]],["title/controllers/EmpresaController.html",[0,1.847,430,2.964]],["body/controllers/EmpresaController.html",[0,1.278,2,1.278,3,0.086,4,0.076,5,0.076,8,2.051,10,0.105,11,0.509,15,1.723,16,0.013,17,3.108,18,3.108,20,0.355,22,0.468,23,0.429,24,0.274,25,0.429,27,0.775,28,1.205,29,0.437,30,2.051,31,2.051,32,0.598,34,0.541,52,1.91,53,3.753,54,2.051,55,1.91,58,0.086,59,0.035,60,0.578,61,2.08,62,1.207,64,3.108,73,3.108,76,1.491,77,2.716,78,2.004,80,0.967,82,1.332,85,0.006,86,0.006,183,1.332,189,2.563,190,1.792,191,1.692,193,1.937,225,1.391,238,1.604,248,2.051,255,2.934,262,4.58,290,2.108,299,1.604,400,2.338,417,3.279,421,3.905,423,1.91,424,2.051,430,3.108,431,2.465,432,4.137,433,5.167,434,5.167,435,2.824,436,5.031,437,2.824,438,2.824,439,2.824,440,2.824,441,2.824,442,3.279,443,4.28,444,2.465,445,2.824,446,2.228,447,2.465,448,3.273,449,2.465,450,2.465,451,2.465,452,2.051,453,2.824,454,2.228,455,2.824,456,2.824,457,2.824,458,2.824,459,2.465,460,3.108,461,2.465,462,2.228,463,3.735,464,3.735,465,3.735,466,2.824,467,2.824,468,2.824,469,2.824,470,2.824,471,2.824,472,2.465,473,2.465,474,2.465,475,2.228,476,2.824,477,2.824,478,2.465,479,2.824,480,2.228,481,2.465,482,2.465,483,2.465,484,2.465,485,2.465,486,2.465]],["title/classes/EmpresaDomainEntity.html",[59,0.051,448,2.318]],["body/classes/EmpresaDomainEntity.html",[3,0.107,4,0.095,5,0.095,10,0.131,11,0.6,16,0.013,20,0.617,22,0.552,23,0.506,24,0.329,25,0.506,27,0.42,29,0.347,58,0.107,59,0.044,60,0.723,76,1.231,85,0.008,86,0.008,97,1.081,111,0.972,114,2.031,116,1.534,119,3.665,121,2.565,122,3.665,265,2.559,398,3.815,404,2.242,432,3.736,448,2.865,487,3.083,488,5.13,489,3.981,490,3.029,491,3.033,492,3.981,493,3.981,494,3.736,495,3.202,496,5.046,497,4.343,498,3.532,499,3.532,500,3.532,501,3.532,502,3.532,503,3.202,504,3.532,505,2.865,506,2.787,507,2.787,508,3.083,509,3.532,510,3.083,511,3.083,512,3.083,513,3.083,514,3.083,515,3.083,516,3.083,517,4.404,518,3.083,519,3.532,520,3.532,521,3.532,522,3.532,523,3.532,524,3.532,525,3.532,526,3.532,527,3.532,528,2.787,529,2.787,530,3.083,531,2.787]],["title/injectables/EmpresaMongoService.html",[87,0.681,253,2.318]],["body/injectables/EmpresaMongoService.html",[3,0.118,4,0.105,5,0.105,10,0.145,11,0.643,16,0.013,20,0.515,22,0.68,23,0.623,24,0.275,25,0.623,27,0.643,28,1.317,29,0.416,32,0.825,34,0.747,58,0.118,59,0.049,60,0.798,62,0.911,80,1.593,85,0.008,86,0.008,87,0.902,88,1.313,97,0.98,114,1.57,151,1.57,153,2.107,155,2.178,163,2.552,194,2.009,253,3.072,259,3.631,400,1.765,432,3.943,532,3.404,533,2.787,534,3.9,535,4.369,536,3.9,537,3.9,538,4.268,539,3.9,540,3.93,541,3.9,542,3.077,543,3.404,544,3.9,545,3.9,546,3.9,547,2.215,548,3.9,549,3.9]],["title/injectables/EmpresaRegistradaPublisher.html",[87,0.681,442,2.59]],["body/injectables/EmpresaRegistradaPublisher.html",[3,0.138,4,0.123,5,0.123,10,0.17,11,0.716,16,0.013,20,0.499,22,0.659,23,0.604,24,0.266,25,0.604,27,0.543,28,1.163,29,0.422,32,0.966,34,0.874,58,0.138,59,0.057,60,1.232,61,1.838,62,1.067,80,1.032,85,0.009,86,0.009,87,1.004,88,1.537,91,3.606,92,2.593,93,4.065,95,3.418,96,2.735,99,2.84,100,2.593,101,2.067,418,5.312,421,4.034,423,3.088,424,3.317,425,2.898,426,3.985,427,2.898,429,3.088,442,3.82,550,3.985,551,4.567,552,4.567,553,4.567]],["title/injectables/EmpresaRepository.html",[87,0.681,535,2.445]],["body/injectables/EmpresaRepository.html",[3,0.087,4,0.077,5,0.077,10,0.107,11,0.515,16,0.013,20,0.517,22,0.682,23,0.625,24,0.276,25,0.625,27,0.691,28,1.283,29,0.387,32,0.607,34,0.549,58,0.087,59,0.036,60,0.886,61,1.154,62,0.67,78,2.543,80,1.313,82,2.46,85,0.007,86,0.007,87,0.722,88,0.965,97,1.017,114,1.154,155,1.743,163,2.042,165,4.219,170,2.083,171,1.298,172,1.477,182,3.144,183,2.942,184,2.083,185,2.083,187,1.298,188,1.939,189,1.718,190,2.747,191,2.593,192,3.144,193,1.959,194,2.687,217,1.718,226,1.82,229,1.718,235,1.718,259,3.61,290,2.568,299,1.628,400,2.629,432,3.958,533,2.23,535,2.593,538,3.415,542,2.262,547,2.458,554,2.503,555,2.747,556,2.593,557,2.868,558,2.868,559,4.329,560,2.868,561,2.868,562,2.868,563,2.868,564,2.928,565,2.868,566,1.939,567,2.503,568,2.262,569,2.868,570,2.868,571,2.868,572,2.868,573,2.868,574,2.868,575,2.868,576,2.868,577,2.868,578,2.868,579,2.868,580,2.868,581,4.329,582,4.329]],["title/classes/EmpresaSchema.html",[59,0.051,259,2.103]],["body/classes/EmpresaSchema.html",[3,0.084,4,0.075,5,0.075,10,0.281,11,0.502,15,2.607,16,0.013,20,0.558,22,0.304,23,0.278,24,0.338,25,0.278,27,0.33,29,0.302,58,0.155,59,0.035,76,0.967,85,0.006,86,0.006,97,1.095,111,0.764,116,1.284,171,1.256,172,2.176,187,3.707,193,1.256,198,2.176,199,4.703,200,4.15,201,5.427,202,3.468,207,4.89,208,2.016,209,2.016,210,2.857,212,2.016,214,1.663,215,1.878,216,1.878,217,1.663,218,2.857,219,1.878,220,1.878,221,1.878,222,1.878,223,1.878,224,1.878,225,2.518,226,1.762,227,1.878,228,1.878,229,1.663,230,1.878,231,1.878,232,1.878,233,1.878,234,1.762,235,1.663,236,1.878,237,1.762,238,1.576,239,1.878,240,1.762,259,2.176,265,2.223,448,4.116,449,2.423,489,2.857,490,2.696,491,2.634,492,3.458,493,2.857,494,2.681,495,2.681,497,4.38,503,1.762,505,1.576,568,2.19,583,2.016,584,2.776,585,2.776,586,2.776,587,2.776,588,2.776,589,2.776,590,2.423,591,2.776,592,2.016,593,2.016,594,2.016,595,2.423]],["title/injectables/EmpresaService.html",[87,0.681,255,2.318]],["body/injectables/EmpresaService.html",[3,0.15,4,0.134,5,0.134,10,0.184,11,0.756,16,0.012,20,0.527,22,0.695,23,0.637,24,0.281,25,0.637,27,0.756,28,1.098,29,0.375,32,1.051,58,0.15,59,0.062,85,0.01,86,0.01,87,1.06,88,1.671,97,0.884,155,1.998,163,2.998,198,3.274,202,3.274,253,4.338,255,3.609,259,3.274,400,2.247,432,3.151,533,3.274,538,3.916,596,4.333,597,4.965,598,4.965,599,4.965]],["title/controllers/EventoController.html",[0,1.847,370,2.964]],["body/controllers/EventoController.html",[0,2.474,2,1.792,3,0.12,4,0.107,5,0.107,10,0.147,11,0.65,15,1.594,16,0.013,20,0.328,22,0.433,23,0.397,24,0.277,25,0.397,27,0.471,29,0.369,32,0.838,58,0.12,59,0.049,60,0.81,85,0.008,86,0.008,99,3.61,101,1.792,225,2.692,290,1.95,370,3.971,432,2.513,505,2.248,600,3.455,601,5.467,602,3.959,603,5.467,604,5.467,605,3.959,606,3.959,607,3.455,608,2.876,609,3.959,610,5.467,611,3.959,612,6.262,613,6.753,614,5.467,615,3.959,616,3.959,617,3.959,618,3.959,619,3.959,620,3.959,621,3.959,622,3.959,623,3.959,624,3.959,625,3.959,626,3.959,627,5.467,628,5.467,629,3.959,630,3.959,631,3.959]],["title/controllers/EventoCuentaController.html",[0,1.847,632,2.964]],["body/controllers/EventoCuentaController.html",[0,2.389,2,1.704,3,0.114,4,0.101,5,0.101,10,0.14,11,0.628,15,2.125,16,0.013,20,0.438,22,0.578,23,0.529,24,0.234,25,0.529,27,0.628,28,1.053,29,0.437,32,0.797,34,0.721,52,2.547,58,0.114,59,0.047,62,0.88,76,1.84,77,3.351,78,2.048,80,1.194,82,2.491,85,0.008,86,0.008,97,0.919,99,3.402,101,1.704,102,3.652,151,1.516,217,3.163,229,3.163,269,2.547,271,2.138,279,1.704,280,2.735,401,1.94,402,2.547,607,3.287,632,3.835,633,5.321,634,3.287,635,5.28,636,5.28,637,3.766,638,5.28,639,3.766,640,3.766,641,5.28,642,3.766,643,3.766,644,3.652,645,3.287,646,3.287,647,3.766,648,5.28,649,5.28,650,5.28,651,5.28,652,4.608,653,5.28,654,3.766,655,5.28,656,3.766,657,3.766]],["title/interfaces/IAudioConferencia.html",[115,2.76,658,1.052]],["body/interfaces/IAudioConferencia.html",[3,0.163,4,0.145,5,0.145,10,0.2,16,0.012,24,0.322,25,0.763,44,4.354,58,0.163,85,0.01,86,0.01,97,1.109,115,4.517,116,2.031,117,4.318,118,6,124,3.793,658,1.385,659,2.246,660,4.688,661,4.238,662,5.372]],["title/interfaces/IAudioConferenciaDomainService.html",[145,2.76,658,1.052]],["body/interfaces/IAudioConferenciaDomainService.html",[3,0.15,4,0.134,5,0.134,10,0.184,11,0.756,12,4.616,13,4.616,16,0.013,20,0.412,22,0.543,23,0.498,24,0.22,25,0.498,26,2.294,27,0.59,28,1.372,29,0.375,34,0.95,46,2.974,48,2.819,58,0.15,85,0.01,86,0.01,97,0.975,145,4.298,153,2.681,155,1.998,157,4.333,159,4.333,244,3.357,658,1.28,659,2.076,663,5.547,664,4.691,665,4.333,666,4.965]],["title/interfaces/ICuentaRepository.html",[173,2.76,658,1.052]],["body/interfaces/ICuentaRepository.html",[3,0.155,4,0.138,5,0.138,10,0.19,11,0.771,16,0.013,20,0.425,22,0.56,23,0.513,24,0.226,25,0.513,27,0.609,28,1.382,29,0.302,34,0.98,58,0.155,85,0.01,86,0.01,97,0.989,99,3.057,153,2.765,155,2.061,163,3.057,173,4.383,194,2.637,547,2.907,658,1.32,659,2.141,664,4.744,667,5.656,668,4.468,669,6.481,670,5.12]],["title/interfaces/IDatosBasicosModel.html",[398,2.204,658,1.052]],["body/interfaces/IDatosBasicosModel.html",[3,0.165,4,0.146,5,0.146,10,0.202,16,0.012,24,0.323,58,0.165,85,0.01,86,0.01,97,1.148,116,2.046,265,3.321,398,3.635,490,3.603,491,3.935,658,1.402,659,2.274,671,3.95,672,4.746]],["title/interfaces/IEmpresaCuenta.html",[658,1.052,673,3.22]],["body/interfaces/IEmpresaCuenta.html",[3,0.149,4,0.133,5,0.133,10,0.183,16,0.012,24,0.345,58,0.149,85,0.01,86,0.01,97,1.152,116,1.923,265,3.204,489,4.724,490,3.477,491,3.797,492,4.984,493,4.724,497,4.984,592,3.578,593,3.578,658,1.27,659,2.06,673,4.99,674,4.3]],["title/interfaces/IEmpresaDomainModel.html",[488,2.964,658,1.052]],["body/interfaces/IEmpresaDomainModel.html",[3,0.166,4,0.148,5,0.148,10,0.204,16,0.012,24,0.325,58,0.166,85,0.01,86,0.01,97,1.02,116,2.057,488,4.914,489,4.962,492,5.181,493,4.962,497,5.181,592,3.983,593,3.983,658,1.414,659,2.293,675,4.786]],["title/interfaces/IEmpresaDomainService.html",[540,2.964,658,1.052]],["body/interfaces/IEmpresaDomainService.html",[3,0.153,4,0.136,5,0.136,10,0.188,11,0.765,16,0.013,20,0.534,22,0.704,23,0.645,24,0.285,25,0.645,27,0.765,28,1.286,29,0.38,34,0.969,58,0.153,85,0.01,86,0.01,97,0.984,155,2.59,163,3.035,290,2.492,400,2.29,448,2.873,533,3.314,540,4.672,658,1.304,659,2.116,664,4.083,676,4.416,677,5.06,678,3.212,679,5.06,680,5.06,681,4.416]],["title/interfaces/ILoginModelDomain.html",[658,1.052,682,3.22]],["body/interfaces/ILoginModelDomain.html",[3,0.172,4,0.153,5,0.153,10,0.211,16,0.012,24,0.306,58,0.172,85,0.01,86,0.01,97,1.124,116,2.1,265,3.37,490,3.657,658,1.463,659,2.372,682,5.45,683,4.952]],["title/interfaces/IPersonaCuenta.html",[608,2.964,658,1.052]],["body/interfaces/IPersonaCuenta.html",[3,0.159,4,0.142,5,0.142,10,0.196,16,0.012,24,0.334,58,0.159,85,0.01,86,0.01,97,1.162,116,2.005,265,3.282,490,3.562,491,3.89,608,4.79,658,1.357,659,2.201,684,4.594,685,6.59]],["title/interfaces/IPersonaDomainService.html",[658,1.052,686,2.76]],["body/interfaces/IPersonaDomainService.html",[3,0.131,4,0.116,5,0.116,10,0.161,11,0.69,16,0.012,20,0.581,22,0.767,23,0.703,24,0.31,25,0.703,27,0.833,28,1.349,29,0.343,34,0.828,58,0.131,85,0.009,86,0.009,97,1.101,155,2.337,163,2.739,194,2.991,290,3.45,400,2.966,401,2.228,533,2.991,547,3.297,555,3.685,556,3.478,658,1.115,659,1.808,664,4.638,678,2.745,681,3.775,686,3.927,687,3.775,688,4.325,689,4.325,690,4.325,691,4.325,692,4.325]],["title/interfaces/IPersonaLogeada.html",[658,1.052,693,3.22]],["body/interfaces/IPersonaLogeada.html",[3,0.159,4,0.142,5,0.142,10,0.196,16,0.012,24,0.334,58,0.159,85,0.01,86,0.01,97,1.157,116,2.005,265,3.282,490,3.562,491,3.89,658,1.357,659,2.201,693,5.203,694,4.594,695,5.682,696,5.264]],["title/interfaces/IUsuarioRepository.html",[564,2.76,658,1.052]],["body/interfaces/IUsuarioRepository.html",[3,0.127,4,0.113,5,0.113,10,0.156,11,0.676,16,0.012,20,0.573,22,0.756,23,0.693,24,0.306,25,0.693,27,0.822,28,1.373,29,0.247,34,0.801,58,0.127,85,0.009,86,0.009,97,1.093,153,2.261,155,2.287,163,2.679,194,2.926,290,3.405,400,2.917,533,2.926,547,3.225,555,3.605,556,3.402,564,3.841,566,4.887,658,1.079,659,1.751,664,4.73,678,3.605,697,5.701,698,3.654,699,4.187,700,4.187,701,4.187,702,4.187]],["title/interfaces/IVideoConferencia.html",[334,2.76,658,1.052]],["body/interfaces/IVideoConferencia.html",[3,0.14,4,0.124,5,0.124,10,0.171,16,0.012,24,0.345,25,0.823,58,0.14,85,0.009,86,0.009,97,1.066,116,1.843,117,4.081,124,4.594,334,4.099,658,1.189,659,1.929,661,3.641,703,4.027,704,5.34,705,5.34,706,5.34,707,5.671,708,5.34,709,5.34,710,4.615,711,4.615,712,4.615,713,4.615,714,4.615]],["title/interfaces/IVideoConferenciaDomainService.html",[336,2.76,658,1.052]],["body/interfaces/IVideoConferenciaDomainService.html",[3,0.15,4,0.134,5,0.134,10,0.184,11,0.756,16,0.013,20,0.412,22,0.543,23,0.498,24,0.22,25,0.498,26,2.294,27,0.59,28,1.372,29,0.375,34,0.95,48,2.819,58,0.15,85,0.01,86,0.01,97,0.975,153,2.681,155,1.998,244,3.357,336,4.298,338,2.974,658,1.28,659,2.076,664,4.691,665,4.333,715,5.547,716,4.616,717,5.014,718,4.965,719,4.333,720,4.333]],["title/classes/LogearPersonaoUseCase.html",[59,0.051,721,2.964]],["body/classes/LogearPersonaoUseCase.html",[3,0.126,4,0.112,5,0.112,10,0.155,11,0.673,16,0.013,20,0.469,22,0.619,23,0.567,24,0.25,25,0.567,26,1.502,27,0.495,28,1.11,29,0.425,33,3.282,34,0.796,58,0.126,59,0.052,60,0.852,62,0.972,76,1.45,78,1.614,80,1.279,85,0.009,86,0.009,111,1.145,151,1.675,183,1.963,193,1.883,235,2.492,251,2.785,256,3.211,271,3.649,272,2.247,273,2.814,274,3.396,276,3.825,278,2.814,300,3.282,396,3.631,399,3.631,506,3.282,507,3.282,528,3.282,529,3.282,531,3.282,721,4.108,722,5.608,723,4.663,724,4.161,725,3.631,726,3.282,727,4.161,728,4.161,729,4.161,730,4.161,731,4.161,732,4.161,733,5.656,734,4.161,735,4.161,736,4.161,737,4.161,738,3.631]],["title/classes/LogearseDto.html",[59,0.051,723,2.76]],["body/classes/LogearseDto.html",[3,0.161,4,0.143,5,0.143,10,0.198,15,2.675,16,0.012,20,0.551,24,0.294,29,0.314,58,0.161,59,0.083,85,0.01,86,0.01,97,1.055,111,1.466,116,2.02,265,3.149,266,4.597,268,2.878,490,3.416,723,4.494,739,4.65,740,5.714,741,5.328,742,5.328]],["title/modules/MensajeriaModule.html",[355,1.925,743,2.76]],["body/modules/MensajeriaModule.html",[2,1.446,3,0.097,4,0.086,5,0.086,16,0.013,23,0.321,29,0.427,32,0.676,58,0.097,59,0.04,85,0.007,86,0.007,101,1.446,214,1.915,355,2.214,357,1.726,358,2.535,365,2.811,366,1.915,367,1.915,369,2.979,372,2.028,417,4.886,442,4.886,444,2.789,446,3.703,743,5.528,744,2.789,745,2.789,746,2.789,747,4.886,748,4.886,749,4.886,750,4.886,751,3.196,752,3.409,753,2.789,754,4.096,755,6.129,756,2.789,757,4.694,758,2.789,759,2.789,760,2.789,761,3.196,762,2.789,763,2.789,764,2.789,765,2.789,766,2.789,767,3.196,768,2.789,769,2.789,770,4.096,771,4.694,772,4.694,773,4.694]],["title/modules/MensajeriaModuleCuenta.html",[355,1.925,362,2.76]],["body/modules/MensajeriaModuleCuenta.html",[2,1.877,3,0.126,4,0.112,5,0.112,16,0.013,23,0.416,29,0.406,32,0.878,38,5.122,40,3.012,41,3.582,42,4.452,58,0.126,59,0.052,85,0.008,86,0.008,101,1.877,214,2.484,355,2.662,357,2.24,358,3.048,362,5.365,365,3.381,366,2.484,367,2.484,369,3.582,372,2.632,752,4.099,753,3.62,754,4.925,760,3.62,762,3.62,763,3.62,764,3.62,765,3.62,766,3.62,768,3.62,769,3.62,774,3.62,775,3.62,776,3.62,777,5.122,778,4.147,779,5.644,780,3.012,781,4.147,782,4.147]],["title/modules/MongoModule.html",[355,1.925,783,2.76]],["body/modules/MongoModule.html",[2,1.525,3,0.102,4,0.091,5,0.091,16,0.013,29,0.448,32,0.713,58,0.102,59,0.042,85,0.007,86,0.007,171,1.525,253,4.417,259,1.735,274,3.831,279,1.525,355,2.3,357,1.819,358,2.634,365,2.921,366,2.018,367,2.018,369,3.095,372,2.138,376,4.398,377,2.018,535,4.659,542,2.658,543,2.94,594,2.447,752,3.542,783,5.523,784,2.94,785,2.94,786,2.94,787,4.458,788,4.659,789,3.369,790,4.256,791,2.447,792,2.658,793,2.94,794,3.369,795,2.94,796,3.369,797,2.94,798,2.94,799,2.94,800,3.369,801,3.369,802,3.369,803,3.369]],["title/modules/MongoModuleCuenta.html",[355,1.925,363,2.76]],["body/modules/MongoModuleCuenta.html",[2,1.494,3,0.1,4,0.089,5,0.089,16,0.013,29,0.446,32,0.699,36,2.881,58,0.1,59,0.041,85,0.007,86,0.007,137,4.641,141,4.641,143,1.874,147,2.604,148,2.878,149,2.881,150,3.49,171,1.494,241,2.397,247,3.25,332,4.641,341,1.874,355,2.267,357,1.783,358,2.595,363,5.51,364,4.641,365,2.878,366,1.977,367,1.977,369,3.05,372,2.095,376,4.373,377,1.977,752,3.49,787,4.441,790,4.194,793,2.881,797,2.881,798,2.881,799,2.881,804,2.881,805,2.881,806,2.881,807,3.301,808,2.881,809,2.881,810,2.397,811,2.604,812,3.301,813,3.301,814,3.301,815,3.301]],["title/classes/MongoServerErrorExceptionFilter.html",[59,0.051,816,3.22]],["body/classes/MongoServerErrorExceptionFilter.html",[3,0.135,4,0.12,5,0.12,10,0.165,11,0.703,16,0.013,20,0.368,22,0.486,23,0.446,24,0.197,25,0.446,27,0.528,29,0.392,32,0.94,58,0.135,59,0.056,70,5.797,71,5.159,76,2.569,85,0.009,86,0.009,111,1.223,114,2.379,240,2.82,505,2.523,816,4.663,817,5.159,818,5.159,819,4.663,820,5.159,821,3.877,822,6.643,823,6.643,824,5.911,825,7.081,826,7.081,827,4.443,828,5.911,829,4.443,830,5.911,831,3.877,832,4.443,833,3.877,834,4.443,835,4.443,836,4.443,837,5.911,838,4.443,839,5.911,840,4.443]],["title/injectables/MongooseConfigService.html",[87,0.681,787,2.318]],["body/injectables/MongooseConfigService.html",[3,0.149,4,0.132,5,0.132,10,0.182,11,0.75,16,0.013,20,0.523,22,0.537,23,0.492,24,0.217,25,0.492,27,0.584,29,0.411,32,1.039,58,0.149,59,0.061,60,1.005,62,1.147,80,1.11,85,0.009,86,0.009,87,1.052,88,1.652,114,1.976,151,1.976,171,2.221,376,4.667,377,2.94,787,3.583,841,4.284,842,6.423,843,4.284,844,4.909,845,4.909,846,6.085,847,5.507,848,5.507,849,4.284,850,4.284]],["title/injectables/MongooseConfigService-1.html",[87,0.568,787,1.932,851,2.97]],["body/injectables/MongooseConfigService-1.html",[3,0.149,4,0.132,5,0.132,10,0.182,11,0.75,16,0.013,20,0.523,22,0.537,23,0.492,24,0.217,25,0.492,27,0.584,29,0.411,32,1.039,58,0.149,59,0.061,60,1.005,62,1.147,80,1.11,85,0.009,86,0.009,87,1.052,88,1.652,114,1.976,151,1.976,171,2.221,376,4.667,377,2.94,787,3.583,842,6.423,843,4.284,846,6.085,847,5.507,848,5.507,849,4.284,850,4.284,852,4.284,853,4.909,854,4.909]],["title/injectables/PersonaBuscadaPublisher.html",[87,0.681,747,2.59]],["body/injectables/PersonaBuscadaPublisher.html",[3,0.138,4,0.123,5,0.123,10,0.17,11,0.716,16,0.013,20,0.499,22,0.659,23,0.604,24,0.266,25,0.604,27,0.543,28,1.163,29,0.422,32,0.966,34,0.874,58,0.138,59,0.057,60,1.232,61,1.838,62,1.067,80,1.032,85,0.009,86,0.009,87,1.004,88,1.537,91,3.606,92,2.593,93,4.065,95,3.418,96,2.735,99,2.84,100,2.593,101,2.067,398,3.637,404,2.898,419,3.603,420,3.985,422,3.985,425,2.898,427,2.898,429,3.088,671,3.317,747,3.82,855,4.554,856,3.985,857,4.567]],["title/controllers/PersonaController.html",[0,1.847,858,2.964]],["body/controllers/PersonaController.html",[0,0.732,2,0.732,3,0.049,4,0.044,5,0.044,8,1.175,10,0.06,11,0.325,15,1.879,16,0.013,17,3.39,18,1.986,20,0.387,22,0.511,23,0.468,24,0.239,25,0.468,27,0.796,28,1.222,29,0.418,30,2.579,31,1.175,32,0.342,34,0.31,52,3.157,53,3.679,54,1.175,55,1.094,58,0.049,59,0.034,60,0.331,61,1.879,62,1.09,64,3.39,66,2.157,68,2.386,73,3.918,76,1.626,77,2.962,78,2.437,80,1.055,82,1.29,85,0.004,86,0.004,97,0.874,99,1.29,102,0.969,124,0.919,183,1.675,189,3.396,190,2.254,191,2.127,193,2.292,225,1.749,238,2.017,251,1.749,262,3.426,265,0.703,269,2.402,271,2.65,279,1.237,290,3.352,299,1.553,394,1.175,400,2.975,401,2.151,402,1.094,412,1.986,423,1.094,436,3.644,446,1.276,447,2.386,450,1.412,451,1.412,459,1.412,460,3.679,461,3.1,462,2.157,463,3.1,464,2.386,465,2.386,472,1.412,473,1.412,474,1.412,475,2.157,478,1.412,480,2.802,481,3.1,482,3.1,483,3.1,484,3.1,485,3.1,486,3.1,556,2.501,644,2.127,646,1.412,652,1.412,721,1.175,723,3.648,747,2.254,748,2.254,749,2.65,750,2.254,756,1.412,758,1.412,759,1.412,858,1.986,859,1.412,860,2.734,861,3.552,862,2.734,863,2.734,864,2.734,865,1.618,866,1.618,867,1.618,868,1.618,869,4.249,870,1.618,871,1.618,872,1.618,873,4.176,874,4.176,875,1.618,876,1.618,877,1.618,878,1.618,879,1.618,880,1.618,881,2.734,882,2.734,883,1.618,884,1.618,885,3.552,886,1.618,887,1.618,888,1.412,889,1.618,890,4.176,891,1.175,892,1.618,893,1.618,894,1.175,895,1.412,896,1.618,897,1.618,898,1.618,899,1.618,900,1.618,901,1.618,902,1.618,903,1.618,904,1.618,905,1.618,906,1.618,907,3.552,908,1.618,909,1.618,910,1.618,911,1.618,912,1.618,913,1.618,914,1.618,915,1.618,916,2.734,917,2.734,918,1.618,919,1.618,920,1.618,921,1.618,922,1.618,923,1.618,924,1.412,925,4.176,926,1.618,927,1.618,928,1.618,929,1.618,930,1.618,931,1.618,932,1.618,933,1.618,934,1.618,935,1.618,936,1.618,937,1.618,938,1.618,939,1.618]],["title/classes/PersonaDomainEntity.html",[59,0.051,401,2.103]],["body/classes/PersonaDomainEntity.html",[3,0.126,4,0.112,5,0.112,10,0.154,11,0.671,16,0.013,20,0.597,22,0.618,23,0.566,24,0.319,25,0.566,27,0.493,29,0.333,58,0.126,59,0.052,60,0.849,76,1.445,85,0.008,86,0.008,97,1.091,111,1.142,114,2.272,116,1.716,119,4.099,121,3.012,122,3.012,265,2.789,398,4.013,401,2.907,404,2.632,490,3.248,491,3.305,494,4.071,495,3.582,503,3.582,505,3.205,506,3.272,507,3.272,508,3.62,510,3.62,511,3.62,512,3.62,513,3.62,514,3.62,515,3.62,516,3.62,517,4.925,518,3.62,528,3.272,529,3.272,530,3.62,531,3.272,940,3.62,941,5.644,942,4.147,943,4.147,944,4.147]],["title/injectables/PersonaEditadaPublisher.html",[87,0.681,748,2.59]],["body/injectables/PersonaEditadaPublisher.html",[3,0.138,4,0.123,5,0.123,10,0.17,11,0.716,16,0.013,20,0.499,22,0.659,23,0.604,24,0.266,25,0.604,27,0.543,28,1.163,29,0.422,32,0.966,34,0.874,58,0.138,59,0.057,60,1.232,61,1.838,62,1.067,80,1.032,85,0.009,86,0.009,87,1.004,88,1.537,91,3.606,92,2.593,93,4.065,95,3.418,96,2.735,99,2.84,100,2.593,101,2.067,398,3.637,404,2.898,425,2.898,427,2.898,429,3.088,671,3.317,748,3.82,855,4.554,856,3.985,945,3.985,946,4.567,947,4.567,948,4.567]],["title/injectables/PersonaEliminadaPublisher.html",[87,0.681,749,2.59]],["body/injectables/PersonaEliminadaPublisher.html",[3,0.142,4,0.126,5,0.126,10,0.175,11,0.729,16,0.013,20,0.509,22,0.671,23,0.615,24,0.271,25,0.615,27,0.559,28,1.179,29,0.403,32,0.994,34,0.899,58,0.142,59,0.059,60,1.255,61,1.891,62,1.097,80,1.062,85,0.009,86,0.009,87,1.023,88,1.581,91,3.673,92,2.667,93,4.11,95,3.482,96,3.673,99,2.216,100,2.667,101,2.126,124,3.877,425,2.981,427,2.981,749,3.892,855,4.617,949,4.1,950,4.698,951,4.698,952,4.698]],["title/injectables/PersonaMongoService.html",[87,0.681,274,2.01]],["body/injectables/PersonaMongoService.html",[3,0.111,4,0.099,5,0.099,10,0.136,11,0.617,16,0.013,20,0.572,22,0.754,23,0.691,24,0.305,25,0.691,27,0.777,28,1.319,29,0.407,32,0.777,34,0.703,58,0.111,59,0.046,60,0.751,62,0.858,80,1.477,85,0.008,86,0.008,87,0.865,88,1.236,97,1.062,114,1.478,151,1.478,155,2.087,163,2.446,194,2.671,274,2.554,279,3.328,290,3.394,400,2.721,533,2.671,547,2.944,555,3.291,556,3.106,678,3.291,686,3.507,788,4.285,792,2.896,795,3.204,953,3.204,954,3.671,955,3.671,956,3.671,957,3.671,958,3.671,959,3.671,960,3.204,961,3.671,962,3.671,963,3.671,964,3.671]],["title/injectables/PersonaRegistradaPublisher.html",[87,0.681,750,2.59]],["body/injectables/PersonaRegistradaPublisher.html",[3,0.138,4,0.123,5,0.123,10,0.17,11,0.716,16,0.013,20,0.499,22,0.659,23,0.604,24,0.266,25,0.604,27,0.543,28,1.163,29,0.422,32,0.966,34,0.874,58,0.138,59,0.057,60,1.232,61,1.838,62,1.067,80,1.032,85,0.009,86,0.009,87,1.004,88,1.537,91,3.606,92,2.593,93,4.065,95,3.418,96,2.735,99,2.84,100,2.593,101,2.067,423,3.088,425,2.898,427,2.898,429,3.088,750,3.82,855,4.554,869,4.554,888,3.985,965,3.985,966,4.567,967,4.567,968,4.567,969,4.567]],["title/injectables/PersonaRepository.html",[87,0.681,788,2.445]],["body/injectables/PersonaRepository.html",[3,0.086,4,0.076,5,0.076,10,0.105,11,0.511,16,0.013,20,0.515,22,0.679,23,0.622,24,0.275,25,0.622,27,0.687,28,1.259,29,0.385,32,0.6,34,0.543,58,0.086,59,0.035,60,0.879,61,1.142,62,0.663,76,0.988,78,2.407,80,1.533,82,2.444,85,0.006,86,0.006,87,0.716,88,0.955,97,0.971,102,1.699,114,1.142,153,1.532,155,1.728,163,2.025,165,4.196,170,2.06,171,1.284,172,1.461,182,2.06,183,2.725,184,2.06,185,2.06,187,1.943,188,1.918,189,2.572,190,1.8,191,1.699,192,2.06,193,1.284,194,2.212,225,1.397,234,1.8,237,1.8,238,1.611,279,3.069,290,3.34,299,1.611,400,2.615,480,2.238,533,2.212,547,1.611,555,2.725,556,2.572,564,2.904,566,1.918,567,2.475,678,2.725,685,2.475,697,2.238,770,2.475,788,2.572,792,2.238,894,4.196,970,2.475,971,2.836,972,2.836,973,4.294,974,2.836,975,2.836,976,2.836,977,2.836,978,2.836,979,2.836,980,2.836,981,2.836,982,2.836,983,2.836,984,2.836,985,2.836,986,2.836,987,2.836,988,2.836,989,2.836,990,2.836,991,2.836,992,4.294,993,2.836,994,2.836,995,2.836,996,2.836,997,2.836,998,2.836,999,2.836,1000,2.836,1001,2.836]],["title/classes/PersonaSchema.html",[59,0.051,279,1.847]],["body/classes/PersonaSchema.html",[3,0.102,4,0.091,5,0.091,10,0.266,11,0.58,15,2.307,16,0.013,20,0.521,22,0.369,23,0.338,24,0.325,25,0.338,27,0.401,29,0.338,58,0.174,59,0.042,76,1.174,85,0.007,86,0.007,97,1.1,111,0.927,116,1.483,171,1.525,172,2.512,187,3.581,193,1.525,198,2.512,199,4.163,200,3.542,201,5.049,202,3.237,207,4.563,208,2.447,209,2.447,210,3.298,212,2.447,214,2.018,215,2.278,216,2.278,217,2.018,218,3.298,219,2.278,220,2.278,221,2.278,222,2.278,223,2.278,224,2.278,225,2.823,226,2.138,227,2.278,228,2.278,229,2.018,230,2.278,231,2.278,232,2.278,233,2.278,234,2.138,235,2.018,236,2.278,237,2.138,238,1.913,239,2.278,240,2.138,265,2.492,279,2.207,401,3.693,402,2.278,490,2.964,491,2.953,494,3.095,495,3.095,503,2.138,505,1.913,791,2.447,894,2.447,1002,2.447,1003,3.369,1004,3.369,1005,3.369,1006,2.94,1007,3.369,1008,2.94]],["title/injectables/PersonaService.html",[87,0.681,644,2.445]],["body/injectables/PersonaService.html",[3,0.131,4,0.116,5,0.116,10,0.16,11,0.689,16,0.012,20,0.58,22,0.766,23,0.702,24,0.309,25,0.702,27,0.832,28,1.208,29,0.342,32,0.912,58,0.131,59,0.054,85,0.009,86,0.009,87,0.966,88,1.451,97,1.045,155,1.735,163,2.733,194,2.221,198,2.984,202,3.604,274,3.782,279,3.166,290,3.223,400,2.961,533,2.984,547,2.448,555,3.677,556,3.47,644,3.47,678,2.736,1009,3.762,1010,4.311,1011,4.311,1012,4.311,1013,4.311,1014,4.311]],["title/classes/RegistrarEmpresaDto.html",[59,0.051,421,2.445]],["body/classes/RegistrarEmpresaDto.html",[3,0.116,4,0.103,5,0.103,10,0.142,11,0.634,15,2.917,16,0.013,20,0.617,22,0.418,23,0.383,24,0.329,25,0.383,27,0.454,29,0.315,58,0.116,59,0.067,85,0.008,86,0.008,97,1.086,111,1.052,116,1.622,198,2.748,202,3.831,259,3.165,265,2.671,266,3.9,268,2.064,421,3.195,448,4.223,489,3.607,490,3.137,491,3.165,492,4.155,493,3.607,494,3.385,495,3.385,497,3.607,503,2.425,505,2.169,590,3.335,592,2.775,593,2.775,740,5.867,1015,3.014,1016,3.335,1017,5.334,1018,3.821,1019,3.821,1020,3.821,1021,3.821,1022,3.821,1023,3.821,1024,6.145,1025,6.145,1026,3.821]],["title/classes/RegistrarEmpresaUseCase.html",[59,0.051,452,2.964]],["body/classes/RegistrarEmpresaUseCase.html",[3,0.105,4,0.093,5,0.093,10,0.128,11,0.591,16,0.013,20,0.412,22,0.544,23,0.498,24,0.22,25,0.498,26,1.248,27,0.411,28,1.098,29,0.375,34,0.662,58,0.105,59,0.043,60,0.708,62,0.808,76,2.027,78,2.467,80,1.438,85,0.007,86,0.007,111,0.952,151,1.392,183,2.344,251,2.447,252,3.018,253,3.611,255,2.822,256,2.822,259,2.56,272,1.867,301,2.511,314,2.511,315,2.511,316,2.511,317,2.511,318,2.338,319,2.511,320,2.511,324,2.511,325,2.511,407,3.92,409,3.92,421,3.809,424,2.511,448,1.963,452,3.609,454,4.589,1027,5.077,1028,3.458,1029,3.458,1030,3.458,1031,3.458,1032,3.458,1033,4.969,1034,4.969,1035,4.969,1036,4.969,1037,4.969,1038,4.969,1039,4.969,1040,4.969,1041,4.969,1042,4.969,1043,3.458,1044,3.458,1045,3.458,1046,3.458]],["title/classes/RegistrarPersonaDto.html",[59,0.051,869,2.76]],["body/classes/RegistrarPersonaDto.html",[3,0.134,4,0.119,5,0.119,10,0.165,11,0.701,15,2.669,16,0.012,20,0.587,22,0.484,23,0.444,24,0.313,25,0.444,27,0.527,29,0.348,58,0.134,59,0.074,85,0.009,86,0.009,97,1.092,111,1.219,116,1.793,198,3.038,202,3.643,265,2.883,266,4.209,268,2.391,279,3.001,401,3.643,490,3.336,491,3.416,494,3.743,495,3.743,503,2.81,505,2.514,740,5.81,869,3.988,895,3.864,1006,3.864,1015,3.493,1047,3.864,1048,4.428,1049,4.428,1050,4.428]],["title/classes/RegistrarPersonaoUseCase.html",[59,0.051,891,2.964]],["body/classes/RegistrarPersonaoUseCase.html",[3,0.108,4,0.096,5,0.096,10,0.132,11,0.604,16,0.013,20,0.421,22,0.555,23,0.509,24,0.224,25,0.509,26,1.285,27,0.423,28,1.113,29,0.418,34,0.682,58,0.108,59,0.044,60,0.729,62,0.832,76,2.06,78,2.5,80,1.457,85,0.008,86,0.008,111,0.98,151,1.433,183,2.394,251,2.499,256,2.882,271,3.358,272,1.923,273,2.408,274,3.174,276,3.432,278,2.408,279,1.612,280,2.586,301,2.586,314,2.586,315,2.586,316,2.586,317,2.586,318,2.408,319,2.586,320,2.586,324,2.586,325,2.586,398,3.481,401,3.046,402,2.408,403,3.108,404,2.26,405,4.429,406,4.429,407,4.004,408,4.429,409,4.004,410,4.429,415,3.108,686,2.408,891,3.686,960,3.108,1051,5.161,1052,3.561,1053,3.561,1054,3.561,1055,3.561,1056,3.561]],["title/guards/UsuarioGuard.html",[1057,3.22,1058,2.964]],["body/guards/UsuarioGuard.html",[3,0.137,4,0.122,5,0.122,10,0.169,11,0.713,16,0.013,20,0.376,22,0.496,23,0.455,24,0.201,25,0.455,27,0.539,28,1.159,29,0.396,32,0.96,34,0.868,58,0.137,59,0.057,76,2.488,80,1.355,82,2.139,85,0.009,86,0.009,87,0.999,102,2.716,114,1.825,187,2.052,299,3.402,695,3.578,725,3.958,726,3.578,738,3.958,833,5.23,1058,4.352,1059,4.535,1060,3.958,1061,7.423,1062,4.535,1063,7.139,1064,4.535,1065,4.535,1066,4.535,1067,4.535,1068,4.535,1069,5.992,1070,4.535,1071,4.535,1072,4.535,1073,4.535]],["title/modules/UsuarioModule.html",[355,1.925,1074,2.964]],["body/modules/UsuarioModule.html",[2,2.328,3,0.11,4,0.098,5,0.098,16,0.013,29,0.465,32,0.768,58,0.11,59,0.045,85,0.008,86,0.008,187,1.643,255,4.047,355,2.427,357,1.961,358,2.779,365,3.082,366,2.174,367,2.174,369,3.265,372,3.265,375,3.168,376,3.082,377,2.174,378,4.059,379,3.168,388,3.168,389,3.168,390,3.168,391,3.168,392,3.168,393,3.168,430,4.34,535,4.27,632,4.34,644,4.27,645,3.168,743,4.82,783,4.82,788,4.27,858,4.34,1074,5.886,1075,3.168,1076,3.63,1077,3.168,1078,3.63,1079,3.63,1080,3.63,1081,3.63,1082,3.63,1083,3.63,1084,3.63,1085,3.63,1086,3.63,1087,3.63]],["title/controllers/VideoConferenciaController.html",[0,1.847,371,2.964]],["body/controllers/VideoConferenciaController.html",[0,1.501,2,1.501,3,0.1,4,0.089,5,0.089,7,2.617,8,2.41,10,0.123,11,0.574,15,1.335,16,0.013,17,2.41,18,3.503,20,0.275,22,0.363,23,0.333,24,0.147,25,0.333,26,2.251,27,0.676,28,0.833,29,0.44,30,3.503,31,2.41,32,0.702,33,3.805,34,0.635,37,1.987,39,2.895,41,2.106,42,2.617,43,2.895,45,2.895,48,1.884,51,2.244,52,2.244,53,3.503,54,2.41,55,2.244,58,0.1,59,0.041,60,0.679,61,1.941,62,1.127,64,2.41,66,2.617,73,4.127,76,1.156,77,2.106,78,1.287,80,1.285,82,1.565,84,2.895,85,0.007,86,0.007,97,0.962,251,2.375,326,5.022,327,3.503,329,4.127,333,3.606,338,2.889,339,2.617,371,3.503,460,4.531,462,4.921,475,2.617,695,5.228,716,3.503,777,3.061,780,2.41,808,2.895,924,4.209,1058,2.41,1088,4.209,1089,4.209,1090,3.318,1091,3.318,1092,3.318,1093,3.318,1094,3.318,1095,3.318,1096,3.318,1097,3.318,1098,4.823,1099,3.318,1100,3.318,1101,2.895,1102,3.318,1103,3.318,1104,3.318,1105,3.318,1106,3.318,1107,3.318,1108,3.318,1109,3.318,1110,2.895]],["title/injectables/VideoConferenciaCreadaPublisher.html",[87,0.681,777,2.59]],["body/injectables/VideoConferenciaCreadaPublisher.html",[3,0.134,4,0.119,5,0.119,10,0.165,11,0.701,16,0.013,20,0.489,22,0.645,23,0.591,24,0.261,25,0.591,27,0.527,28,1.145,29,0.391,32,0.937,34,0.847,41,4.209,58,0.134,59,0.055,60,1.207,61,1.782,62,1.034,80,1.001,85,0.009,86,0.009,87,0.984,88,1.49,89,5.232,90,3.493,92,2.514,93,4.015,95,3.349,97,0.983,99,2.089,100,2.514,101,2.004,102,2.652,104,3.864,106,3.864,108,3.864,109,3.864,110,3.864,777,3.743,780,4.816,1101,5.147,1111,4.428,1112,5.898,1113,4.428,1114,4.428]],["title/classes/VideoConferenciaDomainEntity.html",[59,0.051,338,2.445]],["body/classes/VideoConferenciaDomainEntity.html",[3,0.113,4,0.1,5,0.1,10,0.138,16,0.013,20,0.625,22,0.407,23,0.373,24,0.333,25,0.801,29,0.22,58,0.113,59,0.047,60,0.762,85,0.008,86,0.008,97,0.914,111,1.025,113,2.937,114,2.108,116,1.592,117,3.44,119,3.804,120,3.249,121,2.704,122,2.704,123,3.249,124,4.409,125,3.249,127,2.704,128,3.249,129,3.249,130,3.249,334,4.86,338,3.137,704,4.78,705,4.78,706,4.78,707,4.78,708,4.78,709,4.78,1115,6.687,1116,5.238,1117,3.723,1118,3.723,1119,3.723,1120,3.723,1121,3.723,1122,3.723,1123,3.723,1124,3.723,1125,3.723,1126,3.723,1127,3.723,1128,3.723,1129,3.723,1130,3.723,1131,3.723,1132,3.723,1133,3.723,1134,3.723,1135,3.723,1136,3.723,1137,3.723,1138,3.723]],["title/injectables/VideoConferenciaMongoService.html",[87,0.681,332,2.445]],["body/injectables/VideoConferenciaMongoService.html",[3,0.121,4,0.107,5,0.107,10,0.148,11,0.653,16,0.013,20,0.455,22,0.601,23,0.551,24,0.243,25,0.551,26,2.267,27,0.474,28,1.299,29,0.419,32,0.843,34,0.762,37,2.386,58,0.121,59,0.05,60,0.815,62,0.931,80,1.605,85,0.008,86,0.008,87,0.916,88,1.341,97,0.874,114,1.603,139,3.142,142,3.476,144,3.476,148,2.386,150,2.893,151,1.603,153,2.151,155,1.603,332,3.288,336,3.713,337,3.476,341,4.032,364,4.397,716,3.987,717,4.331,719,3.476,720,3.476,809,3.476,811,3.142,1139,5.482,1140,3.983,1141,3.983,1142,3.983,1143,3.983,1144,3.983,1145,3.983]],["title/injectables/VideoConferenciaRepository.html",[87,0.681,364,2.445]],["body/injectables/VideoConferenciaRepository.html",[3,0.1,4,0.089,5,0.089,10,0.123,11,0.574,16,0.013,20,0.471,22,0.622,23,0.57,24,0.251,25,0.57,26,2.051,27,0.574,28,1.232,29,0.408,32,0.702,34,0.635,58,0.1,59,0.041,60,0.987,61,1.335,62,0.775,78,2.42,80,1.41,82,2.68,85,0.007,86,0.007,87,0.804,88,1.117,97,0.868,102,1.987,114,1.335,148,1.987,155,1.941,162,2.617,163,2.275,165,4.531,168,4.209,170,2.41,171,1.501,172,1.709,173,3.262,174,2.895,175,2.895,182,3.503,183,2.68,184,2.41,185,2.41,187,1.501,188,2.244,189,1.987,190,3.061,191,2.889,192,3.503,193,2.183,194,1.709,225,1.634,299,1.884,341,3.763,364,2.889,400,1.501,533,2.485,811,2.617,1089,4.209,1146,5.444,1147,3.318,1148,3.318,1149,4.823,1150,3.318,1151,3.318,1152,2.617,1153,3.318,1154,3.318,1155,3.318,1156,3.318,1157,3.318,1158,3.318,1159,3.318]],["title/classes/VideoConferenciaSchema.html",[59,0.051,341,2.318]],["body/classes/VideoConferenciaSchema.html",[3,0.088,4,0.078,5,0.078,10,0.289,15,2.748,16,0.013,20,0.566,24,0.344,29,0.309,48,1.643,58,0.159,59,0.036,76,1.008,85,0.007,86,0.007,97,0.949,111,0.796,116,1.325,117,2.977,124,4.547,171,1.309,172,2.245,187,3.587,193,1.309,197,1.956,198,2.245,199,4.959,200,3.165,201,3.165,202,3.517,205,2.525,207,5.103,208,2.101,209,2.101,210,2.947,212,2.101,214,1.733,215,1.956,216,1.956,217,1.733,218,2.947,219,1.956,220,1.956,221,1.956,222,1.956,223,1.956,224,1.956,225,2.582,226,1.836,227,1.956,228,1.956,229,1.733,230,1.956,231,1.956,232,1.956,233,1.956,234,1.836,235,1.733,236,1.956,237,1.836,238,1.643,239,1.956,240,1.836,338,4.388,339,2.282,341,2.474,704,4.136,705,4.136,706,4.136,707,4.136,708,4.136,709,4.136,810,2.101,1152,2.282,1160,2.101,1161,2.893,1162,2.893,1163,2.893,1164,2.893,1165,2.893,1166,2.893,1167,2.893,1168,2.893,1169,2.525]],["title/classes/VideoConferenciaService.html",[59,0.051,333,2.59]],["body/classes/VideoConferenciaService.html",[3,0.165,4,0.146,5,0.146,10,0.202,11,0.8,16,0.012,20,0.451,22,0.595,23,0.545,24,0.241,25,0.545,26,1.963,27,0.647,28,0.939,29,0.321,58,0.165,59,0.068,85,0.01,86,0.01,111,1.497,198,3.467,202,2.802,244,3.678,247,3.678,332,4.575,333,4.272,341,3.822,716,4.889,717,4.29,1170,4.746,1171,5.439,1172,5.439]],["title/coverage.html",[1173,4.404]],["body/coverage.html",[0,2.449,1,1.338,5,0.05,6,1.608,7,2.406,14,1.338,16,0.013,24,0.082,35,1.17,38,1.17,40,1.338,41,1.935,44,1.827,46,1.104,49,1.338,51,2.062,59,0.096,78,0.715,85,0.005,86,0.005,87,1.238,89,2.406,90,2.406,112,1.608,113,2.406,115,1.246,137,1.104,138,1.608,139,2.406,141,1.104,143,1.046,145,1.246,161,1.608,162,2.406,173,1.246,196,2.215,197,3.066,241,1.338,243,1.608,244,3.066,248,1.338,249,1.608,250,1.608,253,1.046,255,1.046,259,0.949,262,1.246,263,1.608,264,1.608,269,1.246,270,1.608,271,2.851,272,3.235,274,0.908,279,0.834,293,2.406,294,2.406,296,1.608,318,5.676,326,1.338,327,2.215,329,1.338,330,1.608,332,1.104,333,1.17,334,1.246,336,1.246,338,1.104,341,1.046,364,1.104,370,1.338,371,1.338,394,1.338,395,1.608,398,0.995,401,0.949,412,1.338,413,1.608,417,1.17,418,2.406,419,2.406,421,1.104,430,1.338,431,1.608,442,1.17,448,1.046,452,1.338,454,1.454,460,2.215,487,1.608,488,1.338,532,1.608,535,1.104,540,1.338,550,1.608,554,1.608,564,1.246,566,1.246,583,2.215,594,1.338,596,1.608,600,1.608,608,1.338,632,1.338,633,1.608,634,1.608,644,1.104,658,1.791,660,1.608,661,2.406,663,1.608,667,1.608,668,1.608,671,1.338,672,1.608,673,1.454,674,1.608,675,1.608,676,1.608,682,1.454,683,1.608,684,1.608,686,1.246,687,1.608,693,1.454,694,1.608,697,1.454,698,1.608,703,1.608,715,1.608,721,1.338,722,1.608,723,1.246,739,1.608,747,1.17,748,1.17,749,1.17,750,1.17,777,1.17,780,1.338,787,1.731,788,1.104,791,1.338,810,1.338,816,1.454,817,1.608,818,1.608,819,1.454,820,1.608,821,1.608,841,1.608,852,1.608,855,3.066,858,1.338,859,1.608,869,1.246,891,1.338,940,1.608,945,1.608,949,1.608,953,1.608,965,1.608,970,1.608,1002,2.215,1009,1.608,1015,2.406,1016,1.608,1027,1.608,1047,1.608,1051,1.608,1057,1.454,1058,1.338,1060,1.608,1088,1.608,1115,1.608,1139,1.608,1146,1.608,1160,2.215,1170,1.608,1173,1.454,1174,1.843,1175,1.843,1176,1.843,1177,7.777,1178,5.991,1179,3.049,1180,5.411,1181,1.843,1182,4.533,1183,6.836,1184,4.533,1185,5.411,1186,1.608,1187,2.661,1188,5.022,1189,1.608,1190,1.843,1191,1.843]],["title/dependencies.html",[358,2.653,1192,2.97]],["body/dependencies.html",[16,0.013,32,1.059,34,0.958,55,3.383,59,0.08,85,0.01,86,0.01,101,2.264,171,2.264,172,2.577,268,2.702,358,2.702,377,2.996,726,3.946,831,5.574,1193,7.412,1194,5.003,1195,5.003,1196,5.003,1197,5.003,1198,5.003,1199,5.003,1200,5.003,1201,5.003,1202,5.003,1203,5.003,1204,5.003,1205,5.003,1206,5.003,1207,5.003,1208,5.003,1209,5.003,1210,5.003,1211,5.003,1212,5.003,1213,5.003,1214,5.003,1215,5.003,1216,5.003,1217,5.003,1218,5.003,1219,5.003,1220,5.003]],["title/miscellaneous/functions.html",[1221,2.16,1222,4.287]],["body/miscellaneous/functions.html",[10,0.23,16,0.011,85,0.011,86,0.011,1186,5.396,1187,7.192,1189,5.396,1221,3.924,1222,5.396,1223,7.273]],["title/index.html",[10,0.126,1224,3.403,1225,3.403]],["body/index.html",[4,0.121,16,0.012,85,0.009,86,0.009,378,3.553,566,3.046,819,3.553,1173,3.553,1226,4.504,1227,4.504,1228,5.965,1229,4.504,1230,4.504,1231,4.504,1232,4.504,1233,4.504,1234,3.931,1235,6.688,1236,4.504,1237,4.504,1238,4.504,1239,7.764,1240,4.504,1241,4.504,1242,4.504,1243,7.611,1244,4.504,1245,4.504,1246,5.965,1247,4.504,1248,4.504,1249,4.504,1250,4.504,1251,5.965,1252,5.965,1253,4.504,1254,4.504,1255,4.504,1256,5.965,1257,5.965,1258,4.504,1259,4.504,1260,4.504,1261,4.504,1262,4.504,1263,3.931,1264,4.504,1265,4.504,1266,4.504,1267,4.504,1268,4.504,1269,4.504,1270,4.504,1271,4.504,1272,4.504,1273,3.931,1274,4.504,1275,4.504,1276,4.504,1277,4.504,1278,4.504,1279,4.504,1280,3.931]],["title/modules.html",[357,3.015]],["body/modules.html",[16,0.01,85,0.01,86,0.01,356,4.139,357,3.078,362,3.854,363,3.854,743,3.854,783,3.854,1074,4.139,1263,7.059,1281,8.089,1282,8.089,1283,8.089]],["title/overview.html",[1284,4.872]],["body/overview.html",[2,1.156,16,0.013,38,4.148,85,0.006,86,0.006,88,0.86,111,0.703,137,3.915,141,4.046,253,3.711,255,2.756,274,3.219,332,3.915,356,5.148,357,1.38,358,2.14,359,2.229,360,2.229,361,2.229,362,4.691,363,5.287,364,4.046,365,2.373,366,1.53,367,1.53,376,3.752,417,4.148,442,4.148,535,4.046,644,2.908,659,1.068,743,5.346,744,2.229,745,2.229,746,2.229,747,4.148,748,4.148,749,4.148,750,4.148,774,2.229,775,2.229,776,2.229,777,4.148,783,5.287,784,2.229,785,2.229,786,2.229,787,4.025,788,4.046,804,2.229,805,2.229,806,2.229,851,2.229,1057,2.015,1074,5.455,1075,2.229,1077,2.229,1284,2.229,1285,3.962,1286,2.554,1287,2.554,1288,2.554]],["title/properties.html",[116,1.493,1192,2.97]],["body/properties.html",[16,0.012,85,0.011,86,0.011,116,1.898,1234,5.447,1273,5.447,1280,5.447,1289,6.242,1290,6.242,1291,6.242]],["title/miscellaneous/typealiases.html",[1221,2.16,1292,4.912]],["body/miscellaneous/typealiases.html",[10,0.139,16,0.008,24,0.165,85,0.008,86,0.008,172,3.391,176,4.14,193,2.979,196,2.712,197,4.452,210,4.452,215,4.452,216,4.452,217,3.943,218,5.101,219,4.452,220,4.452,221,4.452,222,4.452,223,4.452,224,4.452,225,3.904,226,4.178,227,4.452,228,4.452,229,3.943,230,4.452,231,4.452,232,4.452,233,4.452,234,4.178,235,3.943,236,4.452,237,4.178,238,3.738,239,4.452,240,4.178,568,4.14,583,2.712,894,3.812,1002,2.712,1152,4.14,1160,2.712,1221,2.37,1293,3.734,1294,3.258,1295,3.258,1296,3.258,1297,3.258]],["title/miscellaneous/variables.html",[1221,2.16,1298,4.287]],["body/miscellaneous/variables.html",[10,0.205,16,0.012,85,0.01,86,0.01,196,4,197,5.188,241,4.926,242,4.806,583,4,594,4.926,595,4.806,791,4.926,810,4.926,1002,4,1008,4.806,1110,6.696,1160,4,1169,4.806,1221,3.495,1294,4.806,1295,4.806,1296,4.806,1297,4.806,1298,4.806,1299,7.672]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":318,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1290,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":851,"title":{"injectables/MongooseConfigService-1.html":{}},"body":{"overview.html":{}}}],["14",{"_index":1288,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1286,"title":{},"body":{"overview.html":{}}}],["26",{"_index":1287,"title":{},"body":{"overview.html":{}}}],["4.1.11",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["4.3.7",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1285,"title":{},"body":{"overview.html":{}}}],["6.3.0",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["9.3.12",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["_dato",{"_index":121,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.anfitrion",{"_index":130,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.audio",{"_index":136,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["_dato.chatvivo",{"_index":1126,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.clave",{"_index":518,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["_dato.compartirarchivo",{"_index":1135,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.grabacion",{"_index":1129,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.mail",{"_index":515,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["_dato.nombre",{"_index":512,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["_dato.participante",{"_index":1123,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.participantes",{"_index":133,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["_dato.pizzarra",{"_index":1132,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato.presentacion",{"_index":1138,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.anfitrion",{"_index":128,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.audio",{"_index":134,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["_dato?.chatvivo",{"_index":1124,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.clave",{"_index":516,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["_dato?.compartirarchivo",{"_index":1133,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.grabacion",{"_index":1127,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.mail",{"_index":513,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["_dato?.nombre",{"_index":510,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["_dato?.participante",{"_index":1121,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.participantes",{"_index":131,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["_dato?.pizzarra",{"_index":1130,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_dato?.presentacion",{"_index":1136,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["_id",{"_index":685,"title":{},"body":{"interfaces/IPersonaCuenta.html":{},"injectables/PersonaRepository.html":{}}}],["actualizar",{"_index":555,"title":{},"body":{"injectables/EmpresaRepository.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{}}}],["actualizar(id",{"_index":547,"title":{},"body":{"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{}}}],["actualizar(id:string",{"_index":185,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["actualizaraudioconferencia(id",{"_index":157,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"interfaces/IAudioConferenciaDomainService.html":{}}}],["actualizarvideoconferencia(id",{"_index":719,"title":{},"body":{"interfaces/IVideoConferenciaDomainService.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["al",{"_index":485,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["aliases",{"_index":1293,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":1264,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["amqp://localhost:5672",{"_index":765,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["amqplib",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["anfitrion",{"_index":117,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["any):void",{"_index":627,"title":{},"body":{"controllers/EventoController.html":{}}}],["apioperation",{"_index":53,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["apioperation({summary",{"_index":17,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["apitags",{"_index":54,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["apitags('audioconferencia",{"_index":56,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["apitags('empresa",{"_index":457,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["apitags('persona",{"_index":899,"title":{},"body":{"controllers/PersonaController.html":{}}}],["apitags('videoconferencia",{"_index":1096,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["aplicacion/casodeuso/audioconferencia/crear",{"_index":50,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["aplicacion/casodeuso/videoconferencia/crear",{"_index":1094,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["aplicacion/usecase/empresa/buscar",{"_index":455,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["aplicacion/usecase/empresa/registrar",{"_index":453,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["aplicacion/usecase/persona/buscar",{"_index":646,"title":{},"body":{"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{}}}],["aplicacion/usecase/persona/editar",{"_index":893,"title":{},"body":{"controllers/PersonaController.html":{}}}],["aplicacion/usecase/persona/eliminar",{"_index":896,"title":{},"body":{"controllers/PersonaController.html":{}}}],["aplicacion/usecase/persona/login",{"_index":898,"title":{},"body":{"controllers/PersonaController.html":{}}}],["aplicacion/usecase/persona/registrar",{"_index":892,"title":{},"body":{"controllers/PersonaController.html":{}}}],["app",{"_index":1241,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1233,"title":{},"body":{"index.html":{}}}],["apps/.../audio",{"_index":1294,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../empresa.shema.ts",{"_index":1295,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../persona.shema.ts",{"_index":1296,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../video",{"_index":1297,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/cuenta/src/aplicacion/casodeuso/audioconferencia/crear",{"_index":296,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"coverage.html":{}}}],["apps/cuenta/src/aplicacion/casodeuso/videoconferencia/crear",{"_index":330,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"coverage.html":{}}}],["apps/cuenta/src/cuenta.module.ts",{"_index":368,"title":{},"body":{"modules/CuentaModule.html":{}}}],["apps/cuenta/src/dominio/model/entidades/audio",{"_index":112,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/model/entidades/video",{"_index":1115,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/model/interfaces/audio",{"_index":660,"title":{},"body":{"interfaces/IAudioConferencia.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/model/interfaces/empresa.dominio.interface.usuario.ts",{"_index":674,"title":{},"body":{"interfaces/IEmpresaCuenta.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/model/interfaces/persona.domain.interface.usuario.ts",{"_index":684,"title":{},"body":{"interfaces/IPersonaCuenta.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/model/interfaces/video",{"_index":703,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/repositorios/cuenta",{"_index":667,"title":{},"body":{"interfaces/ICuentaRepository.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/services/audio",{"_index":663,"title":{},"body":{"interfaces/IAudioConferenciaDomainService.html":{},"coverage.html":{}}}],["apps/cuenta/src/dominio/services/video",{"_index":715,"title":{},"body":{"interfaces/IVideoConferenciaDomainService.html":{},"coverage.html":{}}}],["apps/cuenta/src/evento.controller.ts",{"_index":600,"title":{},"body":{"controllers/EventoController.html":{},"coverage.html":{}}}],["apps/cuenta/src/evento.controller.ts:13",{"_index":605,"title":{},"body":{"controllers/EventoController.html":{}}}],["apps/cuenta/src/infraestructura/controllers/audio",{"_index":6,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/controllers/video",{"_index":1088,"title":{},"body":{"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/database/config/mongoose.config.ts",{"_index":841,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/database/config/mongoose.config.ts:11",{"_index":845,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["apps/cuenta/src/infraestructura/database/config/mongoose.config.ts:7",{"_index":844,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["apps/cuenta/src/infraestructura/database/mongoose.cuenta.module.ts",{"_index":807,"title":{},"body":{"modules/MongoModuleCuenta.html":{}}}],["apps/cuenta/src/infraestructura/database/repository/audio",{"_index":161,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/database/repository/video",{"_index":1146,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/database/schema/audio",{"_index":196,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/cuenta/src/infraestructura/database/schema/video",{"_index":1160,"title":{},"body":{"classes/VideoConferenciaSchema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/cuenta/src/infraestructura/database/services/audio",{"_index":138,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/database/services/video",{"_index":1139,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/dto/crear",{"_index":293,"title":{},"body":{"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/exception",{"_index":817,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/menssaging/mensajeria.cuenta.module.ts",{"_index":778,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{}}}],["apps/cuenta/src/infraestructura/menssaging/publisher/video",{"_index":89,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/services/audio",{"_index":243,"title":{},"body":{"classes/AudioConferenciaService.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/services/video",{"_index":1170,"title":{},"body":{"classes/VideoConferenciaService.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/utils/usuario.guard.ts",{"_index":1060,"title":{},"body":{"guards/UsuarioGuard.html":{},"coverage.html":{}}}],["apps/cuenta/src/infraestructura/utils/usuario.guard.ts:7",{"_index":1064,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["apps/cuenta/src/main.ts",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/usuario/src/aplicacion/usecase/empresa/buscar",{"_index":249,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/aplicacion/usecase/empresa/registrar",{"_index":1027,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/aplicacion/usecase/persona/buscar",{"_index":270,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/aplicacion/usecase/persona/editar",{"_index":395,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/aplicacion/usecase/persona/eliminar",{"_index":413,"title":{},"body":{"classes/EliminarPersonaoUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/aplicacion/usecase/persona/login",{"_index":722,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/aplicacion/usecase/persona/registrar",{"_index":1051,"title":{},"body":{"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts",{"_index":487,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:10",{"_index":499,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:12",{"_index":498,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:13",{"_index":502,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:14",{"_index":496,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:39",{"_index":504,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:8",{"_index":501,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/empresa.model.ts:9",{"_index":500,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/interface/datos",{"_index":671,"title":{},"body":{"interfaces/IDatosBasicosModel.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/interface/empresa.interface.ts",{"_index":675,"title":{},"body":{"interfaces/IEmpresaDomainModel.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/interface/login.model.ts",{"_index":683,"title":{},"body":{"interfaces/ILoginModelDomain.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/interface/personalogeada.model.ts",{"_index":694,"title":{},"body":{"interfaces/IPersonaLogeada.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/persona.ts",{"_index":940,"title":{},"body":{"classes/PersonaDomainEntity.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/model/persona.ts:22",{"_index":944,"title":{},"body":{"classes/PersonaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/persona.ts:6",{"_index":943,"title":{},"body":{"classes/PersonaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/persona.ts:7",{"_index":942,"title":{},"body":{"classes/PersonaDomainEntity.html":{}}}],["apps/usuario/src/dominio/model/persona.ts:8",{"_index":941,"title":{},"body":{"classes/PersonaDomainEntity.html":{}}}],["apps/usuario/src/dominio/repositories/usuario",{"_index":697,"title":{},"body":{"interfaces/IUsuarioRepository.html":{},"injectables/PersonaRepository.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/services/empresa.domain.service.ts",{"_index":676,"title":{},"body":{"interfaces/IEmpresaDomainService.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/services/empresa.domain.service.ts:6",{"_index":679,"title":{},"body":{"interfaces/IEmpresaDomainService.html":{}}}],["apps/usuario/src/dominio/services/empresa.domain.service.ts:7",{"_index":677,"title":{},"body":{"interfaces/IEmpresaDomainService.html":{}}}],["apps/usuario/src/dominio/services/persona.domain.service.ts",{"_index":687,"title":{},"body":{"interfaces/IPersonaDomainService.html":{},"coverage.html":{}}}],["apps/usuario/src/dominio/services/persona.domain.service.ts:10",{"_index":689,"title":{},"body":{"interfaces/IPersonaDomainService.html":{}}}],["apps/usuario/src/dominio/services/persona.domain.service.ts:7",{"_index":691,"title":{},"body":{"interfaces/IPersonaDomainService.html":{}}}],["apps/usuario/src/dominio/services/persona.domain.service.ts:8",{"_index":690,"title":{},"body":{"interfaces/IPersonaDomainService.html":{}}}],["apps/usuario/src/dominio/services/persona.domain.service.ts:9",{"_index":688,"title":{},"body":{"interfaces/IPersonaDomainService.html":{}}}],["apps/usuario/src/evento",{"_index":633,"title":{},"body":{"controllers/EventoCuentaController.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/controllers/empresa.controller.ts",{"_index":431,"title":{},"body":{"controllers/EmpresaController.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/controllers/empresa.controller.ts:31",{"_index":441,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["apps/usuario/src/infrastructura/controllers/empresa.controller.ts:51",{"_index":438,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["apps/usuario/src/infrastructura/controllers/persona.controller.ts",{"_index":859,"title":{},"body":{"controllers/PersonaController.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/controllers/persona.controller.ts:104",{"_index":879,"title":{},"body":{"controllers/PersonaController.html":{}}}],["apps/usuario/src/infrastructura/controllers/persona.controller.ts:127",{"_index":884,"title":{},"body":{"controllers/PersonaController.html":{}}}],["apps/usuario/src/infrastructura/controllers/persona.controller.ts:38",{"_index":871,"title":{},"body":{"controllers/PersonaController.html":{}}}],["apps/usuario/src/infrastructura/controllers/persona.controller.ts:59",{"_index":867,"title":{},"body":{"controllers/PersonaController.html":{}}}],["apps/usuario/src/infrastructura/controllers/persona.controller.ts:80",{"_index":876,"title":{},"body":{"controllers/PersonaController.html":{}}}],["apps/usuario/src/infrastructura/database/config/mongoose.config.ts",{"_index":852,"title":{},"body":{"injectables/MongooseConfigService-1.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/database/config/mongoose.config.ts:11",{"_index":854,"title":{},"body":{"injectables/MongooseConfigService-1.html":{}}}],["apps/usuario/src/infrastructura/database/config/mongoose.config.ts:7",{"_index":853,"title":{},"body":{"injectables/MongooseConfigService-1.html":{}}}],["apps/usuario/src/infrastructura/database/mongoose.module.ts",{"_index":789,"title":{},"body":{"modules/MongoModule.html":{}}}],["apps/usuario/src/infrastructura/database/repository/empresa.repository.ts",{"_index":554,"title":{},"body":{"injectables/EmpresaRepository.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/database/repository/empresa.repository.ts:11",{"_index":558,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/empresa.repository.ts:17",{"_index":563,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/empresa.repository.ts:21",{"_index":562,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/empresa.repository.ts:48",{"_index":560,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/empresa.repository.ts:51",{"_index":561,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/persona.repositoy.ts",{"_index":970,"title":{},"body":{"injectables/PersonaRepository.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/database/repository/persona.repositoy.ts:11",{"_index":972,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/persona.repositoy.ts:17",{"_index":977,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/persona.repositoy.ts:22",{"_index":976,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/persona.repositoy.ts:31",{"_index":974,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/repository/persona.repositoy.ts:40",{"_index":975,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["apps/usuario/src/infrastructura/database/schema/empresa.shema",{"_index":260,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{}}}],["apps/usuario/src/infrastructura/database/schema/empresa.shema.ts",{"_index":583,"title":{},"body":{"classes/EmpresaSchema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/usuario/src/infrastructura/database/schema/persona.shema.ts",{"_index":1002,"title":{},"body":{"classes/PersonaSchema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/usuario/src/infrastructura/database/services/empresa.service.mongo",{"_index":258,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{}}}],["apps/usuario/src/infrastructura/database/services/empresa.service.mongo.ts",{"_index":532,"title":{},"body":{"injectables/EmpresaMongoService.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/database/services/empresa.service.mongo.ts:11",{"_index":536,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/empresa.service.mongo.ts:15",{"_index":539,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/empresa.service.mongo.ts:18",{"_index":537,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/persona.service.mongo.ts",{"_index":953,"title":{},"body":{"injectables/PersonaMongoService.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/database/services/persona.service.mongo.ts:10",{"_index":955,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/persona.service.mongo.ts:14",{"_index":959,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/persona.service.mongo.ts:17",{"_index":958,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/persona.service.mongo.ts:20",{"_index":956,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["apps/usuario/src/infrastructura/database/services/persona.service.mongo.ts:23",{"_index":957,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["apps/usuario/src/infrastructura/dto/buscar",{"_index":263,"title":{},"body":{"classes/BuscarMail.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/dto/logarse.dto",{"_index":724,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["apps/usuario/src/infrastructura/dto/logarse.dto.ts",{"_index":739,"title":{},"body":{"classes/LogearseDto.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/dto/logarse.dto.ts:6",{"_index":742,"title":{},"body":{"classes/LogearseDto.html":{}}}],["apps/usuario/src/infrastructura/dto/logarse.dto.ts:9",{"_index":741,"title":{},"body":{"classes/LogearseDto.html":{}}}],["apps/usuario/src/infrastructura/dto/registrar",{"_index":1015,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/messanging/mensajeria.module.ts",{"_index":751,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa",{"_index":418,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/messanging/publisher/persona/persona",{"_index":855,"title":{},"body":{"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/service/empresa.service.ts",{"_index":596,"title":{},"body":{"injectables/EmpresaService.html":{},"coverage.html":{}}}],["apps/usuario/src/infrastructura/service/persona.service.ts",{"_index":1009,"title":{},"body":{"injectables/PersonaService.html":{},"coverage.html":{}}}],["apps/usuario/src/main.ts",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/usuario/src/usuario.module.ts",{"_index":1078,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["argumentshost",{"_index":826,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["array",{"_index":1000,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["audio",{"_index":44,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"interfaces/IAudioConferencia.html":{},"coverage.html":{}}}],["audio?:boolean",{"_index":662,"title":{},"body":{"interfaces/IAudioConferencia.html":{}}}],["audioconferencia",{"_index":9,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaRepository.html":{}}}],["audioconferencia',versionkey",{"_index":213,"title":{},"body":{"classes/AudioConferenciaSchema.html":{}}}],["audioconferencia'})@post('crear",{"_index":19,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["audioconferenciacontroller",{"_index":1,"title":{"controllers/AudioConferenciaController.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"modules/CuentaModule.html":{},"coverage.html":{}}}],["audioconferenciacreadapublisher",{"_index":38,"title":{"injectables/AudioConferenciaCreadaPublisher.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"modules/MensajeriaModuleCuenta.html":{},"coverage.html":{},"overview.html":{}}}],["audioconferenciadocument",{"_index":176,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["audioconferenciadomainentity",{"_index":46,"title":{"classes/AudioConferenciaDomainEntity.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"coverage.html":{}}}],["audioconferenciadomainentity:17",{"_index":203,"title":{},"body":{"classes/AudioConferenciaSchema.html":{}}}],["audioconferenciadomainentity:23",{"_index":204,"title":{},"body":{"classes/AudioConferenciaSchema.html":{}}}],["audioconferenciadomainentity:30",{"_index":206,"title":{},"body":{"classes/AudioConferenciaSchema.html":{}}}],["audioconferenciafactory",{"_index":241,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"modules/MongoModuleCuenta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["audioconferenciamodel",{"_index":167,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["audioconferenciamongoservice",{"_index":137,"title":{"injectables/AudioConferenciaMongoService.html":{}},"body":{"injectables/AudioConferenciaMongoService.html":{},"classes/AudioConferenciaService.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"modules/MongoModuleCuenta.html":{},"coverage.html":{},"overview.html":{}}}],["audioconferenciamongoservice:14",{"_index":245,"title":{},"body":{"classes/AudioConferenciaService.html":{}}}],["audioconferenciaregistradapublisher",{"_index":63,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["audioconferenciarepository",{"_index":141,"title":{"injectables/AudioConferenciaRepository.html":{}},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"modules/CuentaModule.html":{},"modules/MongoModuleCuenta.html":{},"coverage.html":{},"overview.html":{}}}],["audioconferenciaschema",{"_index":143,"title":{"classes/AudioConferenciaSchema.html":{}},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"modules/MongoModuleCuenta.html":{},"coverage.html":{}}}],["audioconferenciaservice",{"_index":35,"title":{"classes/AudioConferenciaService.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"classes/AudioConferenciaService.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"coverage.html":{}}}],["author",{"_index":1273,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backers",{"_index":1265,"title":{},"body":{"index.html":{}}}],["base.repositoy",{"_index":567,"title":{},"body":{"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{}}}],["base.repositoy.ts",{"_index":698,"title":{},"body":{"interfaces/IUsuarioRepository.html":{},"coverage.html":{}}}],["base.repositoy.ts:5",{"_index":702,"title":{},"body":{"interfaces/IUsuarioRepository.html":{}}}],["base.repositoy.ts:6",{"_index":701,"title":{},"body":{"interfaces/IUsuarioRepository.html":{}}}],["base.repositoy.ts:7",{"_index":699,"title":{},"body":{"interfaces/IUsuarioRepository.html":{}}}],["base.repositoy.ts:8",{"_index":700,"title":{},"body":{"interfaces/IUsuarioRepository.html":{}}}],["basicos.interface",{"_index":404,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/PersonaBuscadaPublisher.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["basicos.interface.ts",{"_index":672,"title":{},"body":{"interfaces/IDatosBasicosModel.html":{},"coverage.html":{}}}],["bcrypt",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["being",{"_index":464,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["body",{"_index":30,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["boolean",{"_index":124,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IVideoConferencia.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEliminadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["boolean):void",{"_index":623,"title":{},"body":{"controllers/EventoController.html":{}}}],["bootstrap",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["broker",{"_index":72,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["browse",{"_index":1283,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1281,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1229,"title":{},"body":{"index.html":{}}}],["buscada",{"_index":617,"title":{},"body":{"controllers/EventoController.html":{}}}],["buscada',data",{"_index":631,"title":{},"body":{"controllers/EventoController.html":{}}}],["buscada.publisher",{"_index":446,"title":{},"body":{"controllers/EmpresaController.html":{},"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{}}}],["buscada.publisher.ts",{"_index":419,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"coverage.html":{}}}],["buscada.publisher.ts:13",{"_index":422,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{}}}],["buscada.publisher.ts:7",{"_index":420,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{}}}],["buscar",{"_index":436,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["buscarempresa",{"_index":433,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["buscarempresa(@body",{"_index":476,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["buscarempresa(id",{"_index":435,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["buscarempresausecase",{"_index":248,"title":{"classes/BuscarEmpresaUseCase.html":{}},"body":{"classes/BuscarEmpresaUseCase.html":{},"controllers/EmpresaController.html":{},"coverage.html":{}}}],["buscarempresausecase(this.empresaservice",{"_index":477,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["buscarmail",{"_index":262,"title":{"classes/BuscarMail.html":{}},"body":{"classes/BuscarMail.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"coverage.html":{}}}],["buscarpersona",{"_index":860,"title":{},"body":{"controllers/PersonaController.html":{}}}],["buscarpersona(@body",{"_index":913,"title":{},"body":{"controllers/PersonaController.html":{}}}],["buscarpersona(id",{"_index":865,"title":{},"body":{"controllers/PersonaController.html":{}}}],["buscarpersonausecase",{"_index":269,"title":{"classes/BuscarPersonaUseCase.html":{}},"body":{"classes/BuscarPersonaUseCase.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"coverage.html":{}}}],["buscarpersonausecase(this.personaservice",{"_index":652,"title":{},"body":{"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{}}}],["called",{"_index":928,"title":{},"body":{"controllers/PersonaController.html":{}}}],["calls",{"_index":924,"title":{},"body":{"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["canactivate",{"_index":1061,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["canactivate(context",{"_index":1062,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["cantidadempleado",{"_index":489,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["cantidadempleado:number",{"_index":592,"title":{},"body":{"classes/EmpresaSchema.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["case",{"_index":52,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["case.ts",{"_index":272,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["case.ts:10",{"_index":277,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{}}}],["case.ts:11",{"_index":1029,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["case.ts:12",{"_index":399,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{}}}],["case.ts:13",{"_index":1052,"title":{},"body":{"classes/RegistrarPersonaoUseCase.html":{}}}],["case.ts:14",{"_index":298,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{}}}],["case.ts:5",{"_index":414,"title":{},"body":{"classes/EliminarPersonaoUseCase.html":{}}}],["case.ts:6",{"_index":275,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["case.ts:7",{"_index":1028,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["case.ts:8",{"_index":396,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{}}}],["case.ts:9",{"_index":415,"title":{},"body":{"classes/EliminarPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["caso",{"_index":77,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["caso.execute(data",{"_index":653,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["caso.execute(empresa",{"_index":469,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["caso.execute(id",{"_index":933,"title":{},"body":{"controllers/PersonaController.html":{}}}],["caso.execute(id,personaeditada).pipe(tap((data",{"_index":921,"title":{},"body":{"controllers/PersonaController.html":{}}}],["caso.execute(id.mail).pipe(tap((data",{"_index":478,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["caso.execute(persona",{"_index":904,"title":{},"body":{"controllers/PersonaController.html":{}}}],["caso.execute(user",{"_index":939,"title":{},"body":{"controllers/PersonaController.html":{}}}],["caso.execute({anfitrion:value",{"_index":84,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["catch",{"_index":823,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":824,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["catch(mongoservererror",{"_index":832,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["catcherror",{"_index":299,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"guards/UsuarioGuard.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["catcherror((err",{"_index":188,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/BuscarPersonaUseCase.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["catcherror((err:error",{"_index":182,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["catcherror((error",{"_index":480,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{}}}],["catcherror((error:error",{"_index":324,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["catches",{"_index":909,"title":{},"body":{"controllers/PersonaController.html":{}}}],["chatvivo",{"_index":704,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["chatvivo?:boolean",{"_index":710,"title":{},"body":{"interfaces/IVideoConferencia.html":{}}}],["clase",{"_index":728,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["class",{"_index":59,"title":{"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":111,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"overview.html":{}}}],["clave",{"_index":490,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaLogeada.html":{},"classes/LogearseDto.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["clienproxy",{"_index":95,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["client",{"_index":1105,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["clientproxy",{"_index":93,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["clientsmodule",{"_index":753,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["clientsmodule.register",{"_index":760,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["cluster_cuentamodule",{"_index":359,"title":{},"body":{"modules/CuentaModule.html":{},"overview.html":{}}}],["cluster_cuentamodule_imports",{"_index":360,"title":{},"body":{"modules/CuentaModule.html":{},"overview.html":{}}}],["cluster_cuentamodule_providers",{"_index":361,"title":{},"body":{"modules/CuentaModule.html":{},"overview.html":{}}}],["cluster_mensajeriamodule",{"_index":744,"title":{},"body":{"modules/MensajeriaModule.html":{},"overview.html":{}}}],["cluster_mensajeriamodule_exports",{"_index":745,"title":{},"body":{"modules/MensajeriaModule.html":{},"overview.html":{}}}],["cluster_mensajeriamodule_providers",{"_index":746,"title":{},"body":{"modules/MensajeriaModule.html":{},"overview.html":{}}}],["cluster_mensajeriamodulecuenta",{"_index":774,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{},"overview.html":{}}}],["cluster_mensajeriamodulecuenta_exports",{"_index":775,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{},"overview.html":{}}}],["cluster_mensajeriamodulecuenta_providers",{"_index":776,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{},"overview.html":{}}}],["cluster_mongomodule",{"_index":784,"title":{},"body":{"modules/MongoModule.html":{},"overview.html":{}}}],["cluster_mongomodule_exports",{"_index":786,"title":{},"body":{"modules/MongoModule.html":{},"overview.html":{}}}],["cluster_mongomodule_providers",{"_index":785,"title":{},"body":{"modules/MongoModule.html":{},"overview.html":{}}}],["cluster_mongomodulecuenta",{"_index":804,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"overview.html":{}}}],["cluster_mongomodulecuenta_exports",{"_index":805,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"overview.html":{}}}],["cluster_mongomodulecuenta_providers",{"_index":806,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"overview.html":{}}}],["cluster_usuariomodule",{"_index":1075,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["cluster_usuariomodule_imports",{"_index":1076,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["cluster_usuariomodule_providers",{"_index":1077,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["colección",{"_index":227,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["como",{"_index":237,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["compartirarchivo",{"_index":705,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["compartirarchivo?:boolean",{"_index":713,"title":{},"body":{"interfaces/IVideoConferencia.html":{}}}],["con",{"_index":995,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["conference",{"_index":67,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["conference's",{"_index":69,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["conferencia",{"_index":41,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"modules/MensajeriaModuleCuenta.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"coverage.html":{}}}],["conferencia.controller",{"_index":386,"title":{},"body":{"modules/CuentaModule.html":{}}}],["conferencia.controller.ts",{"_index":7,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["conferencia.controller.ts:30",{"_index":21,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["conferencia.controller.ts:34",{"_index":1092,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["conferencia.dominio.entidad",{"_index":48,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/AudioConferenciaSchema.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"controllers/VideoConferenciaController.html":{},"classes/VideoConferenciaSchema.html":{}}}],["conferencia.dominio.entidad.ts",{"_index":113,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{},"coverage.html":{}}}],["conferencia.dominio.entidad.ts:10",{"_index":1117,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.entidad.ts:11",{"_index":1116,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.entidad.ts:5",{"_index":123,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.entidad.ts:6",{"_index":125,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.entidad.ts:7",{"_index":120,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.entidad.ts:8",{"_index":1118,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.entidad.ts:9",{"_index":1119,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.interfaces",{"_index":127,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["conferencia.dominio.interfaces.ts",{"_index":661,"title":{},"body":{"interfaces/IAudioConferencia.html":{},"interfaces/IVideoConferencia.html":{},"coverage.html":{}}}],["conferencia.dto",{"_index":45,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["conferencia.dto.ts",{"_index":294,"title":{},"body":{"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"coverage.html":{}}}],["conferencia.dto.ts:6",{"_index":328,"title":{},"body":{"classes/CrearVideoConferenciaDTO.html":{}}}],["conferencia.dto.ts:7",{"_index":295,"title":{},"body":{"classes/CrearAudioConferenciaDTO.html":{}}}],["conferencia.repositorio",{"_index":175,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["conferencia.repositorio.ts",{"_index":668,"title":{},"body":{"interfaces/ICuentaRepository.html":{},"coverage.html":{}}}],["conferencia.repositorio.ts:5",{"_index":670,"title":{},"body":{"interfaces/ICuentaRepository.html":{}}}],["conferencia.repositoy",{"_index":150,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"modules/CuentaModule.html":{},"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["conferencia.repositoy.ts",{"_index":162,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/VideoConferenciaRepository.html":{},"coverage.html":{}}}],["conferencia.repositoy.ts:10",{"_index":1148,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["conferencia.repositoy.ts:11",{"_index":166,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["conferencia.repositoy.ts:16",{"_index":1151,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["conferencia.repositoy.ts:17",{"_index":169,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["conferencia.repositoy.ts:22",{"_index":1150,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["conferencia.schema",{"_index":148,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["conferencia.schema.ts",{"_index":197,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["conferencia.service",{"_index":37,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaMongoService.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["conferencia.service.mongo",{"_index":247,"title":{},"body":{"classes/AudioConferenciaService.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/MongoModuleCuenta.html":{},"classes/VideoConferenciaService.html":{}}}],["conferencia.service.mongo.ts",{"_index":139,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/VideoConferenciaMongoService.html":{},"coverage.html":{}}}],["conferencia.service.mongo.ts:10",{"_index":142,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["conferencia.service.mongo.ts:14",{"_index":144,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["conferencia.service.ts",{"_index":244,"title":{},"body":{"classes/AudioConferenciaService.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{}}}],["conferencia.service.ts:7",{"_index":665,"title":{},"body":{"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/IVideoConferenciaDomainService.html":{}}}],["conferencia.use",{"_index":51,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["conferencia/audio",{"_index":40,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"modules/MensajeriaModuleCuenta.html":{},"coverage.html":{}}}],["conferencia/video",{"_index":780,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"coverage.html":{}}}],["config/mongoose.config",{"_index":793,"title":{},"body":{"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{}}}],["configmodule",{"_index":375,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["configmodule.forroot",{"_index":388,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["configservice",{"_index":376,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["connection",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["console.error('se",{"_index":483,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["console.log(\"repo",{"_index":1154,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["console.log(\"ver",{"_index":727,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["console.log('empresa",{"_index":628,"title":{},"body":{"controllers/EventoController.html":{}}}],["console.log('mensaje",{"_index":649,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["console.log('persona",{"_index":613,"title":{},"body":{"controllers/EventoController.html":{}}}],["console.log(error",{"_index":473,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["const",{"_index":76,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/AudioConferenciaSchema.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"classes/VideoConferenciaSchema.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoController.html":{},"classes/LogearPersonaoUseCase.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["constructor(_dato",{"_index":119,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["constructor(audioconferenciamodel",{"_index":164,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["constructor(audioconferenciarepository",{"_index":140,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["constructor(audioconferenciaservice",{"_index":297,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["constructor(clienproxy",{"_index":92,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["constructor(configservice",{"_index":843,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["constructor(empresamodel",{"_index":557,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["constructor(empresarepository",{"_index":534,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["constructor(empresaservice",{"_index":252,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{}}}],["constructor(personamodel",{"_index":971,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["constructor(personarepository",{"_index":954,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["constructor(private",{"_index":151,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaMongoService.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaMongoService.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["constructor(usuarioservice",{"_index":273,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["constructor(videoconferenciamodel",{"_index":1147,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["constructor(videoconferenciarepository",{"_index":1140,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{}}}],["constructor(videoconferenciaservice",{"_index":331,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["context",{"_index":833,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"guards/UsuarioGuard.html":{}}}],["context.getresponse",{"_index":835,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":1067,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["controller('audioconferencia",{"_index":57,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["controller('empresa",{"_index":458,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["controller('persona",{"_index":900,"title":{},"body":{"controllers/PersonaController.html":{}}}],["controller('videoconferencia",{"_index":1097,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"modules/CuentaModule.html":{},"controllers/EmpresaController.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"controllers/PersonaController.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"overview.html":{}}}],["convertir",{"_index":573,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["coverage",{"_index":1173,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creada.publisher",{"_index":42,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"modules/MensajeriaModuleCuenta.html":{},"controllers/VideoConferenciaController.html":{}}}],["creada.publisher.ts",{"_index":90,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"coverage.html":{}}}],["creada.publisher.ts:12",{"_index":98,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{}}}],["creada.publisher.ts:13",{"_index":1113,"title":{},"body":{"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["creada.publisher.ts:6",{"_index":94,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{}}}],["creada.publisher.ts:7",{"_index":1111,"title":{},"body":{"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["crear",{"_index":18,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["crearaudioconferencia",{"_index":12,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaMongoService.html":{},"classes/AudioConferenciaService.html":{},"interfaces/IAudioConferenciaDomainService.html":{}}}],["crearaudioconferencia(@body",{"_index":74,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["crearaudioconferencia(dato",{"_index":13,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaMongoService.html":{},"classes/AudioConferenciaService.html":{},"interfaces/IAudioConferenciaDomainService.html":{}}}],["crearaudioconferenciadto",{"_index":14,"title":{"classes/CrearAudioConferenciaDTO.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"classes/CrearAudioConferenciaDTO.html":{},"coverage.html":{}}}],["crearaudioconferenciadto):observable",{"_index":75,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["crearaudioconferenciausecase",{"_index":49,"title":{"classes/CrearAudioConferenciaUseCase.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"coverage.html":{}}}],["crearaudioconferenciausecase(this.audioconferenciaservice",{"_index":79,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["crearempresa",{"_index":434,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["crearempresa(@body",{"_index":466,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["crearempresa(empresa",{"_index":439,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["crearpersona",{"_index":861,"title":{},"body":{"controllers/PersonaController.html":{}}}],["crearpersona(@body",{"_index":901,"title":{},"body":{"controllers/PersonaController.html":{}}}],["crearpersona(persona",{"_index":868,"title":{},"body":{"controllers/PersonaController.html":{}}}],["crearvideoconferencia",{"_index":716,"title":{},"body":{"interfaces/IVideoConferenciaDomainService.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaMongoService.html":{},"classes/VideoConferenciaService.html":{}}}],["crearvideoconferencia(@param('token",{"_index":1106,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["crearvideoconferencia(dato",{"_index":717,"title":{},"body":{"interfaces/IVideoConferenciaDomainService.html":{},"injectables/VideoConferenciaMongoService.html":{},"classes/VideoConferenciaService.html":{}}}],["crearvideoconferencia(token",{"_index":1090,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["crearvideoconferenciadto",{"_index":326,"title":{"classes/CrearVideoConferenciaDTO.html":{}},"body":{"classes/CrearVideoConferenciaDTO.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["crearvideoconferenciadto):observable",{"_index":1107,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["crearvideoconferenciausecase",{"_index":329,"title":{"classes/CrearVideoConferenciaUseCase.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["crearvideoconferenciausecase(this.videoconferenciaservice",{"_index":1108,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["createhash",{"_index":506,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/PersonaDomainEntity.html":{}}}],["createhash('sha256",{"_index":529,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/PersonaDomainEntity.html":{}}}],["createmongooseoptions",{"_index":842,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["creates",{"_index":66,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["crypto",{"_index":507,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/PersonaDomainEntity.html":{}}}],["cuenta",{"_index":771,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["cuenta.controller",{"_index":1087,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["cuenta.controller.ts",{"_index":634,"title":{},"body":{"controllers/EventoCuentaController.html":{},"coverage.html":{}}}],["cuenta.controller.ts:17",{"_index":642,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuenta.controller.ts:31",{"_index":639,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuenta/src/dominio/model/entidades/audio",{"_index":211,"title":{},"body":{"classes/AudioConferenciaSchema.html":{}}}],["cuenta_queue",{"_index":782,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{}}}],["cuenta_service",{"_index":781,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{}}}],["cuentaaudioconferencia",{"_index":635,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuentaaudioconferencia(@payload",{"_index":656,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuentaaudioconferencia(data",{"_index":637,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuentamodule",{"_index":356,"title":{"modules/CuentaModule.html":{}},"body":{"modules/CuentaModule.html":{},"modules.html":{},"overview.html":{}}}],["cuentavideoconferencia",{"_index":636,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuentavideoconferencia(@payload",{"_index":647,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["cuentavideoconferencia(data",{"_index":640,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["data",{"_index":99,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/ICuentaRepository.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["data:ipersonacuenta}):void",{"_index":612,"title":{},"body":{"controllers/EventoController.html":{}}}],["database/schema/empresa.shema",{"_index":1026,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["database/schema/persona.shema",{"_index":895,"title":{},"body":{"controllers/PersonaController.html":{},"classes/RegistrarPersonaDto.html":{}}}],["database/services/audio",{"_index":246,"title":{},"body":{"classes/AudioConferenciaService.html":{}}}],["database/services/empresa.service.mongo",{"_index":599,"title":{},"body":{"injectables/EmpresaService.html":{}}}],["database/services/persona.service.mongo",{"_index":1014,"title":{},"body":{"injectables/PersonaService.html":{}}}],["database/services/video",{"_index":1172,"title":{},"body":{"classes/VideoConferenciaService.html":{}}}],["dato",{"_index":26,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["dato.anfitrion",{"_index":310,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{}}}],["dato.cantidadempleado",{"_index":1038,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["dato.clave",{"_index":733,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["dato.mail",{"_index":407,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["dato.nombre",{"_index":409,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["dato.rubro",{"_index":1042,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["dato.rut",{"_index":1040,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["de",{"_index":225,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaSchema.html":{},"controllers/EventoController.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["deben",{"_index":221,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["decodificar",{"_index":1070,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/AudioConferenciaSchema.html":{},"classes/BuscarMail.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaSchema.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearseDto.html":{},"controllers/PersonaController.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"controllers/VideoConferenciaController.html":{},"classes/VideoConferenciaSchema.html":{}}}],["default",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["define",{"_index":215,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":20,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}}}],["definido",{"_index":232,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["delete",{"_index":887,"title":{},"body":{"controllers/PersonaController.html":{}}}],["delete('eliminar/:id",{"_index":923,"title":{},"body":{"controllers/PersonaController.html":{}}}],["dentro",{"_index":224,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":358,"title":{"dependencies.html":{}},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1234,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":839,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["development",{"_index":1242,"title":{},"body":{"index.html":{}}}],["devolver",{"_index":999,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["devuelto",{"_index":575,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["documentation",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["documento",{"_index":239,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["documentos",{"_index":220,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["domain",{"_index":911,"title":{},"body":{"controllers/PersonaController.html":{}}}],["dominio/model/empresa.model",{"_index":449,"title":{},"body":{"controllers/EmpresaController.html":{},"classes/EmpresaSchema.html":{}}}],["dominio/model/entidades/audio",{"_index":47,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["dominio/model/entidades/video",{"_index":339,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"controllers/VideoConferenciaController.html":{},"classes/VideoConferenciaSchema.html":{}}}],["dominio/model/interface/datos",{"_index":403,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["dominio/model/interfaces/persona.domain.interface.usuario",{"_index":609,"title":{},"body":{"controllers/EventoController.html":{}}}],["dominio/model/interfaces/video",{"_index":335,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["dominio/model/persona",{"_index":402,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["dominio/repositorios/cuenta",{"_index":174,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["dominio/services/audio",{"_index":146,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["dominio/services/empresa.domain.service",{"_index":541,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["dominio/services/persona.domain.service",{"_index":960,"title":{},"body":{"injectables/PersonaMongoService.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["dominio/services/video",{"_index":337,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["dto/buscar",{"_index":450,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["dto/crear",{"_index":43,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["dto/logarse.dto",{"_index":897,"title":{},"body":{"controllers/PersonaController.html":{}}}],["dto/registrar",{"_index":423,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["durable",{"_index":769,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["e2e",{"_index":1253,"title":{},"body":{"index.html":{}}}],["editada',data",{"_index":620,"title":{},"body":{"controllers/EventoController.html":{}}}],["editada.publisher",{"_index":758,"title":{},"body":{"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{}}}],["editada.publisher.ts",{"_index":945,"title":{},"body":{"injectables/PersonaEditadaPublisher.html":{},"coverage.html":{}}}],["editada.publisher.ts:13",{"_index":947,"title":{},"body":{"injectables/PersonaEditadaPublisher.html":{}}}],["editada.publisher.ts:7",{"_index":946,"title":{},"body":{"injectables/PersonaEditadaPublisher.html":{}}}],["editar",{"_index":874,"title":{},"body":{"controllers/PersonaController.html":{}}}],["editarpersona",{"_index":862,"title":{},"body":{"controllers/PersonaController.html":{}}}],["editarpersona(@param('id",{"_index":918,"title":{},"body":{"controllers/PersonaController.html":{}}}],["editarpersona(id",{"_index":872,"title":{},"body":{"controllers/PersonaController.html":{}}}],["editarpersonaousecase",{"_index":394,"title":{"classes/EditarPersonaoUseCase.html":{}},"body":{"classes/EditarPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"coverage.html":{}}}],["editarpersonaousecase(this.personaservice",{"_index":920,"title":{},"body":{"controllers/PersonaController.html":{}}}],["edited",{"_index":917,"title":{},"body":{"controllers/PersonaController.html":{}}}],["efficient",{"_index":1230,"title":{},"body":{"index.html":{}}}],["el",{"_index":229,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"controllers/EventoCuentaController.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["eliminada',data",{"_index":624,"title":{},"body":{"controllers/EventoController.html":{}}}],["eliminada.publisher",{"_index":759,"title":{},"body":{"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{}}}],["eliminada.publisher.ts",{"_index":949,"title":{},"body":{"injectables/PersonaEliminadaPublisher.html":{},"coverage.html":{}}}],["eliminada.publisher.ts:12",{"_index":951,"title":{},"body":{"injectables/PersonaEliminadaPublisher.html":{}}}],["eliminada.publisher.ts:6",{"_index":950,"title":{},"body":{"injectables/PersonaEliminadaPublisher.html":{}}}],["eliminar",{"_index":556,"title":{},"body":{"injectables/EmpresaRepository.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{}}}],["eliminar(id",{"_index":194,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["eliminaraudioconferencia(id",{"_index":159,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"interfaces/IAudioConferenciaDomainService.html":{}}}],["eliminarpersona",{"_index":863,"title":{},"body":{"controllers/PersonaController.html":{}}}],["eliminarpersona(@param('id",{"_index":931,"title":{},"body":{"controllers/PersonaController.html":{}}}],["eliminarpersona(id",{"_index":877,"title":{},"body":{"controllers/PersonaController.html":{}}}],["eliminarpersonaousecase",{"_index":412,"title":{"classes/EliminarPersonaoUseCase.html":{}},"body":{"classes/EliminarPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"coverage.html":{}}}],["eliminarpersonaousecase(this.personaservice",{"_index":932,"title":{},"body":{"controllers/PersonaController.html":{}}}],["eliminarvideoconferencia(id",{"_index":720,"title":{},"body":{"interfaces/IVideoConferenciaDomainService.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["empresa",{"_index":432,"title":{},"body":{"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{}}}],["empresa',versionkey",{"_index":591,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresa'})@get('buscar",{"_index":437,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["empresa'})@post('/crear",{"_index":440,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["empresa.cantidadempleado",{"_index":521,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["empresa.dto",{"_index":424,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"classes/RegistrarEmpresaUseCase.html":{}}}],["empresa.dto.ts",{"_index":1016,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{},"coverage.html":{}}}],["empresa.rubro",{"_index":527,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["empresa.rut",{"_index":524,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["empresa.use",{"_index":454,"title":{},"body":{"controllers/EmpresaController.html":{},"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{}}}],["empresa.use.case",{"_index":456,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["empresa.use.case.ts",{"_index":250,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{},"coverage.html":{}}}],["empresa.use.case.ts:11",{"_index":257,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{}}}],["empresa.use.case.ts:7",{"_index":254,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{}}}],["empresa?.cantidadempleado",{"_index":519,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["empresa?.rubro",{"_index":525,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["empresa?.rut",{"_index":522,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["empresabuscada(@payload",{"_index":630,"title":{},"body":{"controllers/EventoController.html":{}}}],["empresabuscadapublisher",{"_index":417,"title":{"injectables/EmpresaBuscadaPublisher.html":{}},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"modules/MensajeriaModule.html":{},"coverage.html":{},"overview.html":{}}}],["empresacontroller",{"_index":430,"title":{"controllers/EmpresaController.html":{}},"body":{"controllers/EmpresaController.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["empresacreada(@payload",{"_index":626,"title":{},"body":{"controllers/EventoController.html":{}}}],["empresadocument",{"_index":568,"title":{},"body":{"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["empresadomainentity",{"_index":448,"title":{"classes/EmpresaDomainEntity.html":{}},"body":{"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IEmpresaDomainService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{}}}],["empresadomainentity:12",{"_index":1019,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["empresadomainentity:14",{"_index":587,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresadomainentity:16",{"_index":1018,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["empresadomainentity:20",{"_index":1023,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["empresadomainentity:22",{"_index":586,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresadomainentity:23",{"_index":1022,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["empresadomainentity:29",{"_index":585,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresadomainentity:37",{"_index":584,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresadomainentity:39",{"_index":590,"title":{},"body":{"classes/EmpresaSchema.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["empresadomainentity:45",{"_index":589,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresadomainentity:52",{"_index":588,"title":{},"body":{"classes/EmpresaSchema.html":{}}}],["empresadomainentity:6",{"_index":1021,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["empresadomainentity:9",{"_index":1020,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["empresamodel",{"_index":559,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["empresamongoservice",{"_index":253,"title":{"injectables/EmpresaMongoService.html":{}},"body":{"classes/BuscarEmpresaUseCase.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaService.html":{},"modules/MongoModule.html":{},"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["empresamongoservice:15",{"_index":598,"title":{},"body":{"injectables/EmpresaService.html":{}}}],["empresamongoservice:18",{"_index":597,"title":{},"body":{"injectables/EmpresaService.html":{}}}],["empresaregistradapublisher",{"_index":442,"title":{"injectables/EmpresaRegistradaPublisher.html":{}},"body":{"controllers/EmpresaController.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"modules/MensajeriaModule.html":{},"coverage.html":{},"overview.html":{}}}],["empresarepository",{"_index":535,"title":{"injectables/EmpresaRepository.html":{}},"body":{"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"modules/MongoModule.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["empresaschema",{"_index":259,"title":{"classes/EmpresaSchema.html":{}},"body":{"classes/BuscarEmpresaUseCase.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"modules/MongoModule.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{}}}],["empresaschemafactory",{"_index":594,"title":{},"body":{"classes/EmpresaSchema.html":{},"modules/MongoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["empresaservice",{"_index":255,"title":{"injectables/EmpresaService.html":{}},"body":{"classes/BuscarEmpresaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaService.html":{},"classes/RegistrarEmpresaUseCase.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["en",{"_index":217,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"controllers/EventoCuentaController.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["encontr",{"_index":289,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["encontrada",{"_index":988,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["encontro",{"_index":192,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["entity",{"_index":912,"title":{},"body":{"controllers/PersonaController.html":{}}}],["entonces",{"_index":996,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["env.${process.env.scope?.trimend",{"_index":393,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["envfilepath",{"_index":390,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["environments",{"_index":392,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["err.message",{"_index":292,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["error",{"_index":189,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["error(\"credenciales",{"_index":735,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["error(\"method",{"_index":581,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["error('dato",{"_index":284,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["error('datos",{"_index":319,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["error('no",{"_index":190,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["error(`no",{"_index":288,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["error(err.message",{"_index":184,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["error(error.message",{"_index":325,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["error.exception",{"_index":820,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["error:error",{"_index":472,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["errores",{"_index":482,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["errors",{"_index":930,"title":{},"body":{"controllers/PersonaController.html":{}}}],["errors.length",{"_index":317,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["esquema",{"_index":230,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["estoy",{"_index":990,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["evento",{"_index":1086,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["evento.controller",{"_index":374,"title":{},"body":{"modules/CuentaModule.html":{}}}],["eventocontroller",{"_index":370,"title":{"controllers/EventoController.html":{}},"body":{"modules/CuentaModule.html":{},"controllers/EventoController.html":{},"coverage.html":{}}}],["eventocuentacontroller",{"_index":632,"title":{"controllers/EventoCuentaController.html":{}},"body":{"controllers/EventoCuentaController.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["eventpattern",{"_index":606,"title":{},"body":{"controllers/EventoController.html":{}}}],["eventpattern('usuario.empresa.buscada",{"_index":625,"title":{},"body":{"controllers/EventoController.html":{}}}],["eventpattern('usuario.empresa.registrada",{"_index":629,"title":{},"body":{"controllers/EventoController.html":{}}}],["eventpattern('usuario.persona.buscada",{"_index":615,"title":{},"body":{"controllers/EventoController.html":{}}}],["eventpattern('usuario.persona.editada",{"_index":618,"title":{},"body":{"controllers/EventoController.html":{}}}],["eventpattern('usuario.persona.eliminada",{"_index":621,"title":{},"body":{"controllers/EventoController.html":{}}}],["eventpattern('usuario.persona.registrada",{"_index":604,"title":{},"body":{"controllers/EventoController.html":{}}}],["exception",{"_index":828,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["exception.message",{"_index":836,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":822,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["execute",{"_index":251,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"controllers/VideoConferenciaController.html":{}}}],["execute(dato",{"_index":256,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["execute(id",{"_index":397,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{}}}],["executes",{"_index":908,"title":{},"body":{"controllers/PersonaController.html":{}}}],["executioncontext",{"_index":1063,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["export",{"_index":58,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}}}],["exports",{"_index":752,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{}}}],["express",{"_index":831,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":198,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}}}],["false",{"_index":214,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EmpresaSchema.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{}}}],["filter.ts",{"_index":821,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["filter.ts:14",{"_index":827,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["filters/mongo",{"_index":818,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["findall",{"_index":153,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaMongoService.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["findone",{"_index":577,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["findoneby",{"_index":533,"title":{},"body":{"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["findoneby(id",{"_index":155,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["forma",{"_index":216,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["framework",{"_index":1228,"title":{},"body":{"index.html":{}}}],["from(promise.resolve(this.empresamodel.findone({mail",{"_index":571,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["from(promise.resolve(this.personamodel.findone({mail",{"_index":982,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["from(this.audioconferenciamodel.create(dato",{"_index":178,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["from(this.audioconferenciamodel.find",{"_index":179,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["from(this.audioconferenciamodel.findbyid(id",{"_index":181,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["from(this.audioconferenciamodel.findbyidanddelete(id",{"_index":195,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["from(this.audioconferenciamodel.findbyidandupdate(id",{"_index":186,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["from(this.empresamodel.create(empresa",{"_index":570,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["from(this.empresamodel.findbyidanddelete(id",{"_index":580,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["from(this.empresamodel.findbyidandupdate(id",{"_index":579,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["from(this.personamodel.create(persona",{"_index":981,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["from(this.personamodel.find",{"_index":989,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["from(this.personamodel.findbyidanddelete(_id)).pipe",{"_index":985,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["from(this.personamodel.findbyidandupdate(id",{"_index":983,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["from(this.usuarioservice.findoneby(dato.mail)).pipe",{"_index":730,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["from(this.videoconferenciamodel.create(dato",{"_index":1156,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["from(this.videoconferenciamodel.findbyid(id",{"_index":1157,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["from(this.videoconferenciamodel.findbyidanddelete(id",{"_index":1159,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["from(this.videoconferenciamodel.findbyidandupdate(id",{"_index":1158,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["from(validate(dato",{"_index":314,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["function",{"_index":460,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["functions",{"_index":1222,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('buscar",{"_index":474,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["getting",{"_index":1224,"title":{"index.html":{}},"body":{}}],["grabacion",{"_index":706,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["grabacion?:boolean",{"_index":711,"title":{},"body":{"interfaces/IVideoConferencia.html":{}}}],["grow",{"_index":1260,"title":{},"body":{"index.html":{}}}],["gt",{"_index":1103,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["guard",{"_index":1057,"title":{"guards/UsuarioGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1059,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["handles",{"_index":929,"title":{},"body":{"controllers/PersonaController.html":{}}}],["hash",{"_index":528,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/PersonaDomainEntity.html":{}}}],["hash.digest('hex",{"_index":531,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/PersonaDomainEntity.html":{}}}],["hash.update(clave",{"_index":530,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["hash.update(dato.clave",{"_index":732,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["here",{"_index":1270,"title":{},"body":{"index.html":{}}}],["hidrata",{"_index":228,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["host",{"_index":70,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":834,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":1277,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":829,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["httpstatus.conflict",{"_index":838,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["hydrateddocument",{"_index":210,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["iaudioconferencia",{"_index":115,"title":{"interfaces/IAudioConferencia.html":{}},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"interfaces/IAudioConferencia.html":{},"coverage.html":{}}}],["iaudioconferenciadomainservice",{"_index":145,"title":{"interfaces/IAudioConferenciaDomainService.html":{}},"body":{"injectables/AudioConferenciaMongoService.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"coverage.html":{}}}],["icuentarepository",{"_index":173,"title":{"interfaces/ICuentaRepository.html":{}},"body":{"injectables/AudioConferenciaRepository.html":{},"interfaces/ICuentaRepository.html":{},"injectables/VideoConferenciaRepository.html":{},"coverage.html":{}}}],["id",{"_index":400,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["idatosbasicosmodel",{"_index":398,"title":{"interfaces/IDatosBasicosModel.html":{}},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/EmpresaDomainEntity.html":{},"interfaces/IDatosBasicosModel.html":{},"injectables/PersonaBuscadaPublisher.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["identifier",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["iempresacuenta",{"_index":673,"title":{"interfaces/IEmpresaCuenta.html":{}},"body":{"interfaces/IEmpresaCuenta.html":{},"coverage.html":{}}}],["iempresadomainmodel",{"_index":488,"title":{"interfaces/IEmpresaDomainModel.html":{}},"body":{"classes/EmpresaDomainEntity.html":{},"interfaces/IEmpresaDomainModel.html":{},"coverage.html":{}}}],["iempresadomainservice",{"_index":540,"title":{"interfaces/IEmpresaDomainService.html":{}},"body":{"injectables/EmpresaMongoService.html":{},"interfaces/IEmpresaDomainService.html":{},"coverage.html":{}}}],["if(persona.clave",{"_index":734,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["iloginmodeldomain",{"_index":682,"title":{"interfaces/ILoginModelDomain.html":{}},"body":{"interfaces/ILoginModelDomain.html":{},"coverage.html":{}}}],["implemented",{"_index":582,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["implements",{"_index":114,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"guards/UsuarioGuard.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["import",{"_index":29,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}}}],["imports",{"_index":372,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{}}}],["incorrectas",{"_index":736,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["incorrectos",{"_index":320,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}}}],["infraestructura/controllers/audio",{"_index":387,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/controllers/video",{"_index":385,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/database/mongoose.cuenta.module",{"_index":380,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/database/repository/audio",{"_index":383,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/database/repository/video",{"_index":384,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/database/schema/audio",{"_index":307,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["infraestructura/database/schema/video",{"_index":342,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["infraestructura/database/services/audio",{"_index":306,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["infraestructura/database/services/video",{"_index":340,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["infraestructura/menssaging/mensajeria.cuenta.module",{"_index":381,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/services/audio",{"_index":373,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infraestructura/services/video",{"_index":382,"title":{},"body":{"modules/CuentaModule.html":{}}}],["infrastructura/controllers/empresa.controller",{"_index":1084,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/controllers/persona.controller",{"_index":1080,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/database/mongoose.module",{"_index":1079,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/database/repository/empresa.repository",{"_index":1081,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/database/repository/persona.repositoy",{"_index":1082,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/database/schema/empresa.shema",{"_index":1032,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["infrastructura/database/schema/persona.shema",{"_index":280,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"controllers/EventoCuentaController.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["infrastructura/database/services/empresa.service.mongo",{"_index":1031,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["infrastructura/database/services/persona.service.mongo",{"_index":278,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["infrastructura/messanging/mensajeria.module",{"_index":1085,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/service/empresa.service",{"_index":1083,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["infrastructura/service/persona.service",{"_index":645,"title":{},"body":{"controllers/EventoCuentaController.html":{},"modules/UsuarioModule.html":{}}}],["inherited",{"_index":202,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{}}}],["iniciar",{"_index":881,"title":{},"body":{"controllers/PersonaController.html":{}}}],["inject",{"_index":100,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["inject('cuenta_service",{"_index":104,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["inject('usuario_service",{"_index":425,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"guards/UsuarioGuard.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"overview.html":{}}}],["injectmodel",{"_index":170,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["injectmodel(audioconferenciaschema.name",{"_index":177,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["injectmodel(empresaschema.name",{"_index":569,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["injectmodel(personaschema.name",{"_index":980,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["injectmodel(videoconferenciaschema.name",{"_index":1153,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["installation",{"_index":1238,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1240,"title":{},"body":{"index.html":{}}}],["instance",{"_index":907,"title":{},"body":{"controllers/PersonaController.html":{}}}],["interface",{"_index":658,"title":{"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{}},"body":{"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"coverage.html":{}}}],["interface/datos",{"_index":508,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["interface/empresa.interface",{"_index":509,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["interfaces",{"_index":659,"title":{},"body":{"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"overview.html":{}}}],["interfaces/audio",{"_index":126,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["interfaces/video",{"_index":1120,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["inyectado",{"_index":993,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["ipersonacuenta",{"_index":608,"title":{"interfaces/IPersonaCuenta.html":{}},"body":{"controllers/EventoController.html":{},"interfaces/IPersonaCuenta.html":{},"coverage.html":{}}}],["ipersonadomainservice",{"_index":686,"title":{"interfaces/IPersonaDomainService.html":{}},"body":{"interfaces/IPersonaDomainService.html":{},"injectables/PersonaMongoService.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["ipersonalogeada",{"_index":693,"title":{"interfaces/IPersonaLogeada.html":{}},"body":{"interfaces/IPersonaLogeada.html":{},"coverage.html":{}}}],["isemail",{"_index":266,"title":{},"body":{"classes/BuscarMail.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/LogearseDto.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["isglobal",{"_index":389,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["isnumber",{"_index":1024,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["isnumber()@ispositive",{"_index":1017,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["ispositive",{"_index":1025,"title":{},"body":{"classes/RegistrarEmpresaDto.html":{}}}],["isstring",{"_index":740,"title":{},"body":{"classes/LogearseDto.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["iusuariorepository",{"_index":564,"title":{"interfaces/IUsuarioRepository.html":{}},"body":{"injectables/EmpresaRepository.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaRepository.html":{},"coverage.html":{}}}],["ivideoconferencia",{"_index":334,"title":{"interfaces/IVideoConferencia.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"coverage.html":{}}}],["ivideoconferenciadomainservice",{"_index":336,"title":{"interfaces/IVideoConferenciaDomainService.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"injectables/VideoConferenciaMongoService.html":{},"coverage.html":{}}}],["join",{"_index":378,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{},"index.html":{}}}],["json.stringify",{"_index":429,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["jsonwebtoken",{"_index":726,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"dependencies.html":{}}}],["jwt",{"_index":725,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{}}}],["jwt.verify(token",{"_index":1071,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["kamil",{"_index":1274,"title":{},"body":{"index.html":{}}}],["la",{"_index":193,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"classes/LogearPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["license",{"_index":1280,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1257,"title":{},"body":{"index.html":{}}}],["literal",{"_index":603,"title":{},"body":{"controllers/EventoController.html":{}}}],["lo",{"_index":992,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["logearpersonaousecase",{"_index":721,"title":{"classes/LogearPersonaoUseCase.html":{}},"body":{"classes/LogearPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"coverage.html":{}}}],["logearpersonaousecase(this.personaservice",{"_index":938,"title":{},"body":{"controllers/PersonaController.html":{}}}],["logearsedto",{"_index":723,"title":{"classes/LogearseDto.html":{}},"body":{"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"controllers/PersonaController.html":{},"coverage.html":{}}}],["los",{"_index":219,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["mail",{"_index":265,"title":{},"body":{"classes/BuscarMail.html":{},"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaLogeada.html":{},"classes/LogearseDto.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["mail..dto",{"_index":451,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["mail..dto.ts",{"_index":264,"title":{},"body":{"classes/BuscarMail.html":{},"coverage.html":{}}}],["mail..dto.ts:5",{"_index":267,"title":{},"body":{"classes/BuscarMail.html":{}}}],["manager",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["manejo",{"_index":481,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["map",{"_index":102,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"guards/UsuarioGuard.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["map((dato",{"_index":180,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{}}}],["map((persona",{"_index":1001,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["map((res",{"_index":108,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["map((usuario",{"_index":986,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["matching",{"_index":86,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mensajeriamodule",{"_index":743,"title":{"modules/MensajeriaModule.html":{}},"body":{"modules/MensajeriaModule.html":{},"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["mensajeriamodulecuenta",{"_index":362,"title":{"modules/MensajeriaModuleCuenta.html":{}},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules.html":{},"overview.html":{}}}],["menssaging/publisher/video",{"_index":39,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["mergemap",{"_index":300,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/LogearPersonaoUseCase.html":{}}}],["mergemap((audioconferencia:audioconferenciadomainentity",{"_index":322,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["mergemap((datovalidado",{"_index":286,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["mergemap((empresa:empresadomainentity",{"_index":1045,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["mergemap((errors",{"_index":316,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["mergemap((persona:personadomainentity",{"_index":1055,"title":{},"body":{"classes/RegistrarPersonaoUseCase.html":{}}}],["mergemap((videoconferencia:videoconferenciadomainentity",{"_index":353,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["message",{"_index":71,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/MongoServerErrorExceptionFilter.html":{}}}],["messagepattern",{"_index":643,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["messagepattern('cuenta.audioconferencia.creada",{"_index":638,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["messagepattern('cuenta.videoconferencia.creada",{"_index":641,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["messanging/publisher/empresa/empresa",{"_index":443,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["messanging/publisher/persona/persona",{"_index":890,"title":{},"body":{"controllers/PersonaController.html":{}}}],["metadata",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":925,"title":{},"body":{"controllers/PersonaController.html":{}}}],["methods",{"_index":11,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["miscellaneous",{"_index":1221,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1256,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1246,"title":{},"body":{"index.html":{}}}],["model",{"_index":165,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["model/empresa.model",{"_index":680,"title":{},"body":{"interfaces/IEmpresaDomainService.html":{}}}],["model/entidades/audio",{"_index":666,"title":{},"body":{"interfaces/IAudioConferenciaDomainService.html":{}}}],["model/entidades/video",{"_index":718,"title":{},"body":{"interfaces/IVideoConferenciaDomainService.html":{}}}],["model/persona",{"_index":692,"title":{},"body":{"interfaces/IPersonaDomainService.html":{}}}],["module",{"_index":355,"title":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{}},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{}}}],["modules",{"_index":357,"title":{"modules.html":{}},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":240,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb+srv://cristianuruuy:1234@cluster0.tmv8fk5.mongodb.net/test",{"_index":849,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["mongomodule",{"_index":783,"title":{"modules/MongoModule.html":{}},"body":{"modules/MongoModule.html":{},"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["mongomodulecuenta",{"_index":363,"title":{"modules/MongoModuleCuenta.html":{}},"body":{"modules/CuentaModule.html":{},"modules/MongoModuleCuenta.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":172,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["mongooseconfigservice",{"_index":787,"title":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}},"body":{"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"coverage.html":{},"overview.html":{}}}],["mongoosemodule",{"_index":790,"title":{},"body":{"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{}}}],["mongoosemodule.forfeature",{"_index":799,"title":{},"body":{"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{}}}],["mongoosemodule.forrootasync",{"_index":797,"title":{},"body":{"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{}}}],["mongoosemoduleoptions",{"_index":846,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["mongooseoptionsfactory",{"_index":847,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["mongoservererror",{"_index":825,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["mongoservererrorexceptionfilter",{"_index":816,"title":{"classes/MongoServerErrorExceptionFilter.html":{}},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{}}}],["more",{"_index":1269,"title":{},"body":{"index.html":{}}}],["mqtt",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1275,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["name:audioconferenciaschema.name",{"_index":814,"title":{},"body":{"modules/MongoModuleCuenta.html":{}}}],["name:empresaschema.name",{"_index":802,"title":{},"body":{"modules/MongoModule.html":{}}}],["name:personaschema.name",{"_index":800,"title":{},"body":{"modules/MongoModule.html":{}}}],["name:videoconferenciaschema.name",{"_index":812,"title":{},"body":{"modules/MongoModuleCuenta.html":{}}}],["nest",{"_index":1235,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1279,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"modules/CuentaModule.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":377,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":101,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":171,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":55,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{},"dependencies.html":{}}}],["new",{"_index":78,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaRepository.html":{},"coverage.html":{}}}],["newaudioconferencia",{"_index":308,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["newaudioconferencia.anfitrion",{"_index":309,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["newaudioconferencia.audio",{"_index":312,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["newaudioconferencia.participantes",{"_index":311,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["newempresa",{"_index":1033,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newempresa.cantidadempleado",{"_index":1037,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newempresa.mail",{"_index":1034,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newempresa.nombre",{"_index":1035,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newempresa.rubro",{"_index":1041,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newempresa.rut",{"_index":1039,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newempresa.setpassword(dato.clave",{"_index":1036,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["newpersona",{"_index":405,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["newpersona.mail",{"_index":406,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["newpersona.nombre",{"_index":408,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["newpersona.setpassword(dato.clave",{"_index":410,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["newvideoconferencia",{"_index":343,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.anfitrion",{"_index":344,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.chatvivo",{"_index":346,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.compartirarchivo",{"_index":349,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.grabacion",{"_index":347,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.participante",{"_index":345,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.pizzarra",{"_index":348,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["newvideoconferencia.presentacion",{"_index":350,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["node.js",{"_index":1227,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":233,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["nombre",{"_index":491,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaLogeada.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["notfoundexception",{"_index":978,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["notfoundexception('persona",{"_index":987,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["npm",{"_index":1239,"title":{},"body":{"index.html":{}}}],["number",{"_index":497,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["object",{"_index":462,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["observable",{"_index":28,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["observable.pipe",{"_index":315,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["of(dato",{"_index":282,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["of(decodificar",{"_index":1072,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["of(false",{"_index":1073,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["of(jwt.sign({persona},process.env.token",{"_index":737,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["of(newaudioconferencia",{"_index":321,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["of(newempresa",{"_index":1044,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["of(newpersona",{"_index":1054,"title":{},"body":{"classes/RegistrarPersonaoUseCase.html":{}}}],["of(newvideoconferencia",{"_index":352,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["of,map",{"_index":1065,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["open",{"_index":1258,"title":{},"body":{"index.html":{}}}],["optional",{"_index":25,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["options",{"_index":763,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["organizados",{"_index":223,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":367,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["overview",{"_index":1284,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1192,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":235,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":73,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["parameter",{"_index":463,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["participante",{"_index":707,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["participantes",{"_index":118,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"interfaces/IAudioConferencia.html":{}}}],["passing",{"_index":926,"title":{},"body":{"controllers/PersonaController.html":{}}}],["path",{"_index":379,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["payload",{"_index":607,"title":{},"body":{"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{}}}],["person",{"_index":916,"title":{},"body":{"controllers/PersonaController.html":{}}}],["persona",{"_index":290,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoController.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{}}}],["persona',versionkey",{"_index":1007,"title":{},"body":{"classes/PersonaSchema.html":{}}}],["persona'})@delete('eliminar/:id",{"_index":878,"title":{},"body":{"controllers/PersonaController.html":{}}}],["persona'})@get('buscar",{"_index":866,"title":{},"body":{"controllers/PersonaController.html":{}}}],["persona'})@post('/crear",{"_index":870,"title":{},"body":{"controllers/PersonaController.html":{}}}],["persona'})@post(signin",{"_index":883,"title":{},"body":{"controllers/PersonaController.html":{}}}],["persona'})@put('editar/:id",{"_index":875,"title":{},"body":{"controllers/PersonaController.html":{}}}],["persona.dto",{"_index":888,"title":{},"body":{"controllers/PersonaController.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["persona.dto.ts",{"_index":1047,"title":{},"body":{"classes/RegistrarPersonaDto.html":{},"coverage.html":{}}}],["persona.use",{"_index":271,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["personabuscada(@payload",{"_index":616,"title":{},"body":{"controllers/EventoController.html":{}}}],["personabuscadapublisher",{"_index":747,"title":{"injectables/PersonaBuscadaPublisher.html":{}},"body":{"modules/MensajeriaModule.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"coverage.html":{},"overview.html":{}}}],["personabuscadavideoconferenciapublisher",{"_index":772,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["personacontroller",{"_index":858,"title":{"controllers/PersonaController.html":{}},"body":{"controllers/PersonaController.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["personacreada",{"_index":601,"title":{},"body":{"controllers/EventoController.html":{}}}],["personacreada(@payload",{"_index":611,"title":{},"body":{"controllers/EventoController.html":{}}}],["personacreada(data",{"_index":602,"title":{},"body":{"controllers/EventoController.html":{}}}],["personadocument",{"_index":894,"title":{},"body":{"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["personadomainentity",{"_index":401,"title":{"classes/PersonaDomainEntity.html":{}},"body":{"classes/EditarPersonaoUseCase.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IPersonaDomainService.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["personadomainentity:12",{"_index":1048,"title":{},"body":{"classes/RegistrarPersonaDto.html":{}}}],["personadomainentity:13",{"_index":1005,"title":{},"body":{"classes/PersonaSchema.html":{}}}],["personadomainentity:21",{"_index":1004,"title":{},"body":{"classes/PersonaSchema.html":{}}}],["personadomainentity:22",{"_index":1006,"title":{},"body":{"classes/PersonaSchema.html":{},"classes/RegistrarPersonaDto.html":{}}}],["personadomainentity:28",{"_index":1003,"title":{},"body":{"classes/PersonaSchema.html":{}}}],["personadomainentity:6",{"_index":1050,"title":{},"body":{"classes/RegistrarPersonaDto.html":{}}}],["personadomainentity:9",{"_index":1049,"title":{},"body":{"classes/RegistrarPersonaDto.html":{}}}],["personaeditada",{"_index":873,"title":{},"body":{"controllers/PersonaController.html":{}}}],["personaeditada(@payload",{"_index":619,"title":{},"body":{"controllers/EventoController.html":{}}}],["personaeditadapublisher",{"_index":748,"title":{"injectables/PersonaEditadaPublisher.html":{}},"body":{"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"coverage.html":{},"overview.html":{}}}],["personaeliminada(@payload",{"_index":622,"title":{},"body":{"controllers/EventoController.html":{}}}],["personaeliminadapublisher",{"_index":749,"title":{"injectables/PersonaEliminadaPublisher.html":{}},"body":{"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEliminadaPublisher.html":{},"coverage.html":{},"overview.html":{}}}],["personamodel",{"_index":973,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["personamongoservice",{"_index":274,"title":{"injectables/PersonaMongoService.html":{}},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"modules/MongoModule.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaService.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["personamongoservice:14",{"_index":1013,"title":{},"body":{"injectables/PersonaService.html":{}}}],["personamongoservice:17",{"_index":1012,"title":{},"body":{"injectables/PersonaService.html":{}}}],["personamongoservice:20",{"_index":1010,"title":{},"body":{"injectables/PersonaService.html":{}}}],["personamongoservice:23",{"_index":1011,"title":{},"body":{"injectables/PersonaService.html":{}}}],["personaregistradapublisher",{"_index":750,"title":{"injectables/PersonaRegistradaPublisher.html":{}},"body":{"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRegistradaPublisher.html":{},"coverage.html":{},"overview.html":{}}}],["personarepository",{"_index":788,"title":{"injectables/PersonaRepository.html":{}},"body":{"modules/MongoModule.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["personaschema",{"_index":279,"title":{"classes/PersonaSchema.html":{}},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"controllers/EventoCuentaController.html":{},"modules/MongoModule.html":{},"controllers/PersonaController.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["personaschemafactory",{"_index":791,"title":{},"body":{"modules/MongoModule.html":{},"classes/PersonaSchema.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["personaservice",{"_index":644,"title":{"injectables/PersonaService.html":{}},"body":{"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"injectables/PersonaService.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":82,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoCuentaController.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["piped",{"_index":927,"title":{},"body":{"controllers/PersonaController.html":{}}}],["pizzarra",{"_index":708,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["pizzarra?:boolean",{"_index":712,"title":{},"body":{"interfaces/IVideoConferencia.html":{}}}],["please",{"_index":1267,"title":{},"body":{"index.html":{}}}],["por",{"_index":576,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["post",{"_index":31,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["post('/crear",{"_index":459,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["post('crear",{"_index":65,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["post('crear/:token",{"_index":1100,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["post(`signin",{"_index":936,"title":{},"body":{"controllers/PersonaController.html":{}}}],["prefix",{"_index":8,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["presentacion",{"_index":709,"title":{},"body":{"interfaces/IVideoConferencia.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{}}}],["presentacion?:boolean",{"_index":714,"title":{},"body":{"interfaces/IVideoConferencia.html":{}}}],["private",{"_index":61,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["process.cwd",{"_index":391,"title":{},"body":{"modules/CuentaModule.html":{},"modules/UsuarioModule.html":{}}}],["production",{"_index":1248,"title":{},"body":{"index.html":{}}}],["produjo",{"_index":484,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["progressive",{"_index":1226,"title":{},"body":{"index.html":{}}}],["project",{"_index":1259,"title":{},"body":{"index.html":{}}}],["promesa",{"_index":578,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["promise.resolve",{"_index":572,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["prop",{"_index":207,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["prop({type",{"_index":199,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["properties",{"_index":116,"title":{"properties.html":{}},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/AudioConferenciaSchema.html":{},"classes/BuscarMail.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IVideoConferencia.html":{},"classes/LogearseDto.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{},"properties.html":{}}}],["providers",{"_index":369,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{}}}],["public",{"_index":494,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["publish",{"_index":91,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["publish(data",{"_index":96,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["publish(data:idatosbasicosmodel",{"_index":856,"title":{},"body":{"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{}}}],["publish(data:registrarempresadto",{"_index":426,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{}}}],["publish(data:registrarpersonadto",{"_index":968,"title":{},"body":{"injectables/PersonaRegistradaPublisher.html":{}}}],["publish(data:string",{"_index":105,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{}}}],["publisher",{"_index":1101,"title":{},"body":{"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["publisher(data",{"_index":1112,"title":{},"body":{"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["publisher/empresa/empresa",{"_index":757,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["publisher/persona/persona",{"_index":755,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["publisher/video",{"_index":779,"title":{},"body":{"modules/MensajeriaModuleCuenta.html":{}}}],["publishes",{"_index":68,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/PersonaController.html":{}}}],["pudo",{"_index":486,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["put",{"_index":886,"title":{},"body":{"controllers/PersonaController.html":{}}}],["put('editar/:id",{"_index":915,"title":{},"body":{"controllers/PersonaController.html":{}}}],["que",{"_index":218,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":766,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["queueoptions",{"_index":768,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["read",{"_index":1268,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["receives",{"_index":475,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["receptor",{"_index":651,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["recibido",{"_index":650,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["reflect",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["registar",{"_index":163,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["registar(data",{"_index":669,"title":{},"body":{"interfaces/ICuentaRepository.html":{}}}],["registar(dato",{"_index":168,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["registar(empresa",{"_index":538,"title":{},"body":{"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"injectables/EmpresaService.html":{}}}],["registar(persona",{"_index":678,"title":{},"body":{"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"injectables/PersonaService.html":{}}}],["registar(persona:t):observable",{"_index":681,"title":{},"body":{"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{}}}],["registrada',data",{"_index":614,"title":{},"body":{"controllers/EventoController.html":{}}}],["registrada.publisher",{"_index":444,"title":{},"body":{"controllers/EmpresaController.html":{},"modules/MensajeriaModule.html":{}}}],["registrada.publisher.ts",{"_index":550,"title":{},"body":{"injectables/EmpresaRegistradaPublisher.html":{},"coverage.html":{}}}],["registrada.publisher.ts:13",{"_index":552,"title":{},"body":{"injectables/EmpresaRegistradaPublisher.html":{}}}],["registrada.publisher.ts:7",{"_index":551,"title":{},"body":{"injectables/EmpresaRegistradaPublisher.html":{}}}],["registrado.publisher",{"_index":756,"title":{},"body":{"modules/MensajeriaModule.html":{},"controllers/PersonaController.html":{}}}],["registrado.publisher.ts",{"_index":965,"title":{},"body":{"injectables/PersonaRegistradaPublisher.html":{},"coverage.html":{}}}],["registrado.publisher.ts:13",{"_index":967,"title":{},"body":{"injectables/PersonaRegistradaPublisher.html":{}}}],["registrado.publisher.ts:7",{"_index":966,"title":{},"body":{"injectables/PersonaRegistradaPublisher.html":{}}}],["registrarempresadto",{"_index":421,"title":{"classes/RegistrarEmpresaDto.html":{}},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{}}}],["registrarempresadto):observable",{"_index":467,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["registrarempresausecase",{"_index":452,"title":{"classes/RegistrarEmpresaUseCase.html":{}},"body":{"controllers/EmpresaController.html":{},"classes/RegistrarEmpresaUseCase.html":{},"coverage.html":{}}}],["registrarempresausecase(this.empresaservice",{"_index":468,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["registrarpersonadto",{"_index":869,"title":{"classes/RegistrarPersonaDto.html":{}},"body":{"controllers/PersonaController.html":{},"injectables/PersonaRegistradaPublisher.html":{},"classes/RegistrarPersonaDto.html":{},"coverage.html":{}}}],["registrarpersonadto):observable",{"_index":902,"title":{},"body":{"controllers/PersonaController.html":{}}}],["registrarpersonaousecase",{"_index":891,"title":{"classes/RegistrarPersonaoUseCase.html":{}},"body":{"controllers/PersonaController.html":{},"classes/RegistrarPersonaoUseCase.html":{},"coverage.html":{}}}],["registrarpersonaousecase(this.personaservice",{"_index":903,"title":{},"body":{"controllers/PersonaController.html":{}}}],["repository",{"_index":566,"title":{},"body":{"injectables/EmpresaRepository.html":{},"interfaces/IUsuarioRepository.html":{},"injectables/PersonaRepository.html":{},"coverage.html":{},"index.html":{}}}],["repository/audio",{"_index":149,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"modules/MongoModuleCuenta.html":{}}}],["repository/empresa.repository",{"_index":543,"title":{},"body":{"injectables/EmpresaMongoService.html":{},"modules/MongoModule.html":{}}}],["repository/persona.repositoy",{"_index":795,"title":{},"body":{"modules/MongoModule.html":{},"injectables/PersonaMongoService.html":{}}}],["repository/video",{"_index":809,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{}}}],["repousuario",{"_index":610,"title":{},"body":{"controllers/EventoController.html":{}}}],["requerido",{"_index":285,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["request",{"_index":1066,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["request.params",{"_index":1068,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["required",{"_index":201,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["res",{"_index":109,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["reset",{"_index":366,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["response",{"_index":830,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["response.status(statuscode).json",{"_index":840,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["respuestavideoconferenciadaregistradapublisher",{"_index":773,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["result",{"_index":1102,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["resultado",{"_index":574,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["results",{"_index":85,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":103,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{}}}],["retry(2",{"_index":110,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["return",{"_index":80,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoCuentaController.html":{},"classes/LogearPersonaoUseCase.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["returned",{"_index":465,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaService.html":{}}}],["rubro",{"_index":492,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["run",{"_index":1243,"title":{},"body":{"index.html":{}}}],["rut",{"_index":493,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["rut:number",{"_index":593,"title":{},"body":{"classes/EmpresaSchema.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"classes/RegistrarEmpresaDto.html":{}}}],["rxjs",{"_index":34,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"dependencies.html":{}}}],["scalable",{"_index":1231,"title":{},"body":{"index.html":{}}}],["schema",{"_index":208,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["schema({collection",{"_index":212,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["schema/audio",{"_index":147,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"modules/MongoModuleCuenta.html":{}}}],["schema/empresa.shema",{"_index":542,"title":{},"body":{"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"modules/MongoModule.html":{}}}],["schema/persona.shema",{"_index":792,"title":{},"body":{"modules/MongoModule.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{}}}],["schema/video",{"_index":811,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["schema:audioconferenciafactory",{"_index":815,"title":{},"body":{"modules/MongoModuleCuenta.html":{}}}],["schema:empresaschemafactory",{"_index":803,"title":{},"body":{"modules/MongoModule.html":{}}}],["schema:personaschemafactory",{"_index":801,"title":{},"body":{"modules/MongoModule.html":{}}}],["schema:videoconferenciafactory",{"_index":813,"title":{},"body":{"modules/MongoModuleCuenta.html":{}}}],["schemafactory",{"_index":209,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["schemafactory.createforclass(audioconferenciaschema",{"_index":242,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(empresaschema",{"_index":595,"title":{},"body":{"classes/EmpresaSchema.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(personaschema",{"_index":1008,"title":{},"body":{"classes/PersonaSchema.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(videoconferenciaschema",{"_index":1169,"title":{},"body":{"classes/VideoConferenciaSchema.html":{},"miscellaneous/variables.html":{}}}],["se",{"_index":191,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/BuscarPersonaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["sea",{"_index":236,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["secret",{"_index":1069,"title":{},"body":{"guards/UsuarioGuard.html":{}}}],["send('cuenta.audioconferencia.creada',data).pipe",{"_index":107,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{}}}],["send('cuenta.videoconferencia.creada',data).pipe",{"_index":1114,"title":{},"body":{"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["sent",{"_index":1104,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["ser",{"_index":222,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["server",{"_index":819,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{},"coverage.html":{},"index.html":{}}}],["service/empresa.service",{"_index":445,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["service/persona.service",{"_index":889,"title":{},"body":{"controllers/PersonaController.html":{}}}],["services/audio",{"_index":36,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"modules/MongoModuleCuenta.html":{}}}],["services/empresa.service.mongo",{"_index":796,"title":{},"body":{"modules/MongoModule.html":{}}}],["services/persona.service.mongo",{"_index":794,"title":{},"body":{"modules/MongoModule.html":{}}}],["services/video",{"_index":808,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"controllers/VideoConferenciaController.html":{}}}],["sesion",{"_index":882,"title":{},"body":{"controllers/PersonaController.html":{}}}],["setpassword",{"_index":495,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["setpassword(clave",{"_index":503,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["side",{"_index":1232,"title":{},"body":{"index.html":{}}}],["siempre",{"_index":997,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["signin",{"_index":864,"title":{},"body":{"controllers/PersonaController.html":{}}}],["signin(@body",{"_index":937,"title":{},"body":{"controllers/PersonaController.html":{}}}],["signin(user",{"_index":880,"title":{},"body":{"controllers/PersonaController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"index.html":{}}}],["sponsors",{"_index":1262,"title":{},"body":{"index.html":{}}}],["src/dominio/model/entidades/audio",{"_index":303,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["src/dominio/model/interfaces/audio",{"_index":304,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["src/dominio/repositories/usuario",{"_index":565,"title":{},"body":{"injectables/EmpresaRepository.html":{}}}],["src/dominio/services/audio",{"_index":305,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["src/infrastructura/dto/registrar",{"_index":1030,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["start",{"_index":1244,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1247,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1249,"title":{},"body":{"index.html":{}}}],["started",{"_index":1225,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1237,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":837,"title":{},"body":{"classes/MongoServerErrorExceptionFilter.html":{}}}],["stay",{"_index":1271,"title":{},"body":{"index.html":{}}}],["string",{"_index":97,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearseDto.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{}}}],["string):observable",{"_index":648,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["string,@body",{"_index":919,"title":{},"body":{"controllers/PersonaController.html":{}}}],["summary",{"_index":64,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{},"controllers/VideoConferenciaController.html":{}}}],["support",{"_index":1263,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1282,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["switchmap",{"_index":33,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"classes/LogearPersonaoUseCase.html":{},"controllers/VideoConferenciaController.html":{}}}],["switchmap((persona",{"_index":731,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["t",{"_index":664,"title":{},"body":{"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferenciaDomainService.html":{}}}],["table",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":461,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["tap",{"_index":447,"title":{},"body":{"controllers/EmpresaController.html":{},"controllers/PersonaController.html":{}}}],["tap((data",{"_index":934,"title":{},"body":{"controllers/PersonaController.html":{}}}],["tap((empresa:registrarempresadto",{"_index":470,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["tap((persona:registrarpersonadto",{"_index":905,"title":{},"body":{"controllers/PersonaController.html":{}}}],["test",{"_index":1252,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1255,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1254,"title":{},"body":{"index.html":{}}}],["testing\",dato.mail",{"_index":729,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{}}}],["tests",{"_index":1251,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1261,"title":{},"body":{"index.html":{}}}],["this.anfitrion",{"_index":129,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["this.audio",{"_index":135,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["this.audioconferenciaregistradapublisher.publish(dato.anfitrion",{"_index":81,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["this.audioconferenciarepository.actualizar(id",{"_index":158,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["this.audioconferenciarepository.eliminar(id",{"_index":160,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["this.audioconferenciarepository.findall",{"_index":154,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["this.audioconferenciarepository.findoneby(id",{"_index":156,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["this.audioconferenciarepository.registar(dato",{"_index":152,"title":{},"body":{"injectables/AudioConferenciaMongoService.html":{}}}],["this.audioconferenciaservice.crearaudioconferencia(audioconferencia",{"_index":323,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["this.audioconferenciaservice.crearaudioconferencia(newaudioconferencia",{"_index":313,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{}}}],["this.cantidadempleado",{"_index":520,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["this.chatvivo",{"_index":1125,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["this.clave",{"_index":517,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["this.clienproxy",{"_index":106,"title":{},"body":{"injectables/AudioConferenciaCreadaPublisher.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{}}}],["this.clienproxy.emit",{"_index":427,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/PersonaBuscadaPublisher.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaRegistradaPublisher.html":{}}}],["this.compartirarchivo",{"_index":1134,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["this.configservice.get('mongo_uri",{"_index":850,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["this.empresabuscadapublisher.publish(data",{"_index":479,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["this.empresaregistradapublisher.publish(empresa",{"_index":471,"title":{},"body":{"controllers/EmpresaController.html":{}}}],["this.empresarepository.actualizar(id",{"_index":548,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["this.empresarepository.eliminar(id",{"_index":549,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["this.empresarepository.findall",{"_index":546,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["this.empresarepository.findoneby(id",{"_index":545,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["this.empresarepository.registar(empresa",{"_index":544,"title":{},"body":{"injectables/EmpresaMongoService.html":{}}}],["this.empresaservice.findoneby(dato",{"_index":261,"title":{},"body":{"classes/BuscarEmpresaUseCase.html":{}}}],["this.empresaservice.registar(empresa",{"_index":1046,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["this.empresaservice.registar(newempresa",{"_index":1043,"title":{},"body":{"classes/RegistrarEmpresaUseCase.html":{}}}],["this.grabacion",{"_index":1128,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["this.mail",{"_index":514,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["this.nombre",{"_index":511,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{}}}],["this.participante",{"_index":1122,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["this.participantes",{"_index":132,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{}}}],["this.personabuscadapublisher.publish(data",{"_index":914,"title":{},"body":{"controllers/PersonaController.html":{}}}],["this.personaeditadapublisher.publish(data",{"_index":922,"title":{},"body":{"controllers/PersonaController.html":{}}}],["this.personaeliminadapublisher.publish(data",{"_index":935,"title":{},"body":{"controllers/PersonaController.html":{}}}],["this.personaregistradapublisher.publish(persona",{"_index":906,"title":{},"body":{"controllers/PersonaController.html":{}}}],["this.personarepository.actualizar(id",{"_index":963,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["this.personarepository.eliminar(id",{"_index":964,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["this.personarepository.findoneby(id",{"_index":962,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["this.personarepository.registar(persona",{"_index":961,"title":{},"body":{"injectables/PersonaMongoService.html":{}}}],["this.pizzarra",{"_index":1131,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["this.presentacion",{"_index":1137,"title":{},"body":{"classes/VideoConferenciaDomainEntity.html":{}}}],["this.rubro",{"_index":526,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["this.rut",{"_index":523,"title":{},"body":{"classes/EmpresaDomainEntity.html":{}}}],["this.usuarioservice.actualizar(id,newpersona",{"_index":411,"title":{},"body":{"classes/EditarPersonaoUseCase.html":{}}}],["this.usuarioservice.eliminar(dato",{"_index":416,"title":{},"body":{"classes/EliminarPersonaoUseCase.html":{}}}],["this.usuarioservice.findoneby(dato",{"_index":281,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["this.usuarioservice.findoneby(datovalidado",{"_index":287,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["this.usuarioservice.registar(newpersona",{"_index":1053,"title":{},"body":{"classes/RegistrarPersonaoUseCase.html":{}}}],["this.usuarioservice.registar(persona",{"_index":1056,"title":{},"body":{"classes/RegistrarPersonaoUseCase.html":{}}}],["this.videoconferenciaregistradapublisher.publisher(dato.anfitrion",{"_index":1109,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["this.videoconferenciarepository.actualizar(id",{"_index":1144,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{}}}],["this.videoconferenciarepository.eliminar(id",{"_index":1145,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{}}}],["this.videoconferenciarepository.findall",{"_index":1143,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{}}}],["this.videoconferenciarepository.findoneby(id",{"_index":1142,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{}}}],["this.videoconferenciarepository.registar(dato",{"_index":1141,"title":{},"body":{"injectables/VideoConferenciaMongoService.html":{}}}],["this.videoconferenciaservice.crearvideoconferencia(newvideoconferencia",{"_index":351,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["this.videoconferenciaservice.crearvideoconferencia(videoconferencia",{"_index":354,"title":{},"body":{"classes/CrearVideoConferenciaUseCase.html":{}}}],["throw",{"_index":183,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"controllers/EmpresaController.html":{},"injectables/EmpresaRepository.html":{},"classes/LogearPersonaoUseCase.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["throwifempty",{"_index":283,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["throws",{"_index":910,"title":{},"body":{"controllers/PersonaController.html":{}}}],["tipeo",{"_index":994,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["token",{"_index":695,"title":{},"body":{"interfaces/IPersonaLogeada.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{}}}],["token:string",{"_index":696,"title":{},"body":{"interfaces/IPersonaLogeada.html":{}}}],["tokenentrada",{"_index":738,"title":{},"body":{"classes/LogearPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{}}}],["touch",{"_index":1272,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":754,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["transport.rmq",{"_index":762,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["true",{"_index":187,"title":{},"body":{"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"guards/UsuarioGuard.html":{},"modules/UsuarioModule.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{}}}],["twitter",{"_index":1278,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"controllers/AudioConferenciaController.html":{},"injectables/AudioConferenciaCreadaPublisher.html":{},"classes/AudioConferenciaDomainEntity.html":{},"injectables/AudioConferenciaMongoService.html":{},"injectables/AudioConferenciaRepository.html":{},"classes/AudioConferenciaSchema.html":{},"classes/AudioConferenciaService.html":{},"classes/BuscarEmpresaUseCase.html":{},"classes/BuscarMail.html":{},"classes/BuscarPersonaUseCase.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"injectables/EmpresaBuscadaPublisher.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaDomainEntity.html":{},"injectables/EmpresaMongoService.html":{},"injectables/EmpresaRegistradaPublisher.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"injectables/EmpresaService.html":{},"controllers/EventoController.html":{},"controllers/EventoCuentaController.html":{},"interfaces/IAudioConferencia.html":{},"interfaces/IAudioConferenciaDomainService.html":{},"interfaces/ICuentaRepository.html":{},"interfaces/IDatosBasicosModel.html":{},"interfaces/IEmpresaCuenta.html":{},"interfaces/IEmpresaDomainModel.html":{},"interfaces/IEmpresaDomainService.html":{},"interfaces/ILoginModelDomain.html":{},"interfaces/IPersonaCuenta.html":{},"interfaces/IPersonaDomainService.html":{},"interfaces/IPersonaLogeada.html":{},"interfaces/IUsuarioRepository.html":{},"interfaces/IVideoConferencia.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/LogearseDto.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{},"injectables/PersonaBuscadaPublisher.html":{},"controllers/PersonaController.html":{},"classes/PersonaDomainEntity.html":{},"injectables/PersonaEditadaPublisher.html":{},"injectables/PersonaEliminadaPublisher.html":{},"injectables/PersonaMongoService.html":{},"injectables/PersonaRegistradaPublisher.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"injectables/PersonaService.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaDto.html":{},"classes/RegistrarPersonaoUseCase.html":{},"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"classes/VideoConferenciaDomainEntity.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1292,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":979,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["types.objectid(id",{"_index":984,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["typescript",{"_index":1236,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":238,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"controllers/EmpresaController.html":{},"classes/EmpresaSchema.html":{},"controllers/PersonaController.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["una",{"_index":226,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"injectables/EmpresaRepository.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":205,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["unique",{"_index":200,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{}}}],["unit",{"_index":1250,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1291,"title":{},"body":{"properties.html":{}}}],["uri",{"_index":848,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/MongooseConfigService-1.html":{}}}],["urls",{"_index":764,"title":{},"body":{"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{}}}],["usando",{"_index":991,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["useclass",{"_index":798,"title":{},"body":{"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{}}}],["useguards",{"_index":1093,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["useguards(usuarioguard",{"_index":1099,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["user",{"_index":885,"title":{},"body":{"controllers/PersonaController.html":{}}}],["uso",{"_index":291,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{}}}],["usuario",{"_index":770,"title":{},"body":{"modules/MensajeriaModule.html":{},"injectables/PersonaRepository.html":{}}}],["usuario.empresa.buscada",{"_index":428,"title":{},"body":{"injectables/EmpresaBuscadaPublisher.html":{}}}],["usuario.empresa.registrada",{"_index":553,"title":{},"body":{"injectables/EmpresaRegistradaPublisher.html":{}}}],["usuario.persona.buscada",{"_index":857,"title":{},"body":{"injectables/PersonaBuscadaPublisher.html":{}}}],["usuario.persona.editada",{"_index":948,"title":{},"body":{"injectables/PersonaEditadaPublisher.html":{}}}],["usuario.persona.eliminada',data",{"_index":952,"title":{},"body":{"injectables/PersonaEliminadaPublisher.html":{}}}],["usuario.persona.registrada",{"_index":969,"title":{},"body":{"injectables/PersonaRegistradaPublisher.html":{}}}],["usuario_queue",{"_index":767,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["usuario_service",{"_index":761,"title":{},"body":{"modules/MensajeriaModule.html":{}}}],["usuarioguard",{"_index":1058,"title":{"guards/UsuarioGuard.html":{}},"body":{"guards/UsuarioGuard.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["usuariomodule",{"_index":1074,"title":{"modules/UsuarioModule.html":{}},"body":{"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["usuarioservice",{"_index":276,"title":{},"body":{"classes/BuscarPersonaUseCase.html":{},"classes/EditarPersonaoUseCase.html":{},"classes/EliminarPersonaoUseCase.html":{},"classes/LogearPersonaoUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["utils/usuario.guard",{"_index":1095,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["va",{"_index":998,"title":{},"body":{"injectables/PersonaRepository.html":{}}}],["validate",{"_index":302,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{}}}],["validationerror",{"_index":301,"title":{},"body":{"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/RegistrarEmpresaUseCase.html":{},"classes/RegistrarPersonaoUseCase.html":{}}}],["validator",{"_index":268,"title":{},"body":{"classes/BuscarMail.html":{},"classes/CrearAudioConferenciaDTO.html":{},"classes/CrearAudioConferenciaUseCase.html":{},"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"classes/LogearseDto.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{},"dependencies.html":{}}}],["valor.mail",{"_index":655,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["valor:personadomainentity",{"_index":657,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["valor:personaschema",{"_index":654,"title":{},"body":{"controllers/EventoCuentaController.html":{}}}],["value",{"_index":1110,"title":{},"body":{"controllers/VideoConferenciaController.html":{},"miscellaneous/variables.html":{}}}],["value:string",{"_index":83,"title":{},"body":{"controllers/AudioConferenciaController.html":{}}}],["variable",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1298,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1289,"title":{},"body":{"properties.html":{}}}],["video",{"_index":327,"title":{},"body":{"classes/CrearVideoConferenciaDTO.html":{},"classes/CrearVideoConferenciaUseCase.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["videoconferencia",{"_index":1089,"title":{},"body":{"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaRepository.html":{}}}],["videoconferencia\",dato",{"_index":1155,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["videoconferencia',versionkey",{"_index":1168,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferencia'})@useguards(usuarioguard)@post('crear/:token",{"_index":1091,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["videoconferenciacontroller",{"_index":371,"title":{"controllers/VideoConferenciaController.html":{}},"body":{"modules/CuentaModule.html":{},"controllers/VideoConferenciaController.html":{},"coverage.html":{}}}],["videoconferenciacreadapublisher",{"_index":777,"title":{"injectables/VideoConferenciaCreadaPublisher.html":{}},"body":{"modules/MensajeriaModuleCuenta.html":{},"controllers/VideoConferenciaController.html":{},"injectables/VideoConferenciaCreadaPublisher.html":{},"coverage.html":{},"overview.html":{}}}],["videoconferenciadocument",{"_index":1152,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["videoconferenciadomainentity",{"_index":338,"title":{"classes/VideoConferenciaDomainEntity.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"interfaces/IVideoConferenciaDomainService.html":{},"controllers/VideoConferenciaController.html":{},"classes/VideoConferenciaDomainEntity.html":{},"classes/VideoConferenciaSchema.html":{},"coverage.html":{}}}],["videoconferenciadomainentity:16",{"_index":1161,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciadomainentity:23",{"_index":1162,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciadomainentity:30",{"_index":1164,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciadomainentity:38",{"_index":1166,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciadomainentity:45",{"_index":1163,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciadomainentity:51",{"_index":1167,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciadomainentity:59",{"_index":1165,"title":{},"body":{"classes/VideoConferenciaSchema.html":{}}}],["videoconferenciafactory",{"_index":810,"title":{},"body":{"modules/MongoModuleCuenta.html":{},"classes/VideoConferenciaSchema.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["videoconferenciamodel",{"_index":1149,"title":{},"body":{"injectables/VideoConferenciaRepository.html":{}}}],["videoconferenciamongoservice",{"_index":332,"title":{"injectables/VideoConferenciaMongoService.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{},"overview.html":{}}}],["videoconferenciamongoservice:14",{"_index":1171,"title":{},"body":{"classes/VideoConferenciaService.html":{}}}],["videoconferenciaregistradapublisher",{"_index":1098,"title":{},"body":{"controllers/VideoConferenciaController.html":{}}}],["videoconferenciarepository",{"_index":364,"title":{"injectables/VideoConferenciaRepository.html":{}},"body":{"modules/CuentaModule.html":{},"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"coverage.html":{},"overview.html":{}}}],["videoconferenciaschema",{"_index":341,"title":{"classes/VideoConferenciaSchema.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"modules/MongoModuleCuenta.html":{},"injectables/VideoConferenciaMongoService.html":{},"injectables/VideoConferenciaRepository.html":{},"classes/VideoConferenciaSchema.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{}}}],["videoconferenciaservice",{"_index":333,"title":{"classes/VideoConferenciaService.html":{}},"body":{"classes/CrearVideoConferenciaUseCase.html":{},"modules/CuentaModule.html":{},"controllers/VideoConferenciaController.html":{},"classes/VideoConferenciaService.html":{},"coverage.html":{}}}],["void",{"_index":505,"title":{},"body":{"classes/EmpresaDomainEntity.html":{},"classes/EmpresaSchema.html":{},"controllers/EventoController.html":{},"classes/MongoServerErrorExceptionFilter.html":{},"classes/PersonaDomainEntity.html":{},"classes/PersonaSchema.html":{},"classes/RegistrarEmpresaDto.html":{},"classes/RegistrarPersonaDto.html":{}}}],["watch",{"_index":1245,"title":{},"body":{"index.html":{}}}],["website",{"_index":1276,"title":{},"body":{"index.html":{}}}],["y",{"_index":234,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"injectables/PersonaRepository.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["ya",{"_index":231,"title":{},"body":{"classes/AudioConferenciaSchema.html":{},"classes/EmpresaSchema.html":{},"classes/PersonaSchema.html":{},"classes/VideoConferenciaSchema.html":{},"miscellaneous/typealiases.html":{}}}],["yes",{"_index":122,"title":{},"body":{"classes/AudioConferenciaDomainEntity.html":{},"classes/EmpresaDomainEntity.html":{},"classes/PersonaDomainEntity.html":{},"classes/VideoConferenciaDomainEntity.html":{}}}],["you'd",{"_index":1266,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":365,"title":{},"body":{"modules/CuentaModule.html":{},"modules/MensajeriaModule.html":{},"modules/MensajeriaModuleCuenta.html":{},"modules/MongoModule.html":{},"modules/MongoModuleCuenta.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AudioConferenciaController.html":{"url":"controllers/AudioConferenciaController.html","title":"controller - AudioConferenciaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AudioConferenciaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/controllers/audio-conferencia.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                audioConferencia\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearAudioConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearAudioConferencia\n                        \n                    \n                \n            \n            \n                \ncrearAudioConferencia(dato: CrearAudioConferenciaDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Crear  AudioConferencia'})@Post('crear')\n                \n            \n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/controllers/audio-conferencia.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                CrearAudioConferenciaDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from \"@nestjs/common\";\nimport { Observable, switchMap } from \"rxjs\";\n\n\nimport { AudioConferenciaService } from '../services/audio-conferencia.service';\nimport { AudioConferenciaCreadaPublisher } from \"../menssaging/publisher/video-conferencia/audio-conferencia-creada.publisher\";\nimport { CrearAudioConferenciaDTO } from '../dto/crear-audio-conferencia.dto';\nimport { AudioConferenciaDomainEntity } from '../../dominio/model/entidades/audio-conferencia.dominio.entidad';\nimport { CrearAudioConferenciaUseCase } from \"../../aplicacion/casoDeUso/audioConferencia/crear-audio-conferencia.use-case\";\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n\n\n@ApiTags('AudioConferencia')\n@Controller('audioConferencia')\nexport class AudioConferenciaController {\n    constructor(\n        private readonly audioConferenciaService: AudioConferenciaService,\n        private readonly audioConferenciaRegistradaPublisher : AudioConferenciaCreadaPublisher,\n    ) {}\n\n    @ApiOperation ({summary: \"Crear  AudioConferencia\"})\n    @Post('crear')\n     /**\n      * It creates an audio conference, and then publishes the audio conference's host to a message\n      * broker\n      * @param {CrearAudioConferenciaDTO} dato - CrearAudioConferenciaDTO\n      * @returns An Observable of AudioConferenciaDomainEntity\n      */\n     crearAudioConferencia(@Body() dato: CrearAudioConferenciaDTO):Observable {\n        const caso  = new  CrearAudioConferenciaUseCase(this.audioConferenciaService);\n        return this.audioConferenciaRegistradaPublisher.publish(dato.anfitrion)\n            .pipe(\n                switchMap(\n                    (value:string) => {\n                        return  caso.execute({anfitrion:value});\n                    }\n                )\n            );\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioConferenciaCreadaPublisher.html":{"url":"injectables/AudioConferenciaCreadaPublisher.html","title":"injectable - AudioConferenciaCreadaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioConferenciaCreadaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/audio-conferencia-creada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/audio-conferencia-creada.publisher.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/audio-conferencia-creada.publisher.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\n import { ClientProxy } from \"@nestjs/microservices\";\n import { Observable, map, retry ,pipe } from \"rxjs\";\n\n @Injectable()\n export class AudioConferenciaCreadaPublisher {\n\n     constructor(\n         @Inject('CUENTA_SERVICE') private readonly clienProxy: ClientProxy,\n     ) { }\n\n     publish(data:string) : Observable {\n        return this.clienProxy\n        .send('cuenta.audioConferencia.creada',data).pipe(\n            map((res : string) =>   res )\n            ,\n             retry(2)\n            );\n     }\n }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AudioConferenciaDomainEntity.html":{"url":"classes/AudioConferenciaDomainEntity.html","title":"class - AudioConferenciaDomainEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AudioConferenciaDomainEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IAudioConferencia\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anfitrion\n                            \n                            \n                                    Optional\n                                audio\n                            \n                            \n                                    Optional\n                                participantes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dato?: IAudioConferencia)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dato\n                                                  \n                                                        \n                                                                        IAudioConferencia\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anfitrion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        participantes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IAudioConferencia } from '../interfaces/audio-conferencia.dominio.interfaces';\n\nexport class AudioConferenciaDomainEntity implements IAudioConferencia {\n   \n    anfitrion: string;\n    participantes?: string[];\n    audio?: boolean;\n\n    constructor(_dato?: IAudioConferencia) {\n\n      \n\n        if (_dato?.anfitrion)\n            this.anfitrion = _dato.anfitrion;\n\n        if (_dato?.participantes)\n            this.participantes = _dato.participantes;\n\n            \n        if (_dato?.audio)\n        this.audio = _dato.audio;\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioConferenciaMongoService.html":{"url":"injectables/AudioConferenciaMongoService.html","title":"injectable - AudioConferenciaMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioConferenciaMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/services/audio-conferencia.service.mongo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearAudioConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(audioConferenciaRepository: AudioConferenciaRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/dataBase/services/audio-conferencia.service.mongo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        audioConferenciaRepository\n                                                  \n                                                        \n                                                                        AudioConferenciaRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearAudioConferencia\n                        \n                    \n                \n            \n            \n                \ncrearAudioConferencia(dato: AudioConferenciaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/dataBase/services/audio-conferencia.service.mongo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                AudioConferenciaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { IAudioConferenciaDomainService } from '../../../dominio/services/audio-conferencia.service';\nimport { AudioConferenciaSchema } from '../schema/audio-conferencia.schema';\nimport { AudioConferenciaRepository } from '../repository/audio-conferencia.repositoy';\n\n@Injectable()\nexport class AudioConferenciaMongoService\n  implements IAudioConferenciaDomainService\n{\n \n  constructor(private readonly audioConferenciaRepository: AudioConferenciaRepository) {}\n\n    crearAudioConferencia(dato: AudioConferenciaSchema): Observable {\n        return this.audioConferenciaRepository.registar(dato);\n    }\n    \n\n}\n// findAll(): Observable {\n    //     return this.audioConferenciaRepository.findAll();\n    // }\n    // findOneBy(id: string): Observable {\n    //     return this.audioConferenciaRepository.findOneBy(id);\n    // }\n    // ActualizarAudioConferencia(id: string, dato: AudioConferenciaSchema): Observable {\n    //    return this.audioConferenciaRepository.actualizar(id, dato);\n    // }\n    // eliminarAudioConferencia(id: string): Observable {\n    //     return this.audioConferenciaRepository.eliminar(id);\n    // }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioConferenciaRepository.html":{"url":"injectables/AudioConferenciaRepository.html","title":"injectable - AudioConferenciaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioConferenciaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/repository/audio-conferencia.repositoy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(audioConferenciaModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/dataBase/repository/audio-conferencia.repositoy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        audioConferenciaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(dato: AudioConferenciaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/dataBase/repository/audio-conferencia.repositoy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                AudioConferenciaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\nimport { Observable, from } from \"rxjs\";\n\nimport { ICuentaRepository } from '../../../dominio/repositorios/cuenta-conferencia.repositorio';\nimport { AudioConferenciaDocument, AudioConferenciaSchema } from \"../schema/audio-conferencia.schema\";\n\n@Injectable()\nexport class AudioConferenciaRepository implements ICuentaRepository{\n    \n    constructor(\n        @InjectModel(AudioConferenciaSchema.name) private readonly audioConferenciaModel: Model\n        ) { }\n    \n    registar(dato: AudioConferenciaSchema): Observable {\n        return from(this.audioConferenciaModel.create(dato));\n    }\n}\n\n // findAll(): Observable {\n    //     return from(this.audioConferenciaModel.find()) \n    //         .pipe(\n    //             map((dato: AudioConferenciaDocument[] ) =>  {\n    //                 return dato;\n    //             } ));\n    // }\n\n    // findOneBy(id: string): Observable {\n    //     return from(this.audioConferenciaModel.findById(id))\n    //         .pipe(\n    //             catchError((err:Error) => {\n    //                 throw new Error(err.message);\n    //             }\n    //         ));\n    // }\n\n    // actualizar(id:string ,dato: AudioConferenciaSchema): Observable {\n    //     return from(this.audioConferenciaModel.findByIdAndUpdate(id, dato, {new: true}))\n    //         .pipe(\n    //              catchError((err : Error) => {\n    //              throw new Error('No se encontro la AudioConferencia');\n    //              })\n    // );\n\n    // }\n\n    // eliminar(id: string): Observable {\n    //     return from(this.audioConferenciaModel.findByIdAndDelete(id))\n    //     .pipe(\n    //         catchError((err:Error) => {\n    //             throw new Error('No se encontro la AudioConferencia');\n    //         })\n    //     );\n    // }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AudioConferenciaSchema.html":{"url":"classes/AudioConferenciaSchema.html","title":"class - AudioConferenciaSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AudioConferenciaSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/schema/audio-conferencia.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AudioConferenciaDomainEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anfitrion\n                            \n                            \n                                audio\n                            \n                            \n                                participantes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anfitrion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, unique: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AudioConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         AudioConferenciaDomainEntity:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AudioConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         AudioConferenciaDomainEntity:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participantes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AudioConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         AudioConferenciaDomainEntity:30\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { AudioConferenciaDomainEntity } from '../../../../../cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad';\n\n\n@Schema({collection: 'AudioConferencia',versionKey: false})\nexport class AudioConferenciaSchema extends AudioConferenciaDomainEntity {\n\n   \n\n    @Prop({\n        type: String,\n        index: true,\n        unique: true,\n        required: true,\n      })\n      anfitrion: string;\n  \n    @Prop({\n        type: Boolean,\n        index: true,\n    })\n    audio: boolean;\n\n\n    @Prop({\n        type: [String],\n        index: true,\n      })\n    participantes: string[];\n    \n  \n}\n\n/**\n * define la forma en que los documentos deben ser organizados dentro de una colección.\n * hidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n */\nexport type AudioConferenciaDocument = HydratedDocument;\n\nexport const AudioconferenciaFactory = SchemaFactory.createForClass(AudioConferenciaSchema);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AudioConferenciaService.html":{"url":"classes/AudioConferenciaService.html","title":"class - AudioConferenciaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AudioConferenciaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/services/audio-conferencia.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AudioConferenciaMongoService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearAudioConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearAudioConferencia\n                        \n                    \n                \n            \n            \n                \ncrearAudioConferencia(dato: AudioConferenciaSchema)\n                \n            \n\n\n            \n                \n                    Inherited from         AudioConferenciaMongoService\n\n                \n            \n            \n                \n                        Defined in         AudioConferenciaMongoService:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                AudioConferenciaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AudioConferenciaMongoService } from '../dataBase/services/audio-conferencia.service.mongo';\n\n\nexport class AudioConferenciaService extends AudioConferenciaMongoService {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuscarEmpresaUseCase.html":{"url":"classes/BuscarEmpresaUseCase.html","title":"class - BuscarEmpresaUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuscarEmpresaUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/empresa/buscar-empresa.use.case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(empresaService: EmpresaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/empresa/buscar-empresa.use.case.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        empresaService\n                                                  \n                                                        \n                                                                        EmpresaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/empresa/buscar-empresa.use.case.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable} from \"rxjs\";\nimport { EmpresaMongoService } from \"apps/usuario/src/infrastructura/dataBase/services/empresa.service.mongo\";\nimport { EmpresaSchema } from \"apps/usuario/src/infrastructura/dataBase/schema/empresa.shema\";\n\n\n\nexport class BuscarEmpresaUseCase {  \n  \n    constructor(private readonly empresaService: EmpresaMongoService) { }\n\n    execute(dato: string): Observable {\n        return this.empresaService.findOneBy(dato);\n        \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuscarMail.html":{"url":"classes/BuscarMail.html","title":"class - BuscarMail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuscarMail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dto/buscar-mail..dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/infrastructura/dto/buscar-mail..dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from \"class-validator\";\n\nexport class BuscarMail {\n    @IsEmail()\n    mail: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuscarPersonaUseCase.html":{"url":"classes/BuscarPersonaUseCase.html","title":"class - BuscarPersonaUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuscarPersonaUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/persona/buscar-persona.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioService: PersonaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/persona/buscar-persona.use-case.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        PersonaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/persona/buscar-persona.use-case.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable} from \"rxjs\";\nimport { PersonaMongoService } from '../../../infrastructura/dataBase/services/persona.service.mongo';\nimport { PersonaSchema } from '../../../infrastructura/dataBase/schema/persona.shema';\n\n\nexport class BuscarPersonaUseCase {  \n  \n    constructor(private readonly usuarioService: PersonaMongoService) { }\n\n    execute(dato: string): Observable {\n        return this.usuarioService.findOneBy(dato);\n    }\n}\n\n//return of(dato)\n//      .pipe(\n//      throwIfEmpty(() => new Error('Dato requerido')),\n//      mergeMap((datoValidado :string) => {\n\n//          return this.usuarioService.findOneBy(datoValidado)\n//      }),\n//      catchError((err : Error) => {\n//          throw new Error(`No se encontró la persona (Caso de uso) ${err.message}`);\n//      })\n//  );\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrearAudioConferenciaDTO.html":{"url":"classes/CrearAudioConferenciaDTO.html","title":"class - CrearAudioConferenciaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrearAudioConferenciaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dto/crear-audio-conferencia.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anfitrion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anfitrion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/infraestructura/dto/crear-audio-conferencia.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {  IsEmail } from 'class-validator';\n\nexport class CrearAudioConferenciaDTO  {\t\n\n    @IsEmail()\n    anfitrion: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrearAudioConferenciaUseCase.html":{"url":"classes/CrearAudioConferenciaUseCase.html","title":"class - CrearAudioConferenciaUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrearAudioConferenciaUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/aplicacion/casoDeUso/audioConferencia/crear-audio-conferencia.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AudioConferenciaService: AudioConferenciaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/aplicacion/casoDeUso/audioConferencia/crear-audio-conferencia.use-case.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AudioConferenciaService\n                                                  \n                                                        \n                                                                        AudioConferenciaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: IAudioConferencia)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/aplicacion/casoDeUso/audioConferencia/crear-audio-conferencia.use-case.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                IAudioConferencia\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, catchError, from, mergeMap, of } from \"rxjs\";\nimport { ValidationError, validate } from \"class-validator\";\nimport { AudioConferenciaDomainEntity } from \"../../../../src/dominio/model/entidades/audio-conferencia.dominio.entidad\";\nimport { IAudioConferencia } from \"../../../../src/dominio/model/interfaces/audio-conferencia.dominio.interfaces\";\nimport { IAudioConferenciaDomainService } from \"../../../../src/dominio/services/audio-conferencia.service\";\nimport { AudioConferenciaMongoService } from '../../../infraestructura/dataBase/services/audio-conferencia.service.mongo';\nimport { AudioConferenciaSchema } from '../../../infraestructura/dataBase/schema/audio-conferencia.schema';\n\n\nexport class CrearAudioConferenciaUseCase {  \n    \n    constructor(private readonly AudioConferenciaService: AudioConferenciaMongoService) { }\n\n        execute(dato: IAudioConferencia): Observable {\n           \n            const newAudioConferencia = new AudioConferenciaSchema();\n\n                newAudioConferencia.anfitrion = dato.anfitrion;\n                newAudioConferencia.participantes = [\"\"];\n                newAudioConferencia.audio = true;\n                \n            return this.AudioConferenciaService.crearAudioConferencia(newAudioConferencia);\n            \n    }\n}\n\n\n//const observable = from(validate(dato));\n\n// return observable.pipe(\n//     mergeMap((errors : ValidationError[]) => {\n//         if (errors.length > 0) {\n//             throw new Error('Datos incorrectos');\n//         }\n        \n//         const newAudioConferencia = new AudioConferenciaDomainEntity();\n\n//         newAudioConferencia.anfitrion = dato.anfitrion;\n        \n//         newAudioConferencia.participantes = [\"\"];\n//         newAudioConferencia.audio = true;\n        \n//         return of(newAudioConferencia);\n//     }),\n//     mergeMap((AudioConferencia:AudioConferenciaDomainEntity) => {\n//         return this.AudioConferenciaService.crearAudioConferencia(AudioConferencia);\n//     }),\n//     catchError((error:Error) => {\n//         throw new Error(error.message);\n//     }));\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrearVideoConferenciaDTO.html":{"url":"classes/CrearVideoConferenciaDTO.html","title":"class - CrearVideoConferenciaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrearVideoConferenciaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dto/crear-video-conferencia.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anfitrion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anfitrion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/infraestructura/dto/crear-video-conferencia.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {  IsEmail } from 'class-validator';\n\nexport class CrearVideoConferenciaDTO {\t\n\n    @IsEmail()\n    anfitrion: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrearVideoConferenciaUseCase.html":{"url":"classes/CrearVideoConferenciaUseCase.html","title":"class - CrearVideoConferenciaUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrearVideoConferenciaUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/aplicacion/casoDeUso/videoConferencia/crear-video-conferencia.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(videoConferenciaService: VideoConferenciaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/aplicacion/casoDeUso/videoConferencia/crear-video-conferencia.use-case.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        videoConferenciaService\n                                                  \n                                                        \n                                                                        VideoConferenciaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: IVideoConferencia)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/aplicacion/casoDeUso/videoConferencia/crear-video-conferencia.use-case.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                IVideoConferencia\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, catchError, from, mergeMap, of } from \"rxjs\";\nimport { ValidationError, validate } from \"class-validator\";\nimport { IVideoConferencia } from '../../../dominio/model/interfaces/video-conferencia.dominio.interfaces';\nimport { IVideoConferenciaDomainService } from '../../../dominio/services/video-conferencia.service';\nimport { VideoConferenciaDomainEntity } from '../../../dominio/model/entidades/video-conferencia.dominio.entidad';\nimport { VideoConferenciaMongoService } from '../../../infraestructura/dataBase/services/video-conferencia.service.mongo';\nimport { VideoConferenciaSchema } from '../../../infraestructura/dataBase/schema/video-conferencia.schema';\n\n\nexport class CrearVideoConferenciaUseCase {  \n  \n    constructor(private readonly videoConferenciaService: VideoConferenciaMongoService) { }\n\n        execute(dato: IVideoConferencia): Observable {\n\n\n            const newVideoConferencia = new VideoConferenciaSchema();\n\n                newVideoConferencia.anfitrion = dato.anfitrion;\n                   \n                newVideoConferencia.participante = [\"\"];\n                newVideoConferencia.chatVivo = true;\n                newVideoConferencia.grabacion = false;\n                newVideoConferencia.pizzarra = false;\n                newVideoConferencia.compartirArchivo = false;\n                newVideoConferencia.presentacion = false;\n\n                return this.videoConferenciaService.crearVideoConferencia(newVideoConferencia);\n\n         \n         \n    }\n}\n\n   // const observable = from(validate(dato));\n\n            // return observable.pipe(\n            //     mergeMap((errors : ValidationError[]) => {\n            //         if (errors.length > 0) {\n            //             throw new Error('Datos incorrectos');\n            //         }\n    \n            //         const newVideoConferencia = new VideoConferenciaDomainEntity();\n\n            //         newVideoConferencia.anfitrion = dato.anfitrion;\n                    \n            //         newVideoConferencia.participante = [\"\"];\n            //         newVideoConferencia.chatVivo = true;\n            //         newVideoConferencia.grabacion = false;\n            //         newVideoConferencia.pizzarra = false;\n            //         newVideoConferencia.compartirArchivo = false;\n            //         newVideoConferencia.presentacion = false;\n                    \n                    \n            //         return of(newVideoConferencia);\n            //     }),\n            //     mergeMap((VideoConferencia:VideoConferenciaDomainEntity) => {\n            //         return this.videoConferenciaService.crearVideoConferencia(VideoConferencia);\n            //     })\n            //     ,\n            //     catchError((error:Error) => {\n            //         throw new Error(error.message);\n            //     })\n            //     );\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CuentaModule.html":{"url":"modules/CuentaModule.html","title":"module - CuentaModule","body":"\n                   \n\n\n\n\n    Modules\n    CuentaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CuentaModule\n\n\n\ncluster_CuentaModule_imports\n\n\n\ncluster_CuentaModule_providers\n\n\n\n\nMensajeriaModuleCuenta\n\nMensajeriaModuleCuenta\n\n\n\nCuentaModule\n\nCuentaModule\n\nCuentaModule -->\n\nMensajeriaModuleCuenta->CuentaModule\n\n\n\n\n\nMongoModuleCuenta\n\nMongoModuleCuenta\n\nCuentaModule -->\n\nMongoModuleCuenta->CuentaModule\n\n\n\n\n\nAudioConferenciaRepository\n\nAudioConferenciaRepository\n\nCuentaModule -->\n\nAudioConferenciaRepository->CuentaModule\n\n\n\n\n\nVideoConferenciaRepository\n\nVideoConferenciaRepository\n\nCuentaModule -->\n\nVideoConferenciaRepository->CuentaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/cuenta/src/cuenta.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AudioConferenciaRepository\n                        \n                        \n                            VideoConferenciaRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventoController\n                        \n                        \n                            VideoConferenciaController\n                        \n                        \n                            AudioConferenciaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MensajeriaModuleCuenta\n                        \n                        \n                            MongoModuleCuenta\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AudioConferenciaService } from './infraestructura/services/audio-conferencia.service';\nimport { EventoController } from './evento.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { MongoModuleCuenta } from './infraestructura/dataBase/mongoose.cuenta.module';\nimport { MensajeriaModuleCuenta } from './infraestructura/menssaging/mensajeria.cuenta.module';\nimport { VideoConferenciaService } from './infraestructura/services/video-conferencia.service';\nimport { AudioConferenciaRepository } from './infraestructura/dataBase/repository/audio-conferencia.repositoy';\nimport { VideoConferenciaRepository } from './infraestructura/dataBase/repository/video-conferencia.repositoy';\nimport { VideoConferenciaController } from './infraestructura/controllers/video-conferencia.controller';\nimport { AudioConferenciaController } from './infraestructura/controllers/audio-conferencia.controller';\n@Module({\n  imports: [\n    MensajeriaModuleCuenta,\n    MongoModuleCuenta,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: join(\n        process.cwd(),\n        'environments',\n        `.env.${process.env.SCOPE?.trimEnd()}`,\n        ),\n      }),\n  ],\n  controllers: [\n    EventoController,\n    VideoConferenciaController,\n    AudioConferenciaController,\n\n  ],\n  providers: [\n    ConfigService,\n    AudioConferenciaService,\n    VideoConferenciaService,\n\n    AudioConferenciaRepository,\n    VideoConferenciaRepository,\n\n  \n  ],\n})\nexport class CuentaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditarPersonaoUseCase.html":{"url":"classes/EditarPersonaoUseCase.html","title":"class - EditarPersonaoUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditarPersonaoUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/persona/editar-persona.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioService: PersonaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/persona/editar-persona.use-case.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        PersonaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(id: string, dato: IDatosBasicosModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/persona/editar-persona.use-case.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dato\n                                    \n                                                IDatosBasicosModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PersonaDomainEntity } from '../../../dominio/model/persona';\nimport { IDatosBasicosModel } from '../../../dominio/model/interface/datos-basicos.interface';\nimport { Observable } from 'rxjs';\nimport { PersonaMongoService } from '../../../infrastructura/dataBase/services/persona.service.mongo';\nimport { PersonaSchema } from '../../../infrastructura/dataBase/schema/persona.shema';\n\n\nexport class EditarPersonaoUseCase {  \n  \n    constructor(private readonly usuarioService: PersonaMongoService) { }\n\n        execute(id: string, dato: IDatosBasicosModel): Observable {\n            \n            const newPersona = new PersonaDomainEntity();\n            newPersona.mail = dato.mail;\n            newPersona.nombre = dato.nombre;\n            newPersona.setPassword(dato.clave);\n            return this.usuarioService.actualizar(id,newPersona);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EliminarPersonaoUseCase.html":{"url":"classes/EliminarPersonaoUseCase.html","title":"class - EliminarPersonaoUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EliminarPersonaoUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/persona/eliminar-persona.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioService: PersonaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/persona/eliminar-persona.use-case.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        PersonaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/persona/eliminar-persona.use-case.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { PersonaMongoService } from '../../../infrastructura/dataBase/services/persona.service.mongo';\n\n\nexport class EliminarPersonaoUseCase {  \n  \n    constructor(private readonly usuarioService: PersonaMongoService) { }\n\n        execute(dato: string): Observable {\n\n            return this.usuarioService.eliminar(dato);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmpresaBuscadaPublisher.html":{"url":"injectables/EmpresaBuscadaPublisher.html","title":"injectable - EmpresaBuscadaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmpresaBuscadaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-buscada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-buscada.publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: RegistrarEmpresaDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-buscada.publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegistrarEmpresaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { RegistrarEmpresaDto } from '../../../dto/registrar-empresa.dto';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class EmpresaBuscadaPublisher {\n\n    constructor(\n        @Inject('USUARIO_SERVICE') private readonly clienProxy: ClientProxy,\n    ) { }\n\n    publish(data:RegistrarEmpresaDto) : Observable {\n        return this.clienProxy.emit( 'usuario.empresa.buscada',\n            JSON.stringify({ data})\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmpresaController.html":{"url":"controllers/EmpresaController.html","title":"controller - EmpresaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmpresaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/controllers/empresa.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                empresa\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buscarEmpresa\n                            \n                            \n                                crearEmpresa\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buscarEmpresa\n                        \n                    \n                \n            \n            \n                \nbuscarEmpresa(id: BuscarMail)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Buscar  Empresa'})@Get('buscar')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/empresa.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                BuscarMail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearEmpresa\n                        \n                    \n                \n            \n            \n                \ncrearEmpresa(Empresa: RegistrarEmpresaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Crear  Empresa'})@Post('/crear')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/empresa.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Empresa\n                                    \n                                                RegistrarEmpresaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { EmpresaRegistradaPublisher } from \"../messanging/publisher/empresa/empresa-registrada.publisher\";\nimport { EmpresaService } from '../service/empresa.service';\nimport { EmpresaBuscadaPublisher } from '../messanging/publisher/empresa/empresa-buscada.publisher';\nimport { Body, Controller, Get, Post } from \"@nestjs/common\";\nimport { Observable, catchError, tap } from \"rxjs\";\nimport { EmpresaDomainEntity } from \"../../dominio/model/empresa.model\";\nimport { BuscarMail } from \"../dto/buscar-mail..dto\";\nimport { RegistrarEmpresaDto } from \"../dto/registrar-empresa.dto\";\nimport { RegistrarEmpresaUseCase } from \"../../aplicacion/useCase/empresa/registrar-empresa.use-case\";\nimport { BuscarEmpresaUseCase } from '../../aplicacion/useCase/empresa/buscar-empresa.use.case';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Empresa')\n@Controller('empresa')\nexport class EmpresaController {\n    constructor(\n        private readonly empresaRegistradaPublisher : EmpresaRegistradaPublisher,\n        private readonly empresaService: EmpresaService,\n        private readonly empresaBuscadaPublisher: EmpresaBuscadaPublisher,\n    ) {}\n\n    @ApiOperation ({summary: \"Crear  Empresa\"})\n    @Post('/crear')\n     /**\n      * The function crearEmpresa() takes a RegistrarEmpresaDto object as a parameter, and returns an\n      * Observable of type EmpresaDomainEntity.\n      * @param {RegistrarEmpresaDto} Empresa - RegistrarEmpresaDto\n      * @returns The observable is being returned.\n      */\n     crearEmpresa(@Body() Empresa: RegistrarEmpresaDto):Observable {\n        const caso = new RegistrarEmpresaUseCase(this.empresaService);\n        return caso.execute(Empresa)\n        .pipe(\n            tap((Empresa:RegistrarEmpresaDto) => {\n                this.empresaRegistradaPublisher.publish(Empresa);\n            },\n            (error:Error) => {\n                console.log(error);\n            }));\n    }\n\n    @ApiOperation ({summary: \"Buscar  Empresa\"})\n     @Get('buscar')\n     /**\n      * BuscarEmpresa\" is a function that receives a parameter of type \"BuscarMail\" and returns an\n      * observable of type \"EmpresaDomainEntity\n      * @param {BuscarMail} id - BuscarMail\n      * @returns The observable is being returned.\n      */\n     buscarEmpresa(@Body() id: BuscarMail ):Observable{\n        const caso = new BuscarEmpresaUseCase(this.empresaService);\n        \n        return caso.execute(id.mail).pipe(tap((data: EmpresaDomainEntity) =>{\n            this.empresaBuscadaPublisher.publish(data);\n        },\n        catchError((error) => {\n            // Manejo de errores\n            console.error('Se produjo un error al buscar la persona', error);\n            throw new Error('No se pudo buscar la persona');\n       \n        })));\n     }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmpresaDomainEntity.html":{"url":"classes/EmpresaDomainEntity.html","title":"class - EmpresaDomainEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmpresaDomainEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/model/empresa.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IDatosBasicosModel\n                            IEmpresaDomainModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cantidadEmpleado\n                            \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                            \n                                nombre\n                            \n                            \n                                rubro\n                            \n                            \n                                rut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dato?: IDatosBasicosModel, empresa?: IEmpresaDomainModel)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dato\n                                                  \n                                                        \n                                                                        IDatosBasicosModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        empresa\n                                                  \n                                                        \n                                                                        IEmpresaDomainModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cantidadEmpleado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/empresa.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(clave: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/model/empresa.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clave\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createHash } from \"crypto\";\nimport { IDatosBasicosModel } from \"./interface/datos-basicos.interface\";\nimport { IEmpresaDomainModel } from \"./interface/empresa.interface\";\n\nexport class EmpresaDomainEntity implements IDatosBasicosModel , IEmpresaDomainModel {\n    \n    \n    nombre: string;\n    mail: string;\n    clave: string;\n    \n    cantidadEmpleado: number;\n    rut: number;\n    rubro: string;\n\n    constructor(_dato?: IDatosBasicosModel , empresa?: IEmpresaDomainModel) {\n\n        if (_dato?.nombre)\n            this.nombre= _dato.nombre;\n\n        if (_dato?.mail)\n            this.mail = _dato.mail;\n\n        if (_dato?.clave)\n            this.clave = _dato.clave;\n\n        if (empresa?.cantidadEmpleado)\n        this.cantidadEmpleado = empresa.cantidadEmpleado;\n\n        if (empresa?.rut)\n            this.rut= empresa.rut;\n\n        if (empresa?.rubro)\n            this.rubro = empresa.rubro;\n\n\n    }\n\n    public setPassword(clave: string): void {\n        const hash = createHash('sha256');\n        hash.update(clave);\n        this.clave = hash.digest('hex');\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmpresaMongoService.html":{"url":"injectables/EmpresaMongoService.html","title":"injectable - EmpresaMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmpresaMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/services/empresa.service.mongo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(empresaRepository: EmpresaRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/dataBase/services/empresa.service.mongo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        empresaRepository\n                                                  \n                                                        \n                                                                        EmpresaRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/services/empresa.service.mongo.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(empresa: EmpresaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/services/empresa.service.mongo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    empresa\n                                    \n                                                EmpresaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { IEmpresaDomainService } from '../../../dominio/services/empresa.domain.service';\nimport { EmpresaSchema } from '../schema/empresa.shema';\nimport { EmpresaRepository } from '../repository/empresa.repository';\nimport { Observable } from \"rxjs\";\n\n\n@Injectable()\nexport class EmpresaMongoService\n  implements IEmpresaDomainService\n{\n \n  constructor(private readonly empresaRepository: EmpresaRepository) {}\n\n    registar(empresa: EmpresaSchema): Observable {\n        return this.empresaRepository.registar(empresa);\n    }\n    findOneBy(id: string): Observable {\n        return this.empresaRepository.findOneBy(id);\n    }\n    // findAll(): Observable {\n    //     return this.empresaRepository.findAll();\n    // }\n    // Actualizar(id: string, empresa: EmpresaSchema): Observable {\n    //    return this.empresaRepository.actualizar(id, empresa);\n    // }\n    // eliminar(id: string): Observable {\n    //     return this.empresaRepository.eliminar(id);\n    // }\n\n\n\n  \n\n \n\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmpresaRegistradaPublisher.html":{"url":"injectables/EmpresaRegistradaPublisher.html","title":"injectable - EmpresaRegistradaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmpresaRegistradaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-registrada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-registrada.publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: RegistrarEmpresaDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-registrada.publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegistrarEmpresaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { RegistrarEmpresaDto } from '../../../dto/registrar-empresa.dto';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class EmpresaRegistradaPublisher {\n\n    constructor(\n        @Inject('USUARIO_SERVICE') private readonly clienProxy: ClientProxy,\n    ) { }\n\n    publish(data:RegistrarEmpresaDto) : Observable {\n        return this.clienProxy.emit( 'usuario.empresa.registrada',\n            JSON.stringify({ data})\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmpresaRepository.html":{"url":"injectables/EmpresaRepository.html","title":"injectable - EmpresaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmpresaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizar\n                            \n                            \n                                eliminar\n                            \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(empresaModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        empresaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizar\n                        \n                    \n                \n            \n            \n                \nactualizar(id: string, persona: EmpresaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persona\n                                    \n                                                EmpresaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(empresa: EmpresaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    empresa\n                                    \n                                                EmpresaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Observable, catchError, from } from \"rxjs\";\n\nimport { IUsuarioRepository } from \"../../../../src/dominio/repositories/usuario-repository-base.repositoy\";\nimport { Model } from \"mongoose\";\nimport { EmpresaSchema, EmpresaDocument } from '../schema/empresa.shema';\n\n@Injectable()\nexport class EmpresaRepository implements IUsuarioRepository{\n    \n    constructor(\n        @InjectModel(EmpresaSchema.name) private readonly empresaModel: Model) { }\n    \n    \n    registar(empresa: EmpresaSchema): Observable {\n        return from(this.empresaModel.create(empresa));\n    }\n\n    findOneBy(id: string): Observable {\n        return from(Promise.resolve(this.empresaModel.findOne({mail: id}))) // Promise.resolve() para convertir el resultado devuelto por findOne() en una promesa\n            .pipe(\n                catchError((err:Error) => {\n                    throw new Error(err.message);\n                }\n            ));\n    }\n\n//     actualizar(id:string ,empresa: EmpresaSchema): Observable {\n//         return from(this.empresaModel.findByIdAndUpdate(id, empresa, {new: true}))\n//             .pipe(\n//                  catchError((err : Error) => {\n//                  throw new Error('No se encontro la empresa');\n//                  })\n//     );\n//     }\n// //\n//     eliminar(id: string): Observable {\n//         return from(this.empresaModel.findByIdAndDelete(id))\n//         .pipe(\n//             catchError((err:Error) => {\n//                 throw new Error('No se encontro la empresa');\n//             })\n//         );\n//     }\n\n    actualizar(id: string, persona: EmpresaSchema): Observable {\n        throw new Error(\"Method not implemented.\");\n    }\n    eliminar(id: string): Observable {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmpresaSchema.html":{"url":"classes/EmpresaSchema.html","title":"class - EmpresaSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmpresaSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/schema/empresa.shema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EmpresaDomainEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cantidadEmpleado\n                            \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                            \n                                nombre\n                            \n                            \n                                rubro\n                            \n                            \n                                rut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cantidadEmpleado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, unique: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, index: true, unique: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:45\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(clave: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmpresaDomainEntity\n\n                \n            \n            \n                \n                        Defined in         EmpresaDomainEntity:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clave\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { EmpresaDomainEntity } from '../../../dominio/model/empresa.model';\n\n\n@Schema({collection: 'Empresa',versionKey: false})\nexport class EmpresaSchema extends EmpresaDomainEntity {\n \n  @Prop({\n    type: String,\n    index: true,\n    required: true,\n  })\n  nombre: string;\n\n  @Prop({\n      type: String,\n      index: true,\n      unique: true,\n      required: true,\n    })\n    mail: string;\n    \n    @Prop({\n        type: String,\n        index: true,\n        required: true,\n    })\n    clave: string;\n\n\n    @Prop({\n      type: Number,\n      index: true,\n      required: true,\n    })\n    cantidadEmpleado:number;\n\n    @Prop({\n      type: Number,\n      index: true,\n      unique: true,\n      required: true,\n    })\n    rut:number;\n\n    @Prop({\n      type: String,\n      index: true,\n      required: true,\n    })\n    rubro: string \n}\n\n/**\n * define la forma en que los documentos deben ser organizados dentro de una colección.\n * hidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n */\nexport type EmpresaDocument = HydratedDocument;\n\nexport const EmpresaSchemaFactory = SchemaFactory.createForClass(EmpresaSchema);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmpresaService.html":{"url":"injectables/EmpresaService.html","title":"injectable - EmpresaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmpresaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/service/empresa.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EmpresaMongoService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmpresaMongoService\n\n                \n            \n            \n                \n                        Defined in         EmpresaMongoService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(empresa: EmpresaSchema)\n                \n            \n\n\n            \n                \n                    Inherited from         EmpresaMongoService\n\n                \n            \n            \n                \n                        Defined in         EmpresaMongoService:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    empresa\n                                    \n                                                EmpresaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EmpresaMongoService } from '../dataBase/services/empresa.service.mongo';\n\n@Injectable()\nexport class EmpresaService extends EmpresaMongoService  {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventoController.html":{"url":"controllers/EventoController.html","title":"controller - EventoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/evento.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                personaCreada\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        personaCreada\n                        \n                    \n                \n            \n            \n                \npersonaCreada(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('usuario.persona.registrada')\n                \n            \n\n            \n                \n                    Defined in apps/cuenta/src/evento.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { EventPattern, Payload } from \"@nestjs/microservices\";\nimport { IPersonaCuenta } from \"./dominio/model/interfaces/persona.domain.interface.usuario\";\n\n@Controller()\nexport class EventoController {\n\n    constructor() {}\n\n    //Persona de repoUsuario\n\n    @EventPattern('usuario.persona.registrada')\n    personaCreada(@Payload() data: {data:IPersonaCuenta}):void {\n        console.log('Persona registrada',data);\n    }\n    \n//     @EventPattern('usuario.persona.buscada')\n//     personaBuscada(@Payload() data: {data:IPersonaCuenta}):void {\n//         console.log('Persona buscada ',data);\n\n//     }\n//     @EventPattern('usuario.persona.editada')\n//     personaEditada(@Payload() data: {data:IPersonaCuenta}):void {\n//         console.log('persona editada',data);\n//     }\n//     @EventPattern('usuario.persona.eliminada')\n//     personaEliminada(@Payload() data: boolean):void {\n//         console.log('persona eliminada',data);\n//     }\n// //---------------------------------------------------------------------------\n//     //Empresa de repoUsuario\n\n//     @EventPattern('usuario.empresa.buscada')\n//     empresaCreada(@Payload() data: any):void {\n//         console.log('empresa registrada',data);\n//     }\n\n//     @EventPattern('usuario.empresa.registrada')\n//     empresaBuscada(@Payload() data: any):void {\n//         console.log('empresa buscada',data);\n//     }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventoCuentaController.html":{"url":"controllers/EventoCuentaController.html","title":"controller - EventoCuentaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventoCuentaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/evento-cuenta.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cuentaAudioConferencia\n                            \n                            \n                                cuentaVideoConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cuentaAudioConferencia\n                        \n                    \n                \n            \n            \n                \ncuentaAudioConferencia(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('cuenta.audioConferencia.creada')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/evento-cuenta.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cuentaVideoConferencia\n                        \n                    \n                \n            \n            \n                \ncuentaVideoConferencia(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('cuenta.videoConferencia.creada')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/evento-cuenta.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport {  MessagePattern, Payload } from \"@nestjs/microservices\";\nimport { PersonaService } from \"./infrastructura/service/persona.service\";\nimport { BuscarPersonaUseCase } from \"./aplicacion/useCase/persona/buscar-persona.use-case\";\nimport { PersonaDomainEntity } from \"./dominio/model/persona\";\nimport {  Observable, map } from \"rxjs\";\nimport { PersonaSchema } from './infrastructura/dataBase/schema/persona.shema';\n\n\n@Controller()\nexport class EventoCuentaController {\n\n    constructor(private readonly personaService : PersonaService) {}\n\n\n    @MessagePattern('cuenta.videoConferencia.creada')\n    cuentaVideoConferencia(@Payload() data: string):Observable{\n        console.log('Mensaje recibido en el receptor: ',data);\n\n        const caso = new BuscarPersonaUseCase(this.personaService);\n\n        return caso.execute(data)\n        .pipe(\n            map( (valor:PersonaSchema) =>  valor.mail)  \n        )\n            \n    }\n    \n\n    @MessagePattern('cuenta.audioConferencia.creada')\n    cuentaAudioConferencia(@Payload() data: string):Observable{\n        console.log('Mensaje recibido en el receptor: ',data);\n\n        const caso = new BuscarPersonaUseCase(this.personaService);\n\n        return caso.execute(data)\n        .pipe(\n            map( (valor:PersonaDomainEntity) =>  valor.mail)  \n        )\n            \n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAudioConferencia.html":{"url":"interfaces/IAudioConferencia.html","title":"interface - IAudioConferencia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAudioConferencia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/model/interfaces/audio-conferencia.dominio.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anfitrion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            audio\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            participantes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anfitrion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anfitrion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participantes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participantes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAudioConferencia {\n  anfitrion: string;\n  participantes?: string[];\n  audio?:boolean;\n  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAudioConferenciaDomainService.html":{"url":"interfaces/IAudioConferenciaDomainService.html","title":"interface - IAudioConferenciaDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAudioConferenciaDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/services/audio-conferencia.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        crearAudioConferencia\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearAudioConferencia\n                        \n                    \n                \n            \n            \n                \ncrearAudioConferencia(dato: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/dominio/services/audio-conferencia.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { AudioConferenciaDomainEntity } from '../model/entidades/audio-conferencia.dominio.entidad';\n\n\nexport interface IAudioConferenciaDomainService {\n\n    crearAudioConferencia(dato: T ):Observable;\n    // findOneBy(id: string): Observable\n    // ActualizarAudioConferencia(id: string , dato : T ):Observable;\n    // eliminarAudioConferencia(id: string): Observable;\n    // findAll(): Observable;\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICuentaRepository.html":{"url":"interfaces/ICuentaRepository.html","title":"interface - ICuentaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICuentaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/repositorios/cuenta-conferencia.repositorio.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        registar\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(data: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/dominio/repositorios/cuenta-conferencia.repositorio.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface ICuentaRepository {\t\n\n    registar(data: T): Observable;\n    // findOneBy(id: string): Observable\n    \n   // actualizar(id :string ,data: T): Observable;\n    // eliminar(id: string): Observable;\n    // findAll(): Observable;\n   \n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatosBasicosModel.html":{"url":"interfaces/IDatosBasicosModel.html","title":"interface - IDatosBasicosModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatosBasicosModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/model/interface/datos-basicos.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clave\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clave:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDatosBasicosModel {\n    nombre: string;\n    mail: string;\n    clave: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEmpresaCuenta.html":{"url":"interfaces/IEmpresaCuenta.html","title":"interface - IEmpresaCuenta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEmpresaCuenta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/model/interfaces/empresa.dominio.interface.usuario.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidadEmpleado\n                                        \n                                \n                                \n                                        \n                                            clave\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            rubro\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidadEmpleado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidadEmpleado:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clave:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rubro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rubro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEmpresaCuenta {\n    nombre: string;\n    mail: string;\n    clave: string;\n    \n    cantidadEmpleado:number;\n    rut:number;\n    rubro: string ;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEmpresaDomainModel.html":{"url":"interfaces/IEmpresaDomainModel.html","title":"interface - IEmpresaDomainModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEmpresaDomainModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/model/interface/empresa.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidadEmpleado\n                                        \n                                \n                                \n                                        \n                                            rubro\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidadEmpleado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidadEmpleado:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rubro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rubro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IEmpresaDomainModel  {\n    \n    cantidadEmpleado:number;\n    rut:number;\n    rubro: string ;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEmpresaDomainService.html":{"url":"interfaces/IEmpresaDomainService.html","title":"interface - IEmpresaDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEmpresaDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/services/empresa.domain.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findOneBy\n                                    \n                                \n                                \n                                    \n                                        registar\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/services/empresa.domain.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(persona: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/services/empresa.domain.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { EmpresaDomainEntity } from '../model/empresa.model';\n\nexport interface IEmpresaDomainService {\n\n    registar(persona:T):Observable;\n    findOneBy(id: string): Observable\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoginModelDomain.html":{"url":"interfaces/ILoginModelDomain.html","title":"interface - ILoginModelDomain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILoginModelDomain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/model/interface/login.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clave\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clave:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILoginModelDomain {\n    mail: string;\n    clave: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPersonaCuenta.html":{"url":"interfaces/IPersonaCuenta.html","title":"interface - IPersonaCuenta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPersonaCuenta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/model/interfaces/persona.domain.interface.usuario.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            clave\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clave:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPersonaCuenta {\n    nombre: string;\n    mail: string;\n    clave: string;\n    _id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPersonaDomainService.html":{"url":"interfaces/IPersonaDomainService.html","title":"interface - IPersonaDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPersonaDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/services/persona.domain.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        actualizar\n                                    \n                                \n                                \n                                    \n                                        eliminar\n                                    \n                                \n                                \n                                    \n                                        findOneBy\n                                    \n                                \n                                \n                                    \n                                        registar\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizar\n                        \n                    \n                \n            \n            \n                \nactualizar(id: string, persona: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/services/persona.domain.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persona\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/services/persona.domain.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/services/persona.domain.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(persona: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/services/persona.domain.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { PersonaDomainEntity } from '../model/persona';\n\nexport interface IPersonaDomainService {\n\n    registar(persona:T):Observable;\n    findOneBy(id: string): Observable\n    actualizar(id :string ,persona: T): Observable;\n    eliminar(id: string): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPersonaLogeada.html":{"url":"interfaces/IPersonaLogeada.html","title":"interface - IPersonaLogeada","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPersonaLogeada\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/model/interface/PersonaLogeada.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clave\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clave:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPersonaLogeada {\n    nombre: string;\n    mail : string;\n    clave: string;\n    token:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUsuarioRepository.html":{"url":"interfaces/IUsuarioRepository.html","title":"interface - IUsuarioRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUsuarioRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        actualizar\n                                    \n                                \n                                \n                                    \n                                        eliminar\n                                    \n                                \n                                \n                                    \n                                        findOneBy\n                                    \n                                \n                                \n                                    \n                                        registar\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizar\n                        \n                    \n                \n            \n            \n                \nactualizar(id: string, persona: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persona\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(persona: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface IUsuarioRepository {\t\n\n    registar(persona: T): Observable;\n    findOneBy(id: string): Observable\n    actualizar(id :string ,persona: T): Observable;\n    eliminar(id: string): Observable;\n    // findAll(): Observable;\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVideoConferencia.html":{"url":"interfaces/IVideoConferencia.html","title":"interface - IVideoConferencia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IVideoConferencia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/model/interfaces/video-conferencia.dominio.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anfitrion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chatVivo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            compartirArchivo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grabacion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            participante\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pizzarra\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            presentacion\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anfitrion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anfitrion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chatVivo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chatVivo:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compartirArchivo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compartirArchivo:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grabacion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grabacion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participante\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participante:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pizzarra\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pizzarra:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        presentacion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        presentacion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IVideoConferencia {\n  anfitrion: string;\n  participante?: string[];\n  chatVivo?:boolean;\n  grabacion?:boolean;  \n  pizzarra?:boolean;  \n  compartirArchivo?:boolean;  \n  presentacion?:boolean;  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVideoConferenciaDomainService.html":{"url":"interfaces/IVideoConferenciaDomainService.html","title":"interface - IVideoConferenciaDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IVideoConferenciaDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/services/video-conferencia.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        crearVideoConferencia\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearVideoConferencia\n                        \n                    \n                \n            \n            \n                \ncrearVideoConferencia(dato: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/dominio/services/video-conferencia.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { VideoConferenciaDomainEntity } from '../model/entidades/video-conferencia.dominio.entidad';\n\n\nexport interface IVideoConferenciaDomainService {\n\n    crearVideoConferencia(dato: T ):Observable;\n    \n}\n// findOneBy(id: string): Observable\n // ActualizarVideoConferencia(id: string , dato : T ):Observable;\n // eliminarVideoConferencia(id: string): Observable;\n // findAll(): Observable;\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogearPersonaoUseCase.html":{"url":"classes/LogearPersonaoUseCase.html","title":"class - LogearPersonaoUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogearPersonaoUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/persona/login-persona.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioService: PersonaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/persona/login-persona.use-case.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        PersonaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: LogearseDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/persona/login-persona.use-case.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                LogearseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, mergeMap, of, switchMap } from 'rxjs';\nimport { PersonaMongoService } from '../../../infrastructura/dataBase/services/persona.service.mongo';\nimport { LogearseDto } from 'apps/usuario/src/infrastructura/dto/logarse.dto';\nimport * as jwt from 'jsonwebtoken';\n\nimport { createHash } from 'crypto';\n\nexport class LogearPersonaoUseCase {  \n  \n    constructor(private readonly usuarioService: PersonaMongoService) { }\n\n        execute(dato: LogearseDto): Observable {\n            console.log(\"ver la clase para testing\",dato.mail)\n            return from(this.usuarioService.findOneBy(dato.mail)).pipe(\n                switchMap((persona) => {\n                    const hash = createHash('sha256');\n                    hash.update(dato.clave);\n                    dato.clave = hash.digest('hex');\n                   if(persona.clave !== dato.clave) throw new Error(\"Credenciales incorrectas\");\n                           \n                    return of(jwt.sign({persona},process.env.TOKEN || `tokenEntrada`));\n\n                  })\n                );\n    \n        }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogearseDto.html":{"url":"classes/LogearseDto.html","title":"class - LogearseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogearseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dto/logarse.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/infrastructura/dto/logarse.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/infrastructura/dto/logarse.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail } from 'class-validator';\n\nexport class LogearseDto {\n\n    @IsEmail()\n    mail: string;\n\n    @IsString()\n    clave: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MensajeriaModule.html":{"url":"modules/MensajeriaModule.html","title":"module - MensajeriaModule","body":"\n                   \n\n\n\n\n    Modules\n    MensajeriaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MensajeriaModule\n\n\n\ncluster_MensajeriaModule_exports\n\n\n\ncluster_MensajeriaModule_providers\n\n\n\n\nEmpresaBuscadaPublisher \n\nEmpresaBuscadaPublisher \n\n\n\nEmpresaRegistradaPublisher \n\nEmpresaRegistradaPublisher \n\n\n\nPersonaBuscadaPublisher \n\nPersonaBuscadaPublisher \n\n\n\nPersonaEditadaPublisher \n\nPersonaEditadaPublisher \n\n\n\nPersonaEliminadaPublisher \n\nPersonaEliminadaPublisher \n\n\n\nPersonaRegistradaPublisher \n\nPersonaRegistradaPublisher \n\n\n\nMensajeriaModule\n\nMensajeriaModule\n\nEmpresaBuscadaPublisher  -->\n\nMensajeriaModule->EmpresaBuscadaPublisher \n\n\n\nEmpresaRegistradaPublisher  -->\n\nMensajeriaModule->EmpresaRegistradaPublisher \n\n\n\nPersonaBuscadaPublisher  -->\n\nMensajeriaModule->PersonaBuscadaPublisher \n\n\n\nPersonaEditadaPublisher  -->\n\nMensajeriaModule->PersonaEditadaPublisher \n\n\n\nPersonaEliminadaPublisher  -->\n\nMensajeriaModule->PersonaEliminadaPublisher \n\n\n\nPersonaRegistradaPublisher  -->\n\nMensajeriaModule->PersonaRegistradaPublisher \n\n\n\n\n\nEmpresaBuscadaPublisher\n\nEmpresaBuscadaPublisher\n\nMensajeriaModule -->\n\nEmpresaBuscadaPublisher->MensajeriaModule\n\n\n\n\n\nEmpresaRegistradaPublisher\n\nEmpresaRegistradaPublisher\n\nMensajeriaModule -->\n\nEmpresaRegistradaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaBuscadaPublisher\n\nPersonaBuscadaPublisher\n\nMensajeriaModule -->\n\nPersonaBuscadaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaEditadaPublisher\n\nPersonaEditadaPublisher\n\nMensajeriaModule -->\n\nPersonaEditadaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaEliminadaPublisher\n\nPersonaEliminadaPublisher\n\nMensajeriaModule -->\n\nPersonaEliminadaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaRegistradaPublisher\n\nPersonaRegistradaPublisher\n\nMensajeriaModule -->\n\nPersonaRegistradaPublisher->MensajeriaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/mensajeria.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmpresaBuscadaPublisher\n                        \n                        \n                            EmpresaRegistradaPublisher\n                        \n                        \n                            PersonaBuscadaPublisher\n                        \n                        \n                            PersonaEditadaPublisher\n                        \n                        \n                            PersonaEliminadaPublisher\n                        \n                        \n                            PersonaRegistradaPublisher\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmpresaBuscadaPublisher\n                        \n                        \n                            EmpresaRegistradaPublisher\n                        \n                        \n                            PersonaBuscadaPublisher\n                        \n                        \n                            PersonaEditadaPublisher\n                        \n                        \n                            PersonaEliminadaPublisher\n                        \n                        \n                            PersonaRegistradaPublisher\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { PersonaRegistradaPublisher } from \"./publisher/persona/persona-registrado.publisher\";\nimport { PersonaBuscadaPublisher } from \"./publisher/persona/persona-buscada.publisher\";\nimport { EmpresaBuscadaPublisher } from \"./publisher/empresa/empresa-buscada.publisher\";\nimport { EmpresaRegistradaPublisher } from \"./publisher/empresa/empresa-registrada.publisher\";\nimport { PersonaEditadaPublisher } from \"./publisher/persona/persona-editada.publisher\";\nimport { PersonaEliminadaPublisher } from \"./publisher/persona/persona-eliminada.publisher\";\n\n@Module({\n    imports: [\n        ClientsModule.register([\n            {\n              name: 'USUARIO_SERVICE',\n              transport: Transport.RMQ,\n              options: {\n                urls: ['amqp://localhost:5672'],\n                queue: 'usuario_queue',\n                queueOptions: {\n                  durable: false\n                },\n              },\n            },\n          ]),\n    ],\n    controllers: [],\n    providers: [\n      //Usuario\n      PersonaRegistradaPublisher,\n      PersonaBuscadaPublisher,\n      PersonaEditadaPublisher,\n      PersonaEliminadaPublisher,\n\n      EmpresaRegistradaPublisher,\n      EmpresaBuscadaPublisher,\n\n      //cuenta\n      // PersonaBuscadaVideoConferenciaPublisher,\n      // RespuestaVideoConferenciadaRegistradaPublisher,\n    ],\n    exports: [\n      //cuenta \n      // PersonaBuscadaVideoConferenciaPublisher,\n      // RespuestaVideoConferenciadaRegistradaPublisher,\n\n      //usuario\n      EmpresaRegistradaPublisher,\n      EmpresaBuscadaPublisher,\n      \n      PersonaRegistradaPublisher,\n      PersonaBuscadaPublisher,\n      PersonaEditadaPublisher,\n      PersonaEliminadaPublisher,\n    ],\n  })\n  export class MensajeriaModule {}\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MensajeriaModuleCuenta.html":{"url":"modules/MensajeriaModuleCuenta.html","title":"module - MensajeriaModuleCuenta","body":"\n                   \n\n\n\n\n    Modules\n    MensajeriaModuleCuenta\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MensajeriaModuleCuenta\n\n\n\ncluster_MensajeriaModuleCuenta_exports\n\n\n\ncluster_MensajeriaModuleCuenta_providers\n\n\n\n\nAudioConferenciaCreadaPublisher \n\nAudioConferenciaCreadaPublisher \n\n\n\nVideoConferenciaCreadaPublisher \n\nVideoConferenciaCreadaPublisher \n\n\n\nMensajeriaModuleCuenta\n\nMensajeriaModuleCuenta\n\nAudioConferenciaCreadaPublisher  -->\n\nMensajeriaModuleCuenta->AudioConferenciaCreadaPublisher \n\n\n\nVideoConferenciaCreadaPublisher  -->\n\nMensajeriaModuleCuenta->VideoConferenciaCreadaPublisher \n\n\n\n\n\nAudioConferenciaCreadaPublisher\n\nAudioConferenciaCreadaPublisher\n\nMensajeriaModuleCuenta -->\n\nAudioConferenciaCreadaPublisher->MensajeriaModuleCuenta\n\n\n\n\n\nVideoConferenciaCreadaPublisher\n\nVideoConferenciaCreadaPublisher\n\nMensajeriaModuleCuenta -->\n\nVideoConferenciaCreadaPublisher->MensajeriaModuleCuenta\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/menssaging/mensajeria.cuenta.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AudioConferenciaCreadaPublisher\n                        \n                        \n                            VideoConferenciaCreadaPublisher\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AudioConferenciaCreadaPublisher\n                        \n                        \n                            VideoConferenciaCreadaPublisher\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { VideoConferenciaCreadaPublisher } from \"./publisher/video-conferencia/video-conferencia-creada.publisher\";\nimport { AudioConferenciaCreadaPublisher } from \"./publisher/video-conferencia/audio-conferencia-creada.publisher\";\n@Module({\n    imports: [\n        ClientsModule.register([\n            {\n              name: 'CUENTA_SERVICE',\n              transport: Transport.RMQ,\n              options: {\n                urls: ['amqp://localhost:5672'],\n                queue: 'cuenta_queue',\n                queueOptions: {\n                  durable: false\n                },\n              },\n            },\n          ]),\n    ],\n    controllers: [],\n    providers: [\n\n       VideoConferenciaCreadaPublisher ,\n       AudioConferenciaCreadaPublisher,\n      \n    ],\n    exports: [\n       VideoConferenciaCreadaPublisher ,\n       AudioConferenciaCreadaPublisher,\n    ],\n  })\n  export class MensajeriaModuleCuenta {}\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoModule.html":{"url":"modules/MongoModule.html","title":"module - MongoModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MongoModule\n\n\n\ncluster_MongoModule_providers\n\n\n\ncluster_MongoModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nEmpresaMongoService \n\nEmpresaMongoService \n\n\n\nEmpresaRepository \n\nEmpresaRepository \n\n\n\nMongooseConfigService \n\nMongooseConfigService \n\n\n\nPersonaMongoService \n\nPersonaMongoService \n\n\n\nPersonaRepository \n\nPersonaRepository \n\n\n\nMongoModule\n\nMongoModule\n\nConfigService  -->\n\nMongoModule->ConfigService \n\n\n\nEmpresaMongoService  -->\n\nMongoModule->EmpresaMongoService \n\n\n\nEmpresaRepository  -->\n\nMongoModule->EmpresaRepository \n\n\n\nMongooseConfigService  -->\n\nMongoModule->MongooseConfigService \n\n\n\nPersonaMongoService  -->\n\nMongoModule->PersonaMongoService \n\n\n\nPersonaRepository  -->\n\nMongoModule->PersonaRepository \n\n\n\n\n\nEmpresaMongoService\n\nEmpresaMongoService\n\nMongoModule -->\n\nEmpresaMongoService->MongoModule\n\n\n\n\n\nEmpresaRepository\n\nEmpresaRepository\n\nMongoModule -->\n\nEmpresaRepository->MongoModule\n\n\n\n\n\nMongooseConfigService\n\nMongooseConfigService\n\nMongoModule -->\n\nMongooseConfigService->MongoModule\n\n\n\n\n\nPersonaMongoService\n\nPersonaMongoService\n\nMongoModule -->\n\nPersonaMongoService->MongoModule\n\n\n\n\n\nPersonaRepository\n\nPersonaRepository\n\nMongoModule -->\n\nPersonaRepository->MongoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/mongoose.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmpresaMongoService\n                        \n                        \n                            EmpresaRepository\n                        \n                        \n                            MongooseConfigService\n                        \n                        \n                            PersonaMongoService\n                        \n                        \n                            PersonaRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                        \n                            EmpresaMongoService\n                        \n                        \n                            EmpresaRepository\n                        \n                        \n                            MongooseConfigService\n                        \n                        \n                            PersonaMongoService\n                        \n                        \n                            PersonaRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PersonaSchema, personaSchemaFactory } from './schema/persona.shema';\nimport { MongooseConfigService } from './config/mongoose.config';\nimport { PersonaMongoService } from './services/persona.service.mongo';\nimport { EmpresaRepository } from './repository/empresa.repository';\nimport { PersonaRepository } from './repository/persona.repositoy';\nimport { EmpresaSchema, EmpresaSchemaFactory } from './schema/empresa.shema';\nimport { EmpresaMongoService } from './services/empresa.service.mongo';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useClass: MongooseConfigService\n    }),\n\n    MongooseModule.forFeature([\n      {name:PersonaSchema.name , schema:personaSchemaFactory},\n      {name:EmpresaSchema.name , schema:EmpresaSchemaFactory} \n    ])\n  ],\n  controllers: [],\n  providers: [\n    MongooseConfigService,\n    ConfigService,\n\n    PersonaMongoService,\n    EmpresaMongoService,\n\n    EmpresaRepository,\n    PersonaRepository,\n  ],\n  exports: [\n    ConfigService,\n\n\n    MongooseModule,\n    MongooseConfigService,\n\n    PersonaMongoService,\n    EmpresaMongoService,\n    \n    PersonaRepository,\n    EmpresaRepository,\n\n  ],\n})\nexport class MongoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoModuleCuenta.html":{"url":"modules/MongoModuleCuenta.html","title":"module - MongoModuleCuenta","body":"\n                   \n\n\n\n\n    Modules\n    MongoModuleCuenta\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MongoModuleCuenta\n\n\n\ncluster_MongoModuleCuenta_exports\n\n\n\ncluster_MongoModuleCuenta_providers\n\n\n\n\nAudioConferenciaMongoService \n\nAudioConferenciaMongoService \n\n\n\nAudioConferenciaRepository \n\nAudioConferenciaRepository \n\n\n\nConfigService \n\nConfigService \n\n\n\nMongooseConfigService \n\nMongooseConfigService \n\n\n\nVideoConferenciaMongoService \n\nVideoConferenciaMongoService \n\n\n\nVideoConferenciaRepository \n\nVideoConferenciaRepository \n\n\n\nMongoModuleCuenta\n\nMongoModuleCuenta\n\nAudioConferenciaMongoService  -->\n\nMongoModuleCuenta->AudioConferenciaMongoService \n\n\n\nAudioConferenciaRepository  -->\n\nMongoModuleCuenta->AudioConferenciaRepository \n\n\n\nConfigService  -->\n\nMongoModuleCuenta->ConfigService \n\n\n\nMongooseConfigService  -->\n\nMongoModuleCuenta->MongooseConfigService \n\n\n\nVideoConferenciaMongoService  -->\n\nMongoModuleCuenta->VideoConferenciaMongoService \n\n\n\nVideoConferenciaRepository  -->\n\nMongoModuleCuenta->VideoConferenciaRepository \n\n\n\n\n\nAudioConferenciaMongoService\n\nAudioConferenciaMongoService\n\nMongoModuleCuenta -->\n\nAudioConferenciaMongoService->MongoModuleCuenta\n\n\n\n\n\nAudioConferenciaRepository\n\nAudioConferenciaRepository\n\nMongoModuleCuenta -->\n\nAudioConferenciaRepository->MongoModuleCuenta\n\n\n\n\n\nMongooseConfigService\n\nMongooseConfigService\n\nMongoModuleCuenta -->\n\nMongooseConfigService->MongoModuleCuenta\n\n\n\n\n\nVideoConferenciaMongoService\n\nVideoConferenciaMongoService\n\nMongoModuleCuenta -->\n\nVideoConferenciaMongoService->MongoModuleCuenta\n\n\n\n\n\nVideoConferenciaRepository\n\nVideoConferenciaRepository\n\nMongoModuleCuenta -->\n\nVideoConferenciaRepository->MongoModuleCuenta\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/mongoose.cuenta.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AudioConferenciaMongoService\n                        \n                        \n                            AudioConferenciaRepository\n                        \n                        \n                            MongooseConfigService\n                        \n                        \n                            VideoConferenciaMongoService\n                        \n                        \n                            VideoConferenciaRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AudioConferenciaMongoService\n                        \n                        \n                            AudioConferenciaRepository\n                        \n                        \n                            ConfigService\n                        \n                        \n                            MongooseConfigService\n                        \n                        \n                            VideoConferenciaMongoService\n                        \n                        \n                            VideoConferenciaRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongooseConfigService } from './config/mongoose.config';\nimport { VideoConferenciaMongoService } from './services/video-conferencia.service.mongo';\nimport { VideoConferenciaRepository } from './repository/video-conferencia.repositoy';\nimport { ConfigService } from '@nestjs/config';\nimport { VideoconferenciaFactory, VideoConferenciaSchema } from './schema/video-conferencia.schema';\nimport { AudioConferenciaSchema, AudioconferenciaFactory } from './schema/audio-conferencia.schema';\nimport { AudioConferenciaMongoService } from './services/audio-conferencia.service.mongo';\nimport { AudioConferenciaRepository } from './repository/audio-conferencia.repositoy';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      useClass: MongooseConfigService\n    }),\n\n    MongooseModule.forFeature([\n      {name:VideoConferenciaSchema.name , schema:VideoconferenciaFactory} ,\n      {name:AudioConferenciaSchema.name , schema:AudioconferenciaFactory} ,\n    ])\n  ],\n  controllers: [],\n  providers: [\n    MongooseConfigService,\n    ConfigService,\n\n    \n    VideoConferenciaMongoService,\n    AudioConferenciaMongoService,\n\n\n    AudioConferenciaRepository,\n    VideoConferenciaRepository,\n\n  ],\n  exports: [\n    ConfigService,\n    MongooseModule,\n    MongooseConfigService,\n\n    AudioConferenciaMongoService,\n    AudioConferenciaRepository,\n    \n    VideoConferenciaMongoService,\n\n    VideoConferenciaRepository,\n\n  ],\n})\nexport class MongoModuleCuenta {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoServerErrorExceptionFilter.html":{"url":"classes/MongoServerErrorExceptionFilter.html","title":"class - MongoServerErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoServerErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/exception-filters/mongo-server-error.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: MongoServerError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/exception-filters/mongo-server-error.exception-filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            MongoServerError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { MongoServerError } from 'mongodb';\n\n@Catch(MongoServerError)\nexport class MongoServerErrorExceptionFilter\n  implements ExceptionFilter\n{\n  catch(exception: MongoServerError, host: ArgumentsHost) {\n    const context = host.switchToHttp();\n    const response = context.getResponse();\n    const message = exception.message;\n    const statusCode = HttpStatus.CONFLICT;\n    const details = exception;\n\n    response.status(statusCode).json({ statusCode, message, details });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/config/mongoose.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/dataBase/config/mongoose.config.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/dataBase/config/mongoose.config.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { MongooseModuleOptions, MongooseOptionsFactory } from \"@nestjs/mongoose\";\n\n\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n\n  constructor(private readonly configService: ConfigService){}\n    \n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: 'mongodb+srv://cristianuruuy:1234@cluster0.tmv8fk5.mongodb.net/test',\n      //uri: this.configService.get('MONGO_URI'),\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService-1.html":{"url":"injectables/MongooseConfigService-1.html","title":"injectable - MongooseConfigService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/config/mongoose.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/dataBase/config/mongoose.config.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/config/mongoose.config.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { MongooseModuleOptions, MongooseOptionsFactory } from \"@nestjs/mongoose\";\n\n\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n\n  constructor(private readonly configService: ConfigService){}\n    \n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: 'mongodb+srv://cristianuruuy:1234@cluster0.tmv8fk5.mongodb.net/test',\n      //uri: this.configService.get('MONGO_URI'),\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaBuscadaPublisher.html":{"url":"injectables/PersonaBuscadaPublisher.html","title":"injectable - PersonaBuscadaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaBuscadaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/publisher/persona/persona-buscada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-buscada.publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: IDatosBasicosModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-buscada.publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IDatosBasicosModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { IDatosBasicosModel } from 'apps/usuario/src/dominio/model/interface/datos-basicos.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PersonaBuscadaPublisher {\n\n    constructor(\n        @Inject('USUARIO_SERVICE') private readonly clienProxy: ClientProxy,\n    ) { }\n\n    publish(data:IDatosBasicosModel) : Observable {\n        return this.clienProxy.emit( 'usuario.persona.buscada',\n            JSON.stringify({ data})\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PersonaController.html":{"url":"controllers/PersonaController.html","title":"controller - PersonaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PersonaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/controllers/persona.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                persona\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buscarPersona\n                            \n                            \n                                crearPersona\n                            \n                            \n                                editarPersona\n                            \n                            \n                                eliminarPersona\n                            \n                            \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buscarPersona\n                        \n                    \n                \n            \n            \n                \nbuscarPersona(id: BuscarMail)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Buscar  Persona'})@Get('buscar')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/persona.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                BuscarMail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearPersona\n                        \n                    \n                \n            \n            \n                \ncrearPersona(persona: RegistrarPersonaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Crear  Persona'})@Post('/crear')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/persona.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                                RegistrarPersonaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editarPersona\n                        \n                    \n                \n            \n            \n                \neditarPersona(id: string, personaEditada: RegistrarPersonaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Editar  Persona'})@Put('editar/:id')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/persona.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    personaEditada\n                                    \n                                                RegistrarPersonaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarPersona\n                        \n                    \n                \n            \n            \n                \neliminarPersona(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Eliminar  Persona'})@Delete('eliminar/:id')\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/persona.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(user: LogearseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Iniciar Sesion Persona'})@Post(signIn)\n                \n            \n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/controllers/persona.controller.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                LogearseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Put ,Delete} from '@nestjs/common';\nimport {  RegistrarPersonaDto } from '../dto/registrar-persona.dto';\nimport { PersonaService } from '../service/persona.service';\nimport { PersonaRegistradaPublisher } from '../messanging/publisher/persona/persona-registrado.publisher';\nimport { Observable, catchError, map, of, tap } from 'rxjs';\nimport { PersonaDomainEntity } from '../../dominio/model/persona';\nimport { BuscarMail } from '../dto/buscar-mail..dto';\nimport { RegistrarPersonaoUseCase } from '../../aplicacion/useCase/persona/registrar-persona.use-case';\nimport { BuscarPersonaUseCase } from '../../aplicacion/useCase/persona/buscar-persona.use-case';\nimport { PersonaBuscadaPublisher } from '../messanging/publisher/persona/persona-buscada.publisher';\nimport { EditarPersonaoUseCase } from '../../aplicacion/useCase/persona/editar-persona.use-case';\nimport { PersonaEditadaPublisher } from '../messanging/publisher/persona/persona-editada.publisher';\nimport { PersonaEliminadaPublisher } from '../messanging/publisher/persona/persona-eliminada.publisher';\nimport { PersonaDocument, PersonaSchema } from '../dataBase/schema/persona.shema';\nimport { EliminarPersonaoUseCase } from '../../aplicacion/useCase/persona/eliminar-persona.use-case';\nimport { LogearseDto } from '../dto/logarse.dto';\nimport { LogearPersonaoUseCase } from '../../aplicacion/useCase/persona/login-persona.use-case';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Persona')\n@Controller('persona')\nexport class PersonaController {\n    constructor(\n        private readonly personaService: PersonaService,\n        private readonly personaRegistradaPublisher : PersonaRegistradaPublisher,\n        private readonly personaBuscadaPublisher: PersonaBuscadaPublisher,\n        private readonly personaEditadaPublisher: PersonaEditadaPublisher,\n        private readonly personaEliminadaPublisher: PersonaEliminadaPublisher,\n    ) {}\n    @ApiOperation ({summary: \"Crear  Persona\"})\n    @Post('/crear')\n     /**\n      * The function crearPersona() takes a RegistrarPersonaDto object as a parameter, and returns an\n      * Observable of type PersonaDomainEntity.\n      * @param {RegistrarPersonaDto} persona - RegistrarPersonaDto\n      * @returns The observable is being returned.\n      */\n     crearPersona(@Body() persona: RegistrarPersonaDto):Observable {\n        const caso = new RegistrarPersonaoUseCase(this.personaService);\n        return caso.execute(persona)\n        .pipe(\n            tap((persona:RegistrarPersonaDto) => {\n                this.personaRegistradaPublisher.publish(persona);\n            },\n            (error:Error) => {\n                console.log(error);\n            }));\n    }\n\n    @ApiOperation ({summary: \"Buscar  Persona\"})\n     @Get('buscar')\n     /**\n      * The function receives a body with a mail, then it creates a new instance of\n      * BuscarPersonaUseCase, then it executes the function execute of BuscarPersonaUseCase, then it\n      * publishes the data, then it catches the error and throws a new error.\n      * @param {BuscarMail} id - BuscarMail\n      * @returns The observable of the domain entity.\n      */\n     buscarPersona(@Body() id: BuscarMail ):Observable{\n        const caso = new BuscarPersonaUseCase(this.personaService);\n        \n        return caso.execute(id.mail).pipe(tap((data: PersonaDomainEntity) =>{\n            this.personaBuscadaPublisher.publish(data);\n        }),\n        catchError((error) => {\n            // Manejo de errores\n            console.error('Se produjo un error al buscar la persona', error);\n            throw new Error('No se pudo buscar la persona');\n          }));\n     }\n\n    @ApiOperation ({summary: \"Editar  Persona\"})\n    @Put('editar/:id')\n       /**\n        * This function takes an id and a body, and returns an observable of a PersonaSchema\n        * @param {string} id - string: The id of the person to be edited.\n        * @param {RegistrarPersonaDto} personaEditada - RegistrarPersonaDto\n        * @returns The observable of the edited person.\n        */\n       editarPersona(@Param('id') id : string,@Body() personaEditada: RegistrarPersonaDto ):Observable{  \n            const caso = new EditarPersonaoUseCase(this.personaService);\n            return caso.execute(id,personaEditada).pipe(tap((data: PersonaDomainEntity) =>{\n               this.personaEditadaPublisher.publish(data);\n           }),\n           catchError((error) => {\n               // Manejo de errores\n               console.error('Se produjo un error al editar la persona', error);\n               throw new Error('No se pudo editar la persona');\n             }));\n       }\n\n    @ApiOperation ({summary: \"Eliminar  Persona\"})\n    @Delete('eliminar/:id')\n        /**\n         * \"The function receives an id, creates a new instance of the EliminarPersonaoUseCase class,\n         * and then calls the execute method of the instance, passing the id as a parameter. The\n         * execute method returns an Observable, which is then piped to the tap method, which publishes\n         * the data to the personaEliminadaPublisher, and then the catchError method is called, which\n         * handles errors.\"\n         * \n         * @param {string} id - string\n         * @returns The observable is being returned.\n         */\n        eliminarPersona(@Param('id') id: string ):Observable{\n\n            const caso = new EliminarPersonaoUseCase(this.personaService)\n            return caso.execute(id)\n                .pipe(\n                    tap((data: boolean) =>{\n                    this.personaEliminadaPublisher.publish(data);\n            }),\n            catchError((error) => {\n                // Manejo de errores\n                console.error('Se produjo un error al eliminar la persona', error);\n                throw new Error('No se pudo eliminar la persona');\n              }));\n        }\n    \n    @ApiOperation ({summary: \"Iniciar Sesion Persona\"})\n    @Post(`signIn`) \n    /**\n     * This function takes a LogearseDto object as a parameter, and returns an Observable of type\n     * string.\n     * @param {LogearseDto} user - LogearseDto\n     * @returns A string.\n     */\n    signIn(@Body() user: LogearseDto): Observable{\n        const caso = new LogearPersonaoUseCase(this.personaService);\n        return caso.execute(user);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PersonaDomainEntity.html":{"url":"classes/PersonaDomainEntity.html","title":"class - PersonaDomainEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PersonaDomainEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/dominio/model/persona.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IDatosBasicosModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                            \n                                nombre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dato?: IDatosBasicosModel)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/dominio/model/persona.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dato\n                                                  \n                                                        \n                                                                        IDatosBasicosModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/persona.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/persona.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/usuario/src/dominio/model/persona.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(clave: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/dominio/model/persona.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clave\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createHash } from 'crypto';\nimport { IDatosBasicosModel } from './interface/datos-basicos.interface';\n\nexport class PersonaDomainEntity  implements IDatosBasicosModel{\n \n  nombre: string;\n  mail: string;\n  clave: string;\n\n  constructor(_dato?: IDatosBasicosModel) {\n\n    if (_dato?.nombre)\n        this.nombre= _dato.nombre;\n\n    if (_dato?.mail)\n        this.mail = _dato.mail;\n\n    if (_dato?.clave)\n        this.clave = _dato.clave;\n  }\n\n  public setPassword(clave: string): void {\n    const hash = createHash('sha256');\n    hash.update(clave);\n    this.clave = hash.digest('hex');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaEditadaPublisher.html":{"url":"injectables/PersonaEditadaPublisher.html","title":"injectable - PersonaEditadaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaEditadaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/publisher/persona/persona-editada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-editada.publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: IDatosBasicosModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-editada.publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IDatosBasicosModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { IDatosBasicosModel } from 'apps/usuario/src/dominio/model/interface/datos-basicos.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PersonaEditadaPublisher {\n\n    constructor(\n        @Inject('USUARIO_SERVICE') private readonly clienProxy: ClientProxy,\n    ) { }\n\n    publish(data:IDatosBasicosModel) : Observable {\n        return this.clienProxy.emit( 'usuario.persona.editada',\n            JSON.stringify({ data})\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaEliminadaPublisher.html":{"url":"injectables/PersonaEliminadaPublisher.html","title":"injectable - PersonaEliminadaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaEliminadaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/publisher/persona/persona-eliminada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-eliminada.publisher.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-eliminada.publisher.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PersonaEliminadaPublisher {\n\n    constructor(\n        @Inject('USUARIO_SERVICE') private readonly clienProxy: ClientProxy,\n    ) { }\n\n    publish(data: boolean) : Observable {\n        return this.clienProxy.emit( 'usuario.persona.eliminada',data)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaMongoService.html":{"url":"injectables/PersonaMongoService.html","title":"injectable - PersonaMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizar\n                            \n                            \n                                eliminar\n                            \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(personaRepository: PersonaRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personaRepository\n                                                  \n                                                        \n                                                                        PersonaRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizar\n                        \n                    \n                \n            \n            \n                \nactualizar(id: string, persona: PersonaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persona\n                                    \n                                                PersonaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(persona: PersonaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                                PersonaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PersonaSchema } from '../schema/persona.shema';\nimport { IPersonaDomainService } from '../../../dominio/services/persona.domain.service';\nimport { Injectable } from '@nestjs/common';\nimport { PersonaRepository } from '../repository/persona.repositoy';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PersonaMongoService\n  implements IPersonaDomainService\n{\n \n  constructor(private readonly personaRepository: PersonaRepository) {}\n\n    registar(persona: PersonaSchema): Observable {\n        return this.personaRepository.registar(persona);\n    }\n    findOneBy(id: string): Observable {\n        return this.personaRepository.findOneBy(id);\n    }\n    actualizar(id: string, persona: PersonaSchema): Observable {\n        return this.personaRepository.actualizar(id, persona);\n     }\n     eliminar(id: string): Observable {\n         return this.personaRepository.eliminar(id);\n     }\n   \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaRegistradaPublisher.html":{"url":"injectables/PersonaRegistradaPublisher.html","title":"injectable - PersonaRegistradaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaRegistradaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/messanging/publisher/persona/persona-registrado.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-registrado.publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publish\n                        \n                    \n                \n            \n            \n                \npublish(data: RegistrarPersonaDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/messanging/publisher/persona/persona-registrado.publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegistrarPersonaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\nimport { RegistrarPersonaDto } from '../../../dto/registrar-persona.dto';\n\n@Injectable()\nexport class PersonaRegistradaPublisher {\n\n    constructor(\n        @Inject('USUARIO_SERVICE') private readonly clienProxy: ClientProxy,\n    ) { }\n\n    publish(data:RegistrarPersonaDto) : Observable {\n        return this.clienProxy.emit( 'usuario.persona.registrada',\n            JSON.stringify({ data})\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaRepository.html":{"url":"injectables/PersonaRepository.html","title":"injectable - PersonaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizar\n                            \n                            \n                                eliminar\n                            \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(personaModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizar\n                        \n                    \n                \n            \n            \n                \nactualizar(id: string, persona: PersonaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persona\n                                    \n                                                PersonaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(persona: PersonaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                                PersonaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Observable, catchError, from, map } from \"rxjs\";\n\nimport { PersonaDocument, PersonaSchema } from '../schema/persona.shema';\nimport { IUsuarioRepository } from \"apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy\";\nimport { Model, Types } from \"mongoose\";\n\n@Injectable()\nexport class PersonaRepository implements IUsuarioRepository{\n    \n    constructor(\n        @InjectModel(PersonaSchema.name) private readonly personaModel: Model\n        ) { }\n    \n    registar(persona: PersonaSchema): Observable {\n        return from(this.personaModel.create(persona));\n    }\n    \n    \n    findOneBy(id: string): Observable {\n        return from(Promise.resolve(this.personaModel.findOne({mail: id})))\n            .pipe(\n                catchError((err:Error) => {\n                    throw new Error(err.message);\n                }\n            ));\n    }\n\n     actualizar(id:string ,persona: PersonaSchema): Observable {\n         return from(this.personaModel.findByIdAndUpdate(id, persona, {new: true}))\n             .pipe(\n                  catchError((err : Error) => {\n                  throw new Error('No se encontro la persona');\n                  })\n     );\n     }\n\n    eliminar(id: string): Observable {\n        const _id = new Types.ObjectId(id);\n        return from(this.personaModel.findByIdAndDelete(_id)).pipe(\n        catchError((error) => {\n            throw error;\n        }),\n        map((usuario) => {\n            if (!usuario) throw new NotFoundException('Persona no encontrada');\n            return true;\n      }),\n    );\n  }\n\n\n}\n\n// findAll(): Observable {\n    //     return from(this.personaModel.find()) //Como estoy usando lo inyectado y lo tipeo con PersonaDocument entonces siempre me va a devolver un array de PersonaDocument\n    //         .pipe(\n    //             map((persona: PersonaDocument[] ) =>  {\n    //                 return persona;\n    //             } ));\n    // }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PersonaSchema.html":{"url":"classes/PersonaSchema.html","title":"class - PersonaSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PersonaSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dataBase/schema/persona.shema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PersonaDomainEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                            \n                                nombre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PersonaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         PersonaDomainEntity:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, unique: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PersonaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         PersonaDomainEntity:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PersonaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         PersonaDomainEntity:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(clave: string)\n                \n            \n\n\n            \n                \n                    Inherited from         PersonaDomainEntity\n\n                \n            \n            \n                \n                        Defined in         PersonaDomainEntity:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clave\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { PersonaDomainEntity } from '../../../dominio/model/persona';\n\n\n@Schema({collection: 'Persona',versionKey: false})\nexport class PersonaSchema extends PersonaDomainEntity {\n  @Prop({\n      type: String,\n      index: true,\n      required: true,\n  })\n  nombre: string;\n\n  @Prop({\n      type: String,\n      index: true,\n      unique: true,\n      required: true,\n    })\n    mail: string;\n    \n    @Prop({\n        type: String,\n        index: true,\n        required: true,\n    })\n    clave: string;\n}\n\n/**\n * define la forma en que los documentos deben ser organizados dentro de una colección.\n * hidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n */\nexport type PersonaDocument = HydratedDocument;\n\nexport const personaSchemaFactory = SchemaFactory.createForClass(PersonaSchema);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaService.html":{"url":"injectables/PersonaService.html","title":"injectable - PersonaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/service/persona.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PersonaMongoService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizar\n                            \n                            \n                                eliminar\n                            \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizar\n                        \n                    \n                \n            \n            \n                \nactualizar(id: string, persona: PersonaSchema)\n                \n            \n\n\n            \n                \n                    Inherited from         PersonaMongoService\n\n                \n            \n            \n                \n                        Defined in         PersonaMongoService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    persona\n                                    \n                                                PersonaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminar\n                        \n                    \n                \n            \n            \n                \neliminar(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         PersonaMongoService\n\n                \n            \n            \n                \n                        Defined in         PersonaMongoService:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         PersonaMongoService\n\n                \n            \n            \n                \n                        Defined in         PersonaMongoService:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(persona: PersonaSchema)\n                \n            \n\n\n            \n                \n                    Inherited from         PersonaMongoService\n\n                \n            \n            \n                \n                        Defined in         PersonaMongoService:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    persona\n                                    \n                                                PersonaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PersonaMongoService } from '../dataBase/services/persona.service.mongo';\n\n@Injectable()\nexport class PersonaService extends PersonaMongoService  {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrarEmpresaDto.html":{"url":"classes/RegistrarEmpresaDto.html","title":"class - RegistrarEmpresaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrarEmpresaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dto/registrar-empresa.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EmpresaSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cantidadEmpleado\n                            \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                            \n                                nombre\n                            \n                            \n                                rubro\n                            \n                            \n                                rut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cantidadEmpleado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rubro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         EmpresaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         EmpresaDomainEntity:20\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(clave: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmpresaDomainEntity\n\n                \n            \n            \n                \n                        Defined in         EmpresaDomainEntity:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clave\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber, IsPositive, IsString } from \"class-validator\";\nimport { EmpresaSchema } from '../dataBase/schema/empresa.shema';\n\nexport class RegistrarEmpresaDto extends EmpresaSchema{\n    @IsString()\n    nombre: string;\n    \n    @IsEmail()\n    mail: string;\n        \n    @IsString()\n    clave: string;\n    \n    @IsNumber()\n    @IsPositive()\n    cantidadEmpleado:number;\n    \n    @IsNumber()\n    @IsPositive()\n    rut:number;\n    \n    @IsString()\n    rubro: string \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrarEmpresaUseCase.html":{"url":"classes/RegistrarEmpresaUseCase.html","title":"class - RegistrarEmpresaUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrarEmpresaUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/empresa/registrar-empresa.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(empresaService: EmpresaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/empresa/registrar-empresa.use-case.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        empresaService\n                                                  \n                                                        \n                                                                        EmpresaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: RegistrarEmpresaDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/empresa/registrar-empresa.use-case.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                RegistrarEmpresaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { RegistrarEmpresaDto } from \"../../../../src/infrastructura/dto/registrar-empresa.dto\";\nimport { EmpresaMongoService } from '../../../infrastructura/dataBase/services/empresa.service.mongo';\nimport { EmpresaSchema } from '../../../infrastructura/dataBase/schema/empresa.shema';\n\n\nexport class RegistrarEmpresaUseCase {  \n  \n        constructor(private readonly empresaService: EmpresaMongoService) { }\n\n        execute(dato: RegistrarEmpresaDto): Observable {\n            \n            const newEmpresa = new EmpresaSchema();\n\n            newEmpresa.mail = dato.mail;\n            newEmpresa.nombre = dato.nombre;\n            newEmpresa.setPassword(dato.clave);\n        \n            newEmpresa.cantidadEmpleado = dato.cantidadEmpleado;\n            newEmpresa.rut = dato.rut;\n            newEmpresa.rubro = dato.rubro;\n            \n            return this.empresaService.registar(newEmpresa);\n    }\n}\n\n\n\n\n\n//const observable = from(validate(dato));\n\n// return observable.pipe(\n//     mergeMap((errors : ValidationError[]) => {\n//         if (errors.length > 0) {\n//             throw new Error('Datos incorrectos');\n//         }\n\n//         const newEmpresa = new EmpresaDomainEntity();\n//         newEmpresa.mail = dato.mail;\n//         newEmpresa.nombre = dato.nombre;\n//         newEmpresa.setPassword(dato.clave);\n\n//         newEmpresa.cantidadEmpleado = dato.cantidadEmpleado;\n//         newEmpresa.rut = dato.rut;\n//         newEmpresa.rubro = dato.rubro;\n\n//         return of(newEmpresa);\n//     }),\n//     mergeMap((empresa:EmpresaDomainEntity) => {\n//         return this.empresaService.registar(empresa);\n//     }),\n//     catchError((error:Error) => {\n//         throw new Error(error.message);\n//     })); \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrarPersonaDto.html":{"url":"classes/RegistrarPersonaDto.html","title":"class - RegistrarPersonaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrarPersonaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/infrastructura/dto/registrar-persona.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PersonaSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clave\n                            \n                            \n                                mail\n                            \n                            \n                                nombre\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PersonaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         PersonaDomainEntity:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PersonaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         PersonaDomainEntity:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PersonaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         PersonaDomainEntity:6\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassword(clave: string)\n                \n            \n\n\n            \n                \n                    Inherited from         PersonaDomainEntity\n\n                \n            \n            \n                \n                        Defined in         PersonaDomainEntity:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clave\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from \"class-validator\";\nimport { PersonaSchema } from \"../dataBase/schema/persona.shema\";\n\nexport class RegistrarPersonaDto extends PersonaSchema{\n    @IsString()\n    nombre: string;\n\n    @IsEmail()\n    mail: string;\n\n    @IsString()\n    clave: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrarPersonaoUseCase.html":{"url":"classes/RegistrarPersonaoUseCase.html","title":"class - RegistrarPersonaoUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrarPersonaoUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/usuario/src/aplicacion/useCase/persona/registrar-persona.use-case.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usuarioService: PersonaMongoService)\n                    \n                \n                        \n                            \n                                Defined in apps/usuario/src/aplicacion/useCase/persona/registrar-persona.use-case.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usuarioService\n                                                  \n                                                        \n                                                                        PersonaMongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(dato: IDatosBasicosModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/usuario/src/aplicacion/useCase/persona/registrar-persona.use-case.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                IDatosBasicosModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PersonaDomainEntity } from '../../../dominio/model/persona';\nimport { IPersonaDomainService } from \"../../../dominio/services/persona.domain.service\";\nimport { IDatosBasicosModel } from '../../../dominio/model/interface/datos-basicos.interface';\nimport { Observable } from 'rxjs';\nimport { PersonaMongoService } from '../../../infrastructura/dataBase/services/persona.service.mongo';\nimport { PersonaSchema } from '../../../infrastructura/dataBase/schema/persona.shema';\n\n\nexport class RegistrarPersonaoUseCase {  \n  \n    constructor(private readonly usuarioService: PersonaMongoService) { }\n\n        execute(dato: IDatosBasicosModel): Observable {\n\n           \n            const newPersona = new PersonaDomainEntity();\n            newPersona.mail = dato.mail;\n            newPersona.nombre = dato.nombre;\n            newPersona.setPassword(dato.clave);\n            return this.usuarioService.registar(newPersona);\n    }\n}\n\n            //const observable = from(validate(dato));\n\n            // return observable.pipe(\n            //     mergeMap((errors : ValidationError[]) => {\n            //         if (errors.length > 0) {\n            //             throw new Error('Datos incorrectos');\n            //         }\n    \n            //         const newPersona = new PersonaDomainEntity();\n            //         newPersona.mail = dato.mail;\n            //         newPersona.nombre = dato.nombre;\n            //         newPersona.setPassword(dato.clave);\n            //         return of(newPersona);\n            //     }),\n            //     mergeMap((persona:PersonaDomainEntity) => {\n            //         return this.usuarioService.registar(persona);\n            //     }),\n            //     catchError((error:Error) => {\n            //         throw new Error(error.message);\n            //     }));\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UsuarioGuard.html":{"url":"guards/UsuarioGuard.html","title":"guard - UsuarioGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UsuarioGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/cuenta/src/infraestructura/utils/usuario.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/utils/usuario.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable, catchError ,of,map } from 'rxjs';\nimport * as jwt from 'jsonwebtoken';\n\n@Injectable()\nexport class UsuarioGuard implements CanActivate {\n  canActivate( context: ExecutionContext): Observable   {\n    const request = context.switchToHttp().getRequest();\n    const { token } = request.params; \n    const secret =  `tokenEntrada`;\n    const decodificar = jwt.verify(token, secret)\n\n    return of(decodificar)\n    .pipe(\n      map( () => {          \n          return true;}\n      ),\n      catchError(() => \n         of(false))\n    )\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuarioModule.html":{"url":"modules/UsuarioModule.html","title":"module - UsuarioModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuarioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsuarioModule\n\n\n\ncluster_UsuarioModule_imports\n\n\n\ncluster_UsuarioModule_providers\n\n\n\n\nMensajeriaModule\n\nMensajeriaModule\n\n\n\nUsuarioModule\n\nUsuarioModule\n\nUsuarioModule -->\n\nMensajeriaModule->UsuarioModule\n\n\n\n\n\nMongoModule\n\nMongoModule\n\nUsuarioModule -->\n\nMongoModule->UsuarioModule\n\n\n\n\n\nEmpresaRepository\n\nEmpresaRepository\n\nUsuarioModule -->\n\nEmpresaRepository->UsuarioModule\n\n\n\n\n\nEmpresaService\n\nEmpresaService\n\nUsuarioModule -->\n\nEmpresaService->UsuarioModule\n\n\n\n\n\nPersonaRepository\n\nPersonaRepository\n\nUsuarioModule -->\n\nPersonaRepository->UsuarioModule\n\n\n\n\n\nPersonaService\n\nPersonaService\n\nUsuarioModule -->\n\nPersonaService->UsuarioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/usuario/src/usuario.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmpresaRepository\n                        \n                        \n                            EmpresaService\n                        \n                        \n                            PersonaRepository\n                        \n                        \n                            PersonaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PersonaController\n                        \n                        \n                            EmpresaController\n                        \n                        \n                            EventoCuentaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MensajeriaModule\n                        \n                        \n                            MongoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongoModule } from './infrastructura/dataBase/mongoose.module';\nimport { PersonaService } from './infrastructura/service/persona.service';\nimport { PersonaController } from './infrastructura/controllers/persona.controller';\nimport { EmpresaRepository } from './infrastructura/dataBase/repository/empresa.repository';\nimport { PersonaRepository } from './infrastructura/dataBase/repository/persona.repositoy';\nimport { EmpresaService } from './infrastructura/service/empresa.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { EmpresaController } from './infrastructura/controllers/empresa.controller';\nimport { MensajeriaModule } from './infrastructura/messanging/mensajeria.module';\nimport { EventoCuentaController } from './evento-cuenta.controller';\n\n@Module({\n  imports: [\n    MensajeriaModule,\n    MongoModule, \n     ConfigModule.forRoot({\n       isGlobal: true,\n       envFilePath: join(\n         process.cwd(),\n         'environments',\n         `.env.${process.env.SCOPE?.trimEnd()}`,\n         ),\n       }),\n  ],\n  controllers: [\n    PersonaController,\n    EmpresaController,\n    EventoCuentaController\n    ],\n  providers: [\n  \n    ConfigService,\n\n    PersonaService,\n    EmpresaService,\n\n    EmpresaRepository,\n    PersonaRepository,\n  ],\n})\nexport class UsuarioModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VideoConferenciaController.html":{"url":"controllers/VideoConferenciaController.html","title":"controller - VideoConferenciaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VideoConferenciaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/controllers/video-conferencia.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                videoConferencia\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearVideoConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearVideoConferencia\n                        \n                    \n                \n            \n            \n                \ncrearVideoConferencia(token: string, dato: CrearVideoConferenciaDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Crear  VideoConferencia'})@UseGuards(UsuarioGuard)@Post('crear/:token')\n                \n            \n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/controllers/video-conferencia.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dato\n                                    \n                                                CrearVideoConferenciaDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, UseGuards } from \"@nestjs/common\";\nimport { Observable, switchMap } from \"rxjs\";\nimport { VideoConferenciaDomainEntity } from '../../dominio/model/entidades/video-conferencia.dominio.entidad';\nimport { VideoConferenciaService } from '../services/video-conferencia.service';\nimport { VideoConferenciaCreadaPublisher } from '../menssaging/publisher/video-conferencia/video-conferencia-creada.publisher';\nimport { CrearVideoConferenciaDTO } from \"../dto/crear-video-conferencia.dto\";\nimport { CrearVideoConferenciaUseCase } from \"../../aplicacion/casoDeUso/videoConferencia/crear-video-conferencia.use-case\";\nimport { UsuarioGuard } from '../utils/usuario.guard';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n\n\n@ApiTags('VideoConferencia')\n@Controller('videoConferencia')\nexport class VideoConferenciaController {\n    constructor(\n        private readonly videoConferenciaService: VideoConferenciaService,\n        private readonly videoConferenciaRegistradaPublisher : VideoConferenciaCreadaPublisher,\n\n    ) {}\n\n    @ApiOperation ({summary: \"Crear  VideoConferencia\"})\n    @UseGuards(UsuarioGuard)\n    @Post('crear/:token')\n     /**\n      * The function receives a token and a CrearVideoConferenciaDTO object, then it creates a\n      * CrearVideoConferenciaUseCase object, then it calls the publisher function of the\n      * videoConferenciaRegistradaPublisher object, then it calls the execute function of the\n      * CrearVideoConferenciaUseCase object, then it returns the result of the execute function\n      * @param {string} token - string -&gt; The token that is sent by the client\n      * @param {CrearVideoConferenciaDTO} dato - CrearVideoConferenciaDTO\n      * @returns The return is a VideoConferenciaDomainEntity\n      */\n     crearVideoConferencia(@Param('token') token: string ,@Body() dato: CrearVideoConferenciaDTO):Observable {\n        const caso  = new  CrearVideoConferenciaUseCase(this.videoConferenciaService);\n        return this.videoConferenciaRegistradaPublisher.publisher(dato.anfitrion)\n            .pipe(\n                switchMap(\n                    (value :string) => {\n                        return  caso.execute({anfitrion:value});\n                    }\n                )\n            );\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideoConferenciaCreadaPublisher.html":{"url":"injectables/VideoConferenciaCreadaPublisher.html","title":"injectable - VideoConferenciaCreadaPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideoConferenciaCreadaPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/video-conferencia-creada.publisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                publisher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/video-conferencia-creada.publisher.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n            \n                \npublisher(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/video-conferencia-creada.publisher.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\n import { ClientProxy } from \"@nestjs/microservices\";\n import { Observable, map } from \"rxjs\";\n\n\n @Injectable()\n export class VideoConferenciaCreadaPublisher {\n\n     constructor(\n         @Inject('CUENTA_SERVICE') private readonly clienProxy: ClientProxy,\n     ) { }\n\n     publisher(data: string): Observable {\n        return this.clienProxy\n            .send('cuenta.videoConferencia.creada',data).pipe(\n                map((res : string) =>   res )\n                // ,\n                // retry(2)\n                );\n      }\n}\n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VideoConferenciaDomainEntity.html":{"url":"classes/VideoConferenciaDomainEntity.html","title":"class - VideoConferenciaDomainEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VideoConferenciaDomainEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IVideoConferencia\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anfitrion\n                            \n                            \n                                    Optional\n                                chatVivo\n                            \n                            \n                                    Optional\n                                compartirArchivo\n                            \n                            \n                                    Optional\n                                grabacion\n                            \n                            \n                                    Optional\n                                participante\n                            \n                            \n                                    Optional\n                                pizzarra\n                            \n                            \n                                    Optional\n                                presentacion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_dato?: IVideoConferencia)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dato\n                                                  \n                                                        \n                                                                        IVideoConferencia\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anfitrion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chatVivo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        compartirArchivo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        grabacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        participante\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pizzarra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        presentacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IVideoConferencia } from '../interfaces/video-conferencia.dominio.interfaces';\n\nexport class VideoConferenciaDomainEntity implements IVideoConferencia {\n   \n    anfitrion: string;\n    participante?: string[];\n    chatVivo?: boolean;\n    grabacion?: boolean;\n    pizzarra?: boolean;\n    compartirArchivo?: boolean;\n    presentacion?: boolean;\n\n    constructor(_dato?: IVideoConferencia) {\n\n        if (_dato?.anfitrion)\n            this.anfitrion = _dato.anfitrion;\n\n        if (_dato?.participante)\n            this.participante = _dato.participante;\n        \n        if (_dato?.chatVivo)\n        this.chatVivo = _dato.chatVivo;\n\n        if (_dato?.grabacion)\n        this.grabacion = _dato.grabacion;\n\n        if (_dato?.pizzarra)\n        this.pizzarra = _dato.pizzarra;\n\n        if (_dato?.compartirArchivo)\n        this.compartirArchivo = _dato.compartirArchivo;\n        \n        if (_dato?.presentacion)\n        this.presentacion = _dato.presentacion;\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideoConferenciaMongoService.html":{"url":"injectables/VideoConferenciaMongoService.html","title":"injectable - VideoConferenciaMongoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideoConferenciaMongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/services/video-conferencia.service.mongo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearVideoConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(videoConferenciaRepository: VideoConferenciaRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/dataBase/services/video-conferencia.service.mongo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        videoConferenciaRepository\n                                                  \n                                                        \n                                                                        VideoConferenciaRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearVideoConferencia\n                        \n                    \n                \n            \n            \n                \ncrearVideoConferencia(dato: VideoConferenciaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/dataBase/services/video-conferencia.service.mongo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                VideoConferenciaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { IVideoConferenciaDomainService } from '../../../dominio/services/video-conferencia.service';\nimport { VideoConferenciaSchema } from '../schema/video-conferencia.schema';\nimport { VideoConferenciaRepository } from '../repository/video-conferencia.repositoy';\n\n@Injectable()\nexport class VideoConferenciaMongoService\n  implements IVideoConferenciaDomainService\n{\n \n  constructor(private readonly videoConferenciaRepository: VideoConferenciaRepository) {}\n\n    crearVideoConferencia(dato: VideoConferenciaSchema): Observable {\n        return this.videoConferenciaRepository.registar(dato);\n    }\n    // findOneBy(id: string): Observable {\n    //     return this.videoConferenciaRepository.findOneBy(id);\n    // }\n    // findAll(): Observable {\n    //     return this.videoConferenciaRepository.findAll();\n    // }\n    // ActualizarVideoConferencia(id: string, dato: VideoConferenciaSchema): Observable {\n    //    return this.videoConferenciaRepository.actualizar(id, dato);\n    // }\n    //  eliminarVideoConferencia(id: string): Observable {\n    //      return this.videoConferenciaRepository.eliminar(id);\n    //  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideoConferenciaRepository.html":{"url":"injectables/VideoConferenciaRepository.html","title":"injectable - VideoConferenciaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideoConferenciaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/repository/video-conferencia.repositoy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOneBy\n                            \n                            \n                                registar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(videoConferenciaModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/cuenta/src/infraestructura/dataBase/repository/video-conferencia.repositoy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        videoConferenciaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/dataBase/repository/video-conferencia.repositoy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registar\n                        \n                    \n                \n            \n            \n                \nregistar(dato: VideoConferenciaSchema)\n                \n            \n\n\n            \n                \n                    Defined in apps/cuenta/src/infraestructura/dataBase/repository/video-conferencia.repositoy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                VideoConferenciaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\n\nimport { Model } from \"mongoose\";\nimport { Observable, catchError, from, map } from \"rxjs\";\nimport { ICuentaRepository } from '../../../dominio/repositorios/cuenta-conferencia.repositorio';\nimport { VideoConferenciaSchema, videoConferenciaDocument } from '../schema/video-conferencia.schema';\n\n@Injectable()\nexport class VideoConferenciaRepository implements ICuentaRepository{\n    \n    constructor(\n        @InjectModel(VideoConferenciaSchema.name) private readonly videoConferenciaModel: Model\n        ) { }\n    \n    registar(dato: VideoConferenciaSchema): Observable {\n        console.log(\"Repo de videoConferencia\",dato);\n        return from(this.videoConferenciaModel.create(dato));\n    }\n\n\n    findOneBy(id: string): Observable {\n        return from(this.videoConferenciaModel.findById(id))\n            .pipe(\n                catchError((err:Error) => {\n                    throw new Error(err.message);\n                }\n            ));\n    }\n\n    // actualizar(id:string ,dato: VideoConferenciaSchema): Observable {\n    //     return from(this.videoConferenciaModel.findByIdAndUpdate(id, dato, {new: true}))\n    //         .pipe(\n    //              catchError((err : Error) => {\n    //              throw new Error('No se encontro la VideoConferencia');\n    //              })\n    // );\n\n    // }\n\n    // eliminar(id: string): Observable {\n    //     return from(this.videoConferenciaModel.findByIdAndDelete(id))\n    //     .pipe(\n    //         catchError((err:Error) => {\n    //             throw new Error('No se encontro la VideoConferencia');\n    //         })\n    //     );\n    // }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VideoConferenciaSchema.html":{"url":"classes/VideoConferenciaSchema.html","title":"class - VideoConferenciaSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VideoConferenciaSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/dataBase/schema/video-conferencia.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        VideoConferenciaDomainEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anfitrion\n                            \n                            \n                                chatVivo\n                            \n                            \n                                compartirArchivo\n                            \n                            \n                                grabacion\n                            \n                            \n                                participante\n                            \n                            \n                                pizzarra\n                            \n                            \n                                presentacion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anfitrion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, index: true, unique: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatVivo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compartirArchivo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grabacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participante\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pizzarra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        presentacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         VideoConferenciaDomainEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         VideoConferenciaDomainEntity:51\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { VideoConferenciaDomainEntity } from '../../../dominio/model/entidades/video-conferencia.dominio.entidad';\n\n\n@Schema({collection: 'VideoConferencia',versionKey: false})\nexport class VideoConferenciaSchema extends VideoConferenciaDomainEntity {\n\n\n    @Prop({\n        type: String,\n        index: true,\n        unique: true,\n        required: true,\n      })\n      anfitrion: string;\n  \n    @Prop({\n        type: Boolean,\n        index: true,\n      \n    })\n    chatVivo: boolean;\n\n    @Prop({\n        type: Boolean,\n        index: true,\n       \n    })\n    grabacion: boolean;\n\n    @Prop({\n        type: Boolean,\n        index: true,\n      \n      \n    })\n    pizzarra: boolean;\n    @Prop({\n        type: Boolean,\n        index: true,\n        \n        \n    })\n    compartirArchivo: boolean;\n\n    @Prop({\n        type: Boolean,\n        index: true,\n    })\n    presentacion: boolean;\n  \n\n\n    @Prop({\n        type: [String],\n        index: true,\n      })\n    participante: string[];\n    \n  \n}\n\n/**\n * define la forma en que los documentos deben ser organizados dentro de una colección.\n * hidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n */\nexport type videoConferenciaDocument = HydratedDocument;\n\nexport const VideoconferenciaFactory = SchemaFactory.createForClass(VideoConferenciaSchema);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VideoConferenciaService.html":{"url":"classes/VideoConferenciaService.html","title":"class - VideoConferenciaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VideoConferenciaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/cuenta/src/infraestructura/services/video-conferencia.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        VideoConferenciaMongoService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearVideoConferencia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearVideoConferencia\n                        \n                    \n                \n            \n            \n                \ncrearVideoConferencia(dato: VideoConferenciaSchema)\n                \n            \n\n\n            \n                \n                    Inherited from         VideoConferenciaMongoService\n\n                \n            \n            \n                \n                        Defined in         VideoConferenciaMongoService:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dato\n                                    \n                                                VideoConferenciaSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { VideoConferenciaMongoService } from '../dataBase/services/video-conferencia.service.mongo';\n\nexport class VideoConferenciaService extends VideoConferenciaMongoService{\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/cuenta/src/aplicacion/casoDeUso/audioConferencia/crear-audio-conferencia.use-case.ts\n            \n            class\n            CrearAudioConferenciaUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/aplicacion/casoDeUso/videoConferencia/crear-video-conferencia.use-case.ts\n            \n            class\n            CrearVideoConferenciaUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/model/entidades/audio-conferencia.dominio.entidad.ts\n            \n            class\n            AudioConferenciaDomainEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/model/entidades/video-conferencia.dominio.entidad.ts\n            \n            class\n            VideoConferenciaDomainEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/model/interfaces/audio-conferencia.dominio.interfaces.ts\n            \n            interface\n            IAudioConferencia\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/model/interfaces/empresa.dominio.interface.usuario.ts\n            \n            interface\n            IEmpresaCuenta\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/model/interfaces/persona.domain.interface.usuario.ts\n            \n            interface\n            IPersonaCuenta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/model/interfaces/video-conferencia.dominio.interfaces.ts\n            \n            interface\n            IVideoConferencia\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/repositorios/cuenta-conferencia.repositorio.ts\n            \n            interface\n            ICuentaRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/services/audio-conferencia.service.ts\n            \n            interface\n            IAudioConferenciaDomainService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/dominio/services/video-conferencia.service.ts\n            \n            interface\n            IVideoConferenciaDomainService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/evento.controller.ts\n            \n            controller\n            EventoController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/controllers/audio-conferencia.controller.ts\n            \n            controller\n            AudioConferenciaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/controllers/video-conferencia.controller.ts\n            \n            controller\n            VideoConferenciaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/config/mongoose.config.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/repository/audio-conferencia.repositoy.ts\n            \n            injectable\n            AudioConferenciaRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/repository/video-conferencia.repositoy.ts\n            \n            injectable\n            VideoConferenciaRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/schema/audio-conferencia.schema.ts\n            \n            class\n            AudioConferenciaSchema\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/schema/audio-conferencia.schema.ts\n            \n            variable\n            AudioconferenciaFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/schema/video-conferencia.schema.ts\n            \n            class\n            VideoConferenciaSchema\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/schema/video-conferencia.schema.ts\n            \n            variable\n            VideoconferenciaFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/services/audio-conferencia.service.mongo.ts\n            \n            injectable\n            AudioConferenciaMongoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dataBase/services/video-conferencia.service.mongo.ts\n            \n            injectable\n            VideoConferenciaMongoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dto/crear-audio-conferencia.dto.ts\n            \n            class\n            CrearAudioConferenciaDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/dto/crear-video-conferencia.dto.ts\n            \n            class\n            CrearVideoConferenciaDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/exception-filters/mongo-server-error.exception-filter.ts\n            \n            class\n            MongoServerErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/audio-conferencia-creada.publisher.ts\n            \n            injectable\n            AudioConferenciaCreadaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/menssaging/publisher/video-conferencia/video-conferencia-creada.publisher.ts\n            \n            injectable\n            VideoConferenciaCreadaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/services/audio-conferencia.service.ts\n            \n            class\n            AudioConferenciaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/services/video-conferencia.service.ts\n            \n            class\n            VideoConferenciaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/infraestructura/utils/usuario.guard.ts\n            \n            guard\n            UsuarioGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/cuenta/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/empresa/buscar-empresa.use.case.ts\n            \n            class\n            BuscarEmpresaUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/empresa/registrar-empresa.use-case.ts\n            \n            class\n            RegistrarEmpresaUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/persona/buscar-persona.use-case.ts\n            \n            class\n            BuscarPersonaUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/persona/editar-persona.use-case.ts\n            \n            class\n            EditarPersonaoUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/persona/eliminar-persona.use-case.ts\n            \n            class\n            EliminarPersonaoUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/persona/login-persona.use-case.ts\n            \n            class\n            LogearPersonaoUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/aplicacion/useCase/persona/registrar-persona.use-case.ts\n            \n            class\n            RegistrarPersonaoUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/model/empresa.model.ts\n            \n            class\n            EmpresaDomainEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/model/interface/PersonaLogeada.model.ts\n            \n            interface\n            IPersonaLogeada\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/model/interface/datos-basicos.interface.ts\n            \n            interface\n            IDatosBasicosModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/model/interface/empresa.interface.ts\n            \n            interface\n            IEmpresaDomainModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/model/interface/login.model.ts\n            \n            interface\n            ILoginModelDomain\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/model/persona.ts\n            \n            class\n            PersonaDomainEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/repositories/usuario-repository-base.repositoy.ts\n            \n            interface\n            IUsuarioRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/services/empresa.domain.service.ts\n            \n            interface\n            IEmpresaDomainService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/dominio/services/persona.domain.service.ts\n            \n            interface\n            IPersonaDomainService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/usuario/src/evento-cuenta.controller.ts\n            \n            controller\n            EventoCuentaController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/controllers/empresa.controller.ts\n            \n            controller\n            EmpresaController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/controllers/persona.controller.ts\n            \n            controller\n            PersonaController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/config/mongoose.config.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/repository/empresa.repository.ts\n            \n            injectable\n            EmpresaRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/repository/persona.repositoy.ts\n            \n            injectable\n            PersonaRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/schema/empresa.shema.ts\n            \n            class\n            EmpresaSchema\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/schema/empresa.shema.ts\n            \n            variable\n            EmpresaSchemaFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/schema/persona.shema.ts\n            \n            class\n            PersonaSchema\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/schema/persona.shema.ts\n            \n            variable\n            personaSchemaFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/services/empresa.service.mongo.ts\n            \n            injectable\n            EmpresaMongoService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dataBase/services/persona.service.mongo.ts\n            \n            injectable\n            PersonaMongoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dto/buscar-mail..dto.ts\n            \n            class\n            BuscarMail\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dto/logarse.dto.ts\n            \n            class\n            LogearseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dto/registrar-empresa.dto.ts\n            \n            class\n            RegistrarEmpresaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/dto/registrar-persona.dto.ts\n            \n            class\n            RegistrarPersonaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-buscada.publisher.ts\n            \n            injectable\n            EmpresaBuscadaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/messanging/publisher/empresa/empresa-registrada.publisher.ts\n            \n            injectable\n            EmpresaRegistradaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/messanging/publisher/persona/persona-buscada.publisher.ts\n            \n            injectable\n            PersonaBuscadaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/messanging/publisher/persona/persona-editada.publisher.ts\n            \n            injectable\n            PersonaEditadaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/messanging/publisher/persona/persona-eliminada.publisher.ts\n            \n            injectable\n            PersonaEliminadaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/messanging/publisher/persona/persona-registrado.publisher.ts\n            \n            injectable\n            PersonaRegistradaPublisher\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/service/empresa.service.ts\n            \n            injectable\n            EmpresaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/usuario/src/infrastructura/service/persona.service.ts\n            \n            injectable\n            PersonaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/usuario/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/microservices : ^9.3.12\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            amqp-connection-manager : ^4.1.11\n        \n            amqplib : ^0.10.3\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            jsonwebtoken : ^9.0.0\n        \n            mongoose : ^7.0.2\n        \n            mqtt : ^4.3.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/cuenta/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/usuario/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CuentaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MensajeriaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MensajeriaModuleCuenta\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoModuleCuenta\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuarioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CuentaModule\n\n\n\ncluster_CuentaModule_imports\n\n\n\ncluster_CuentaModule_providers\n\n\n\ncluster_MensajeriaModule\n\n\n\ncluster_MensajeriaModule_exports\n\n\n\ncluster_MensajeriaModule_providers\n\n\n\ncluster_MensajeriaModuleCuenta\n\n\n\ncluster_MensajeriaModuleCuenta_exports\n\n\n\ncluster_MensajeriaModuleCuenta_providers\n\n\n\ncluster_MongoModule\n\n\n\ncluster_MongoModule_exports\n\n\n\ncluster_MongoModule_providers\n\n\n\ncluster_MongoModuleCuenta\n\n\n\ncluster_MongoModuleCuenta_exports\n\n\n\ncluster_MongoModuleCuenta_providers\n\n\n\ncluster_UsuarioModule\n\n\n\ncluster_UsuarioModule_providers\n\n\n\n\nMensajeriaModuleCuenta\n\nMensajeriaModuleCuenta\n\n\n\nCuentaModule\n\nCuentaModule\n\nCuentaModule -->\n\nMensajeriaModuleCuenta->CuentaModule\n\n\n\n\n\nAudioConferenciaCreadaPublisher \n\nAudioConferenciaCreadaPublisher \n\nAudioConferenciaCreadaPublisher  -->\n\nMensajeriaModuleCuenta->AudioConferenciaCreadaPublisher \n\n\n\n\n\nVideoConferenciaCreadaPublisher \n\nVideoConferenciaCreadaPublisher \n\nVideoConferenciaCreadaPublisher  -->\n\nMensajeriaModuleCuenta->VideoConferenciaCreadaPublisher \n\n\n\n\n\nMongoModuleCuenta\n\nMongoModuleCuenta\n\nCuentaModule -->\n\nMongoModuleCuenta->CuentaModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nMongoModuleCuenta->ConfigService \n\n\n\n\n\nMongooseConfigService \n\nMongooseConfigService \n\nMongooseConfigService  -->\n\nMongoModuleCuenta->MongooseConfigService \n\n\n\n\n\nAudioConferenciaMongoService \n\nAudioConferenciaMongoService \n\nAudioConferenciaMongoService  -->\n\nMongoModuleCuenta->AudioConferenciaMongoService \n\n\n\n\n\nAudioConferenciaRepository \n\nAudioConferenciaRepository \n\nAudioConferenciaRepository  -->\n\nMongoModuleCuenta->AudioConferenciaRepository \n\n\n\n\n\nVideoConferenciaMongoService \n\nVideoConferenciaMongoService \n\nVideoConferenciaMongoService  -->\n\nMongoModuleCuenta->VideoConferenciaMongoService \n\n\n\n\n\nVideoConferenciaRepository \n\nVideoConferenciaRepository \n\nVideoConferenciaRepository  -->\n\nMongoModuleCuenta->VideoConferenciaRepository \n\n\n\n\n\nAudioConferenciaRepository\n\nAudioConferenciaRepository\n\nMongoModuleCuenta -->\n\nAudioConferenciaRepository->MongoModuleCuenta\n\n\n\nCuentaModule -->\n\nAudioConferenciaRepository->CuentaModule\n\n\n\n\n\nVideoConferenciaRepository\n\nVideoConferenciaRepository\n\nMongoModuleCuenta -->\n\nVideoConferenciaRepository->MongoModuleCuenta\n\n\n\nCuentaModule -->\n\nVideoConferenciaRepository->CuentaModule\n\n\n\n\n\nEmpresaBuscadaPublisher \n\nEmpresaBuscadaPublisher \n\n\n\nEmpresaRegistradaPublisher \n\nEmpresaRegistradaPublisher \n\n\n\nPersonaBuscadaPublisher \n\nPersonaBuscadaPublisher \n\n\n\nPersonaEditadaPublisher \n\nPersonaEditadaPublisher \n\n\n\nPersonaEliminadaPublisher \n\nPersonaEliminadaPublisher \n\n\n\nPersonaRegistradaPublisher \n\nPersonaRegistradaPublisher \n\n\n\nMensajeriaModule\n\nMensajeriaModule\n\nEmpresaBuscadaPublisher  -->\n\nMensajeriaModule->EmpresaBuscadaPublisher \n\n\n\nEmpresaRegistradaPublisher  -->\n\nMensajeriaModule->EmpresaRegistradaPublisher \n\n\n\nPersonaBuscadaPublisher  -->\n\nMensajeriaModule->PersonaBuscadaPublisher \n\n\n\nPersonaEditadaPublisher  -->\n\nMensajeriaModule->PersonaEditadaPublisher \n\n\n\nPersonaEliminadaPublisher  -->\n\nMensajeriaModule->PersonaEliminadaPublisher \n\n\n\nPersonaRegistradaPublisher  -->\n\nMensajeriaModule->PersonaRegistradaPublisher \n\n\n\n\n\nUsuarioModule\n\nUsuarioModule\n\nUsuarioModule -->\n\nMensajeriaModule->UsuarioModule\n\n\n\n\n\nEmpresaBuscadaPublisher\n\nEmpresaBuscadaPublisher\n\nMensajeriaModule -->\n\nEmpresaBuscadaPublisher->MensajeriaModule\n\n\n\n\n\nEmpresaRegistradaPublisher\n\nEmpresaRegistradaPublisher\n\nMensajeriaModule -->\n\nEmpresaRegistradaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaBuscadaPublisher\n\nPersonaBuscadaPublisher\n\nMensajeriaModule -->\n\nPersonaBuscadaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaEditadaPublisher\n\nPersonaEditadaPublisher\n\nMensajeriaModule -->\n\nPersonaEditadaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaEliminadaPublisher\n\nPersonaEliminadaPublisher\n\nMensajeriaModule -->\n\nPersonaEliminadaPublisher->MensajeriaModule\n\n\n\n\n\nPersonaRegistradaPublisher\n\nPersonaRegistradaPublisher\n\nMensajeriaModule -->\n\nPersonaRegistradaPublisher->MensajeriaModule\n\n\n\n\n\nAudioConferenciaCreadaPublisher\n\nAudioConferenciaCreadaPublisher\n\nMensajeriaModuleCuenta -->\n\nAudioConferenciaCreadaPublisher->MensajeriaModuleCuenta\n\n\n\n\n\nVideoConferenciaCreadaPublisher\n\nVideoConferenciaCreadaPublisher\n\nMensajeriaModuleCuenta -->\n\nVideoConferenciaCreadaPublisher->MensajeriaModuleCuenta\n\n\n\n\n\nEmpresaMongoService \n\nEmpresaMongoService \n\n\n\nEmpresaRepository \n\nEmpresaRepository \n\n\n\nPersonaMongoService \n\nPersonaMongoService \n\n\n\nPersonaRepository \n\nPersonaRepository \n\n\n\nMongoModule\n\nMongoModule\n\nConfigService  -->\n\nMongoModule->ConfigService \n\n\n\nEmpresaMongoService  -->\n\nMongoModule->EmpresaMongoService \n\n\n\nEmpresaRepository  -->\n\nMongoModule->EmpresaRepository \n\n\n\nMongooseConfigService  -->\n\nMongoModule->MongooseConfigService \n\n\n\nPersonaMongoService  -->\n\nMongoModule->PersonaMongoService \n\n\n\nPersonaRepository  -->\n\nMongoModule->PersonaRepository \n\n\n\nUsuarioModule -->\n\nMongoModule->UsuarioModule\n\n\n\n\n\nEmpresaMongoService\n\nEmpresaMongoService\n\nMongoModule -->\n\nEmpresaMongoService->MongoModule\n\n\n\n\n\nEmpresaRepository\n\nEmpresaRepository\n\nMongoModule -->\n\nEmpresaRepository->MongoModule\n\n\n\nUsuarioModule -->\n\nEmpresaRepository->UsuarioModule\n\n\n\n\n\nMongooseConfigService\n\nMongooseConfigService\n\nMongoModuleCuenta -->\n\nMongooseConfigService->MongoModuleCuenta\n\n\n\nMongoModule -->\n\nMongooseConfigService->MongoModule\n\n\n\n\n\nPersonaMongoService\n\nPersonaMongoService\n\nMongoModule -->\n\nPersonaMongoService->MongoModule\n\n\n\n\n\nPersonaRepository\n\nPersonaRepository\n\nMongoModule -->\n\nPersonaRepository->MongoModule\n\n\n\nUsuarioModule -->\n\nPersonaRepository->UsuarioModule\n\n\n\n\n\nAudioConferenciaMongoService\n\nAudioConferenciaMongoService\n\nMongoModuleCuenta -->\n\nAudioConferenciaMongoService->MongoModuleCuenta\n\n\n\n\n\nVideoConferenciaMongoService\n\nVideoConferenciaMongoService\n\nMongoModuleCuenta -->\n\nVideoConferenciaMongoService->MongoModuleCuenta\n\n\n\n\n\nEmpresaService\n\nEmpresaService\n\nUsuarioModule -->\n\nEmpresaService->UsuarioModule\n\n\n\n\n\nPersonaService\n\nPersonaService\n\nUsuarioModule -->\n\nPersonaService->UsuarioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AudioConferenciaDocument   (apps/.../audio-conferencia.schema.ts)\n                        \n                        \n                            EmpresaDocument   (apps/.../empresa.shema.ts)\n                        \n                        \n                            PersonaDocument   (apps/.../persona.shema.ts)\n                        \n                        \n                            videoConferenciaDocument   (apps/.../video-conferencia.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/cuenta/src/infraestructura/dataBase/schema/audio-conferencia.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AudioConferenciaDocument\n                \n            \n            \n                \n                    define la forma en que los documentos deben ser organizados dentro de una colección.\nhidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    apps/usuario/src/infrastructura/dataBase/schema/empresa.shema.ts\n    \n    \n        \n            \n                \n                    \n                    EmpresaDocument\n                \n            \n            \n                \n                    define la forma en que los documentos deben ser organizados dentro de una colección.\nhidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    apps/usuario/src/infrastructura/dataBase/schema/persona.shema.ts\n    \n    \n        \n            \n                \n                    \n                    PersonaDocument\n                \n            \n            \n                \n                    define la forma en que los documentos deben ser organizados dentro de una colección.\nhidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    apps/cuenta/src/infraestructura/dataBase/schema/video-conferencia.schema.ts\n    \n    \n        \n            \n                \n                    \n                    videoConferenciaDocument\n                \n            \n            \n                \n                    define la forma en que los documentos deben ser organizados dentro de una colección.\nhidrata el esquema ya definido de nodejs y mongoose para que sea como un documento de mongoDB\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AudioconferenciaFactory   (apps/.../audio-conferencia.schema.ts)\n                        \n                        \n                            EmpresaSchemaFactory   (apps/.../empresa.shema.ts)\n                        \n                        \n                            personaSchemaFactory   (apps/.../persona.shema.ts)\n                        \n                        \n                            VideoconferenciaFactory   (apps/.../video-conferencia.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/cuenta/src/infraestructura/dataBase/schema/audio-conferencia.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AudioconferenciaFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AudioConferenciaSchema)\n                    \n                \n\n\n        \n    \n\n    apps/usuario/src/infrastructura/dataBase/schema/empresa.shema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmpresaSchemaFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmpresaSchema)\n                    \n                \n\n\n        \n    \n\n    apps/usuario/src/infrastructura/dataBase/schema/persona.shema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        personaSchemaFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PersonaSchema)\n                    \n                \n\n\n        \n    \n\n    apps/cuenta/src/infraestructura/dataBase/schema/video-conferencia.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VideoconferenciaFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(VideoConferenciaSchema)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
